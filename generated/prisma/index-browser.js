
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  monash_email: 'monash_email',
  username: 'username',
  password_hash: 'password_hash',
  first_name: 'first_name',
  last_name: 'last_name',
  profile_picture_url: 'profile_picture_url',
  bio: 'bio',
  karma_points: 'karma_points',
  year_of_study: 'year_of_study',
  is_verified_student: 'is_verified_student',
  created_at: 'created_at',
  updated_at: 'updated_at',
  campus_id: 'campus_id',
  faculty_id: 'faculty_id',
  course_id: 'course_id'
};

exports.Prisma.CampusScalarFieldEnum = {
  campus_id: 'campus_id',
  campus_name: 'campus_name',
  location_details: 'location_details',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FacultyScalarFieldEnum = {
  faculty_id: 'faculty_id',
  faculty_name: 'faculty_name',
  faculty_abbreviation: 'faculty_abbreviation',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CourseScalarFieldEnum = {
  course_code: 'course_code',
  course_name: 'course_name',
  course_description: 'course_description',
  created_at: 'created_at',
  updated_at: 'updated_at',
  faculty_id: 'faculty_id'
};

exports.Prisma.UnitScalarFieldEnum = {
  unit_code: 'unit_code',
  unit_name: 'unit_name',
  unit_description: 'unit_description',
  semester_offered: 'semester_offered',
  year_level: 'year_level',
  created_at: 'created_at',
  updated_at: 'updated_at',
  faculty_id: 'faculty_id'
};

exports.Prisma.CommunityScalarFieldEnum = {
  community_id: 'community_id',
  name: 'name',
  display_name: 'display_name',
  description: 'description',
  community_type: 'community_type',
  profile_image_url: 'profile_image_url',
  banner_image_url: 'banner_image_url',
  is_private: 'is_private',
  rules: 'rules',
  created_at: 'created_at',
  updated_at: 'updated_at',
  creator_id: 'creator_id',
  related_campus_id: 'related_campus_id',
  related_faculty_id: 'related_faculty_id',
  related_course_id: 'related_course_id',
  related_unit_id: 'related_unit_id'
};

exports.Prisma.PostScalarFieldEnum = {
  post_id: 'post_id',
  title: 'title',
  content_type: 'content_type',
  text_content: 'text_content',
  media_url: 'media_url',
  upvotes: 'upvotes',
  downvotes: 'downvotes',
  score: 'score',
  flair_text: 'flair_text',
  is_stickied: 'is_stickied',
  is_locked: 'is_locked',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  user_id: 'user_id',
  community_id: 'community_id'
};

exports.Prisma.CommentScalarFieldEnum = {
  comment_id: 'comment_id',
  content: 'content',
  upvotes: 'upvotes',
  downvotes: 'downvotes',
  score: 'score',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  post_id: 'post_id',
  user_id: 'user_id',
  parent_comment_id: 'parent_comment_id'
};

exports.Prisma.VoteScalarFieldEnum = {
  vote_id: 'vote_id',
  vote_type: 'vote_type',
  created_at: 'created_at',
  user_id: 'user_id',
  post_id: 'post_id',
  comment_id: 'comment_id'
};

exports.Prisma.CommunityMembershipScalarFieldEnum = {
  membership_id: 'membership_id',
  role: 'role',
  joined_at: 'joined_at',
  user_id: 'user_id',
  community_id: 'community_id'
};

exports.Prisma.ModeratorScalarFieldEnum = {
  moderator_id: 'moderator_id',
  permissions: 'permissions',
  appointed_at: 'appointed_at',
  user_id: 'user_id',
  community_id: 'community_id'
};

exports.Prisma.UserUnitEnrollmentScalarFieldEnum = {
  enrollment_id: 'enrollment_id',
  enrollment_year: 'enrollment_year',
  enrollment_semester: 'enrollment_semester',
  status: 'status',
  user_id: 'user_id',
  unit_id: 'unit_id'
};

exports.Prisma.SavedContentScalarFieldEnum = {
  saved_id: 'saved_id',
  saved_at: 'saved_at',
  user_id: 'user_id',
  post_id: 'post_id',
  comment_id: 'comment_id'
};

exports.Prisma.NotificationScalarFieldEnum = {
  notification_id: 'notification_id',
  type: 'type',
  content_preview: 'content_preview',
  is_read: 'is_read',
  created_at: 'created_at',
  recipient_user_id: 'recipient_user_id',
  sender_user_id: 'sender_user_id',
  related_post_id: 'related_post_id',
  related_comment_id: 'related_comment_id',
  related_community_id: 'related_community_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.CommunityType = exports.$Enums.CommunityType = {
  General: 'General',
  Campus: 'Campus',
  Faculty: 'Faculty',
  Course: 'Course',
  Unit: 'Unit',
  Interest_Group: 'Interest_Group',
  Club_Society: 'Club_Society'
};

exports.PostContentType = exports.$Enums.PostContentType = {
  Text: 'Text',
  Image: 'Image',
  Link: 'Link',
  Video: 'Video'
};

exports.VoteType = exports.$Enums.VoteType = {
  Upvote: 'Upvote',
  Downvote: 'Downvote'
};

exports.MembershipRole = exports.$Enums.MembershipRole = {
  Member: 'Member',
  Moderator: 'Moderator',
  Admin: 'Admin'
};

exports.EnrollmentStatus = exports.$Enums.EnrollmentStatus = {
  Enrolled: 'Enrolled',
  Completed: 'Completed',
  Withdrawn: 'Withdrawn'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  New_Comment_Reply: 'New_Comment_Reply',
  Post_Reply: 'Post_Reply',
  Mention_In_Post: 'Mention_In_Post',
  Mention_In_Comment: 'Mention_In_Comment',
  New_Post_In_Community: 'New_Post_In_Community',
  Upvote_Post: 'Upvote_Post',
  Upvote_Comment: 'Upvote_Comment',
  Community_Invite: 'Community_Invite',
  Moderator_Action: 'Moderator_Action'
};

exports.Prisma.ModelName = {
  User: 'User',
  Campus: 'Campus',
  Faculty: 'Faculty',
  Course: 'Course',
  Unit: 'Unit',
  Community: 'Community',
  Post: 'Post',
  Comment: 'Comment',
  Vote: 'Vote',
  CommunityMembership: 'CommunityMembership',
  Moderator: 'Moderator',
  UserUnitEnrollment: 'UserUnitEnrollment',
  SavedContent: 'SavedContent',
  Notification: 'Notification'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)

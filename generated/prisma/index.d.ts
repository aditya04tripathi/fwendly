
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Campus
 * 
 */
export type Campus = $Result.DefaultSelection<Prisma.$CampusPayload>
/**
 * Model Faculty
 * 
 */
export type Faculty = $Result.DefaultSelection<Prisma.$FacultyPayload>
/**
 * Model Course
 * 
 */
export type Course = $Result.DefaultSelection<Prisma.$CoursePayload>
/**
 * Model Unit
 * 
 */
export type Unit = $Result.DefaultSelection<Prisma.$UnitPayload>
/**
 * Model Community
 * 
 */
export type Community = $Result.DefaultSelection<Prisma.$CommunityPayload>
/**
 * Model Post
 * 
 */
export type Post = $Result.DefaultSelection<Prisma.$PostPayload>
/**
 * Model Comment
 * 
 */
export type Comment = $Result.DefaultSelection<Prisma.$CommentPayload>
/**
 * Model Vote
 * 
 */
export type Vote = $Result.DefaultSelection<Prisma.$VotePayload>
/**
 * Model CommunityMembership
 * 
 */
export type CommunityMembership = $Result.DefaultSelection<Prisma.$CommunityMembershipPayload>
/**
 * Model Moderator
 * 
 */
export type Moderator = $Result.DefaultSelection<Prisma.$ModeratorPayload>
/**
 * Model UserUnitEnrollment
 * 
 */
export type UserUnitEnrollment = $Result.DefaultSelection<Prisma.$UserUnitEnrollmentPayload>
/**
 * Model SavedContent
 * 
 */
export type SavedContent = $Result.DefaultSelection<Prisma.$SavedContentPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const CommunityType: {
  General: 'General',
  Campus: 'Campus',
  Faculty: 'Faculty',
  Course: 'Course',
  Unit: 'Unit',
  Interest_Group: 'Interest_Group',
  Club_Society: 'Club_Society'
};

export type CommunityType = (typeof CommunityType)[keyof typeof CommunityType]


export const PostContentType: {
  Text: 'Text',
  Image: 'Image',
  Link: 'Link',
  Video: 'Video'
};

export type PostContentType = (typeof PostContentType)[keyof typeof PostContentType]


export const VoteType: {
  Upvote: 'Upvote',
  Downvote: 'Downvote'
};

export type VoteType = (typeof VoteType)[keyof typeof VoteType]


export const MembershipRole: {
  Member: 'Member',
  Moderator: 'Moderator',
  Admin: 'Admin'
};

export type MembershipRole = (typeof MembershipRole)[keyof typeof MembershipRole]


export const EnrollmentStatus: {
  Enrolled: 'Enrolled',
  Completed: 'Completed',
  Withdrawn: 'Withdrawn'
};

export type EnrollmentStatus = (typeof EnrollmentStatus)[keyof typeof EnrollmentStatus]


export const NotificationType: {
  New_Comment_Reply: 'New_Comment_Reply',
  Post_Reply: 'Post_Reply',
  Mention_In_Post: 'Mention_In_Post',
  Mention_In_Comment: 'Mention_In_Comment',
  New_Post_In_Community: 'New_Post_In_Community',
  Upvote_Post: 'Upvote_Post',
  Upvote_Comment: 'Upvote_Comment',
  Community_Invite: 'Community_Invite',
  Moderator_Action: 'Moderator_Action'
};

export type NotificationType = (typeof NotificationType)[keyof typeof NotificationType]

}

export type CommunityType = $Enums.CommunityType

export const CommunityType: typeof $Enums.CommunityType

export type PostContentType = $Enums.PostContentType

export const PostContentType: typeof $Enums.PostContentType

export type VoteType = $Enums.VoteType

export const VoteType: typeof $Enums.VoteType

export type MembershipRole = $Enums.MembershipRole

export const MembershipRole: typeof $Enums.MembershipRole

export type EnrollmentStatus = $Enums.EnrollmentStatus

export const EnrollmentStatus: typeof $Enums.EnrollmentStatus

export type NotificationType = $Enums.NotificationType

export const NotificationType: typeof $Enums.NotificationType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.campus`: Exposes CRUD operations for the **Campus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Campuses
    * const campuses = await prisma.campus.findMany()
    * ```
    */
  get campus(): Prisma.CampusDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.faculty`: Exposes CRUD operations for the **Faculty** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Faculties
    * const faculties = await prisma.faculty.findMany()
    * ```
    */
  get faculty(): Prisma.FacultyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.course`: Exposes CRUD operations for the **Course** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Courses
    * const courses = await prisma.course.findMany()
    * ```
    */
  get course(): Prisma.CourseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.unit`: Exposes CRUD operations for the **Unit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Units
    * const units = await prisma.unit.findMany()
    * ```
    */
  get unit(): Prisma.UnitDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.community`: Exposes CRUD operations for the **Community** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Communities
    * const communities = await prisma.community.findMany()
    * ```
    */
  get community(): Prisma.CommunityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post`: Exposes CRUD operations for the **Post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.post.findMany()
    * ```
    */
  get post(): Prisma.PostDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.comment`: Exposes CRUD operations for the **Comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Comments
    * const comments = await prisma.comment.findMany()
    * ```
    */
  get comment(): Prisma.CommentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.vote`: Exposes CRUD operations for the **Vote** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Votes
    * const votes = await prisma.vote.findMany()
    * ```
    */
  get vote(): Prisma.VoteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.communityMembership`: Exposes CRUD operations for the **CommunityMembership** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CommunityMemberships
    * const communityMemberships = await prisma.communityMembership.findMany()
    * ```
    */
  get communityMembership(): Prisma.CommunityMembershipDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.moderator`: Exposes CRUD operations for the **Moderator** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Moderators
    * const moderators = await prisma.moderator.findMany()
    * ```
    */
  get moderator(): Prisma.ModeratorDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userUnitEnrollment`: Exposes CRUD operations for the **UserUnitEnrollment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserUnitEnrollments
    * const userUnitEnrollments = await prisma.userUnitEnrollment.findMany()
    * ```
    */
  get userUnitEnrollment(): Prisma.UserUnitEnrollmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.savedContent`: Exposes CRUD operations for the **SavedContent** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SavedContents
    * const savedContents = await prisma.savedContent.findMany()
    * ```
    */
  get savedContent(): Prisma.SavedContentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Campus: 'Campus',
    Faculty: 'Faculty',
    Course: 'Course',
    Unit: 'Unit',
    Community: 'Community',
    Post: 'Post',
    Comment: 'Comment',
    Vote: 'Vote',
    CommunityMembership: 'CommunityMembership',
    Moderator: 'Moderator',
    UserUnitEnrollment: 'UserUnitEnrollment',
    SavedContent: 'SavedContent',
    Notification: 'Notification'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "campus" | "faculty" | "course" | "unit" | "community" | "post" | "comment" | "vote" | "communityMembership" | "moderator" | "userUnitEnrollment" | "savedContent" | "notification"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Campus: {
        payload: Prisma.$CampusPayload<ExtArgs>
        fields: Prisma.CampusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CampusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CampusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload>
          }
          findFirst: {
            args: Prisma.CampusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CampusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload>
          }
          findMany: {
            args: Prisma.CampusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload>[]
          }
          create: {
            args: Prisma.CampusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload>
          }
          createMany: {
            args: Prisma.CampusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CampusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload>[]
          }
          delete: {
            args: Prisma.CampusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload>
          }
          update: {
            args: Prisma.CampusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload>
          }
          deleteMany: {
            args: Prisma.CampusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CampusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CampusUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload>[]
          }
          upsert: {
            args: Prisma.CampusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampusPayload>
          }
          aggregate: {
            args: Prisma.CampusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCampus>
          }
          groupBy: {
            args: Prisma.CampusGroupByArgs<ExtArgs>
            result: $Utils.Optional<CampusGroupByOutputType>[]
          }
          count: {
            args: Prisma.CampusCountArgs<ExtArgs>
            result: $Utils.Optional<CampusCountAggregateOutputType> | number
          }
        }
      }
      Faculty: {
        payload: Prisma.$FacultyPayload<ExtArgs>
        fields: Prisma.FacultyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FacultyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FacultyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload>
          }
          findFirst: {
            args: Prisma.FacultyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FacultyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload>
          }
          findMany: {
            args: Prisma.FacultyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload>[]
          }
          create: {
            args: Prisma.FacultyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload>
          }
          createMany: {
            args: Prisma.FacultyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FacultyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload>[]
          }
          delete: {
            args: Prisma.FacultyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload>
          }
          update: {
            args: Prisma.FacultyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload>
          }
          deleteMany: {
            args: Prisma.FacultyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FacultyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FacultyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload>[]
          }
          upsert: {
            args: Prisma.FacultyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FacultyPayload>
          }
          aggregate: {
            args: Prisma.FacultyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFaculty>
          }
          groupBy: {
            args: Prisma.FacultyGroupByArgs<ExtArgs>
            result: $Utils.Optional<FacultyGroupByOutputType>[]
          }
          count: {
            args: Prisma.FacultyCountArgs<ExtArgs>
            result: $Utils.Optional<FacultyCountAggregateOutputType> | number
          }
        }
      }
      Course: {
        payload: Prisma.$CoursePayload<ExtArgs>
        fields: Prisma.CourseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CourseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CourseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          findFirst: {
            args: Prisma.CourseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CourseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          findMany: {
            args: Prisma.CourseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>[]
          }
          create: {
            args: Prisma.CourseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          createMany: {
            args: Prisma.CourseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CourseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>[]
          }
          delete: {
            args: Prisma.CourseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          update: {
            args: Prisma.CourseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          deleteMany: {
            args: Prisma.CourseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CourseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CourseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>[]
          }
          upsert: {
            args: Prisma.CourseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CoursePayload>
          }
          aggregate: {
            args: Prisma.CourseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCourse>
          }
          groupBy: {
            args: Prisma.CourseGroupByArgs<ExtArgs>
            result: $Utils.Optional<CourseGroupByOutputType>[]
          }
          count: {
            args: Prisma.CourseCountArgs<ExtArgs>
            result: $Utils.Optional<CourseCountAggregateOutputType> | number
          }
        }
      }
      Unit: {
        payload: Prisma.$UnitPayload<ExtArgs>
        fields: Prisma.UnitFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UnitFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UnitFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          findFirst: {
            args: Prisma.UnitFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UnitFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          findMany: {
            args: Prisma.UnitFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>[]
          }
          create: {
            args: Prisma.UnitCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          createMany: {
            args: Prisma.UnitCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UnitCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>[]
          }
          delete: {
            args: Prisma.UnitDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          update: {
            args: Prisma.UnitUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          deleteMany: {
            args: Prisma.UnitDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UnitUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UnitUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>[]
          }
          upsert: {
            args: Prisma.UnitUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UnitPayload>
          }
          aggregate: {
            args: Prisma.UnitAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUnit>
          }
          groupBy: {
            args: Prisma.UnitGroupByArgs<ExtArgs>
            result: $Utils.Optional<UnitGroupByOutputType>[]
          }
          count: {
            args: Prisma.UnitCountArgs<ExtArgs>
            result: $Utils.Optional<UnitCountAggregateOutputType> | number
          }
        }
      }
      Community: {
        payload: Prisma.$CommunityPayload<ExtArgs>
        fields: Prisma.CommunityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommunityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommunityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload>
          }
          findFirst: {
            args: Prisma.CommunityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommunityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload>
          }
          findMany: {
            args: Prisma.CommunityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload>[]
          }
          create: {
            args: Prisma.CommunityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload>
          }
          createMany: {
            args: Prisma.CommunityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommunityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload>[]
          }
          delete: {
            args: Prisma.CommunityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload>
          }
          update: {
            args: Prisma.CommunityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload>
          }
          deleteMany: {
            args: Prisma.CommunityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommunityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CommunityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload>[]
          }
          upsert: {
            args: Prisma.CommunityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityPayload>
          }
          aggregate: {
            args: Prisma.CommunityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunity>
          }
          groupBy: {
            args: Prisma.CommunityGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommunityGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommunityCountArgs<ExtArgs>
            result: $Utils.Optional<CommunityCountAggregateOutputType> | number
          }
        }
      }
      Post: {
        payload: Prisma.$PostPayload<ExtArgs>
        fields: Prisma.PostFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PostFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PostFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findFirst: {
            args: Prisma.PostFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PostFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findMany: {
            args: Prisma.PostFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          create: {
            args: Prisma.PostCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          createMany: {
            args: Prisma.PostCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PostCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          delete: {
            args: Prisma.PostDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          update: {
            args: Prisma.PostUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          deleteMany: {
            args: Prisma.PostDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PostUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PostUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          upsert: {
            args: Prisma.PostUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          aggregate: {
            args: Prisma.PostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost>
          }
          groupBy: {
            args: Prisma.PostGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostGroupByOutputType>[]
          }
          count: {
            args: Prisma.PostCountArgs<ExtArgs>
            result: $Utils.Optional<PostCountAggregateOutputType> | number
          }
        }
      }
      Comment: {
        payload: Prisma.$CommentPayload<ExtArgs>
        fields: Prisma.CommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findFirst: {
            args: Prisma.CommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          findMany: {
            args: Prisma.CommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          create: {
            args: Prisma.CommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          createMany: {
            args: Prisma.CommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          delete: {
            args: Prisma.CommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          update: {
            args: Prisma.CommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          deleteMany: {
            args: Prisma.CommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CommentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>[]
          }
          upsert: {
            args: Prisma.CommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommentPayload>
          }
          aggregate: {
            args: Prisma.CommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateComment>
          }
          groupBy: {
            args: Prisma.CommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommentCountArgs<ExtArgs>
            result: $Utils.Optional<CommentCountAggregateOutputType> | number
          }
        }
      }
      Vote: {
        payload: Prisma.$VotePayload<ExtArgs>
        fields: Prisma.VoteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VoteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VoteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload>
          }
          findFirst: {
            args: Prisma.VoteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VoteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload>
          }
          findMany: {
            args: Prisma.VoteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload>[]
          }
          create: {
            args: Prisma.VoteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload>
          }
          createMany: {
            args: Prisma.VoteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VoteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload>[]
          }
          delete: {
            args: Prisma.VoteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload>
          }
          update: {
            args: Prisma.VoteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload>
          }
          deleteMany: {
            args: Prisma.VoteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VoteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VoteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload>[]
          }
          upsert: {
            args: Prisma.VoteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VotePayload>
          }
          aggregate: {
            args: Prisma.VoteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVote>
          }
          groupBy: {
            args: Prisma.VoteGroupByArgs<ExtArgs>
            result: $Utils.Optional<VoteGroupByOutputType>[]
          }
          count: {
            args: Prisma.VoteCountArgs<ExtArgs>
            result: $Utils.Optional<VoteCountAggregateOutputType> | number
          }
        }
      }
      CommunityMembership: {
        payload: Prisma.$CommunityMembershipPayload<ExtArgs>
        fields: Prisma.CommunityMembershipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommunityMembershipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommunityMembershipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload>
          }
          findFirst: {
            args: Prisma.CommunityMembershipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommunityMembershipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload>
          }
          findMany: {
            args: Prisma.CommunityMembershipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload>[]
          }
          create: {
            args: Prisma.CommunityMembershipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload>
          }
          createMany: {
            args: Prisma.CommunityMembershipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommunityMembershipCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload>[]
          }
          delete: {
            args: Prisma.CommunityMembershipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload>
          }
          update: {
            args: Prisma.CommunityMembershipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload>
          }
          deleteMany: {
            args: Prisma.CommunityMembershipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommunityMembershipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CommunityMembershipUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload>[]
          }
          upsert: {
            args: Prisma.CommunityMembershipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommunityMembershipPayload>
          }
          aggregate: {
            args: Prisma.CommunityMembershipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommunityMembership>
          }
          groupBy: {
            args: Prisma.CommunityMembershipGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommunityMembershipGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommunityMembershipCountArgs<ExtArgs>
            result: $Utils.Optional<CommunityMembershipCountAggregateOutputType> | number
          }
        }
      }
      Moderator: {
        payload: Prisma.$ModeratorPayload<ExtArgs>
        fields: Prisma.ModeratorFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModeratorFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModeratorFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload>
          }
          findFirst: {
            args: Prisma.ModeratorFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModeratorFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload>
          }
          findMany: {
            args: Prisma.ModeratorFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload>[]
          }
          create: {
            args: Prisma.ModeratorCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload>
          }
          createMany: {
            args: Prisma.ModeratorCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModeratorCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload>[]
          }
          delete: {
            args: Prisma.ModeratorDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload>
          }
          update: {
            args: Prisma.ModeratorUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload>
          }
          deleteMany: {
            args: Prisma.ModeratorDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModeratorUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ModeratorUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload>[]
          }
          upsert: {
            args: Prisma.ModeratorUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModeratorPayload>
          }
          aggregate: {
            args: Prisma.ModeratorAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModerator>
          }
          groupBy: {
            args: Prisma.ModeratorGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModeratorGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModeratorCountArgs<ExtArgs>
            result: $Utils.Optional<ModeratorCountAggregateOutputType> | number
          }
        }
      }
      UserUnitEnrollment: {
        payload: Prisma.$UserUnitEnrollmentPayload<ExtArgs>
        fields: Prisma.UserUnitEnrollmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserUnitEnrollmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserUnitEnrollmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload>
          }
          findFirst: {
            args: Prisma.UserUnitEnrollmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserUnitEnrollmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload>
          }
          findMany: {
            args: Prisma.UserUnitEnrollmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload>[]
          }
          create: {
            args: Prisma.UserUnitEnrollmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload>
          }
          createMany: {
            args: Prisma.UserUnitEnrollmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserUnitEnrollmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload>[]
          }
          delete: {
            args: Prisma.UserUnitEnrollmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload>
          }
          update: {
            args: Prisma.UserUnitEnrollmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload>
          }
          deleteMany: {
            args: Prisma.UserUnitEnrollmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUnitEnrollmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUnitEnrollmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload>[]
          }
          upsert: {
            args: Prisma.UserUnitEnrollmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserUnitEnrollmentPayload>
          }
          aggregate: {
            args: Prisma.UserUnitEnrollmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserUnitEnrollment>
          }
          groupBy: {
            args: Prisma.UserUnitEnrollmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserUnitEnrollmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserUnitEnrollmentCountArgs<ExtArgs>
            result: $Utils.Optional<UserUnitEnrollmentCountAggregateOutputType> | number
          }
        }
      }
      SavedContent: {
        payload: Prisma.$SavedContentPayload<ExtArgs>
        fields: Prisma.SavedContentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SavedContentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SavedContentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload>
          }
          findFirst: {
            args: Prisma.SavedContentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SavedContentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload>
          }
          findMany: {
            args: Prisma.SavedContentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload>[]
          }
          create: {
            args: Prisma.SavedContentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload>
          }
          createMany: {
            args: Prisma.SavedContentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SavedContentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload>[]
          }
          delete: {
            args: Prisma.SavedContentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload>
          }
          update: {
            args: Prisma.SavedContentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload>
          }
          deleteMany: {
            args: Prisma.SavedContentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SavedContentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SavedContentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload>[]
          }
          upsert: {
            args: Prisma.SavedContentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SavedContentPayload>
          }
          aggregate: {
            args: Prisma.SavedContentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSavedContent>
          }
          groupBy: {
            args: Prisma.SavedContentGroupByArgs<ExtArgs>
            result: $Utils.Optional<SavedContentGroupByOutputType>[]
          }
          count: {
            args: Prisma.SavedContentCountArgs<ExtArgs>
            result: $Utils.Optional<SavedContentCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    campus?: CampusOmit
    faculty?: FacultyOmit
    course?: CourseOmit
    unit?: UnitOmit
    community?: CommunityOmit
    post?: PostOmit
    comment?: CommentOmit
    vote?: VoteOmit
    communityMembership?: CommunityMembershipOmit
    moderator?: ModeratorOmit
    userUnitEnrollment?: UserUnitEnrollmentOmit
    savedContent?: SavedContentOmit
    notification?: NotificationOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    created_communities: number
    posts: number
    comments: number
    votes: number
    memberships: number
    moderated_communities: number
    unit_enrollments: number
    saved_content: number
    notifications_received: number
    notifications_sent: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    created_communities?: boolean | UserCountOutputTypeCountCreated_communitiesArgs
    posts?: boolean | UserCountOutputTypeCountPostsArgs
    comments?: boolean | UserCountOutputTypeCountCommentsArgs
    votes?: boolean | UserCountOutputTypeCountVotesArgs
    memberships?: boolean | UserCountOutputTypeCountMembershipsArgs
    moderated_communities?: boolean | UserCountOutputTypeCountModerated_communitiesArgs
    unit_enrollments?: boolean | UserCountOutputTypeCountUnit_enrollmentsArgs
    saved_content?: boolean | UserCountOutputTypeCountSaved_contentArgs
    notifications_received?: boolean | UserCountOutputTypeCountNotifications_receivedArgs
    notifications_sent?: boolean | UserCountOutputTypeCountNotifications_sentArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreated_communitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunityWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountVotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VoteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMembershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunityMembershipWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountModerated_communitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModeratorWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUnit_enrollmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserUnitEnrollmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSaved_contentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SavedContentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotifications_receivedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotifications_sentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Count Type CampusCountOutputType
   */

  export type CampusCountOutputType = {
    users: number
    communities: number
  }

  export type CampusCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | CampusCountOutputTypeCountUsersArgs
    communities?: boolean | CampusCountOutputTypeCountCommunitiesArgs
  }

  // Custom InputTypes
  /**
   * CampusCountOutputType without action
   */
  export type CampusCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CampusCountOutputType
     */
    select?: CampusCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CampusCountOutputType without action
   */
  export type CampusCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * CampusCountOutputType without action
   */
  export type CampusCountOutputTypeCountCommunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunityWhereInput
  }


  /**
   * Count Type FacultyCountOutputType
   */

  export type FacultyCountOutputType = {
    users: number
    courses: number
    units: number
    communities: number
  }

  export type FacultyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | FacultyCountOutputTypeCountUsersArgs
    courses?: boolean | FacultyCountOutputTypeCountCoursesArgs
    units?: boolean | FacultyCountOutputTypeCountUnitsArgs
    communities?: boolean | FacultyCountOutputTypeCountCommunitiesArgs
  }

  // Custom InputTypes
  /**
   * FacultyCountOutputType without action
   */
  export type FacultyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FacultyCountOutputType
     */
    select?: FacultyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FacultyCountOutputType without action
   */
  export type FacultyCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * FacultyCountOutputType without action
   */
  export type FacultyCountOutputTypeCountCoursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CourseWhereInput
  }

  /**
   * FacultyCountOutputType without action
   */
  export type FacultyCountOutputTypeCountUnitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UnitWhereInput
  }

  /**
   * FacultyCountOutputType without action
   */
  export type FacultyCountOutputTypeCountCommunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunityWhereInput
  }


  /**
   * Count Type CourseCountOutputType
   */

  export type CourseCountOutputType = {
    users: number
    communities: number
  }

  export type CourseCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | CourseCountOutputTypeCountUsersArgs
    communities?: boolean | CourseCountOutputTypeCountCommunitiesArgs
  }

  // Custom InputTypes
  /**
   * CourseCountOutputType without action
   */
  export type CourseCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CourseCountOutputType
     */
    select?: CourseCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CourseCountOutputType without action
   */
  export type CourseCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * CourseCountOutputType without action
   */
  export type CourseCountOutputTypeCountCommunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunityWhereInput
  }


  /**
   * Count Type UnitCountOutputType
   */

  export type UnitCountOutputType = {
    communities: number
    user_enrollments: number
  }

  export type UnitCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    communities?: boolean | UnitCountOutputTypeCountCommunitiesArgs
    user_enrollments?: boolean | UnitCountOutputTypeCountUser_enrollmentsArgs
  }

  // Custom InputTypes
  /**
   * UnitCountOutputType without action
   */
  export type UnitCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnitCountOutputType
     */
    select?: UnitCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UnitCountOutputType without action
   */
  export type UnitCountOutputTypeCountCommunitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunityWhereInput
  }

  /**
   * UnitCountOutputType without action
   */
  export type UnitCountOutputTypeCountUser_enrollmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserUnitEnrollmentWhereInput
  }


  /**
   * Count Type CommunityCountOutputType
   */

  export type CommunityCountOutputType = {
    posts: number
    members: number
    moderators: number
    notifications: number
  }

  export type CommunityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    posts?: boolean | CommunityCountOutputTypeCountPostsArgs
    members?: boolean | CommunityCountOutputTypeCountMembersArgs
    moderators?: boolean | CommunityCountOutputTypeCountModeratorsArgs
    notifications?: boolean | CommunityCountOutputTypeCountNotificationsArgs
  }

  // Custom InputTypes
  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityCountOutputType
     */
    select?: CommunityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunityMembershipWhereInput
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountModeratorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModeratorWhereInput
  }

  /**
   * CommunityCountOutputType without action
   */
  export type CommunityCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Count Type PostCountOutputType
   */

  export type PostCountOutputType = {
    comments: number
    votes: number
    saved_by_users: number
    notifications: number
  }

  export type PostCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | PostCountOutputTypeCountCommentsArgs
    votes?: boolean | PostCountOutputTypeCountVotesArgs
    saved_by_users?: boolean | PostCountOutputTypeCountSaved_by_usersArgs
    notifications?: boolean | PostCountOutputTypeCountNotificationsArgs
  }

  // Custom InputTypes
  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostCountOutputType
     */
    select?: PostCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountVotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VoteWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountSaved_by_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SavedContentWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Count Type CommentCountOutputType
   */

  export type CommentCountOutputType = {
    replies: number
    votes: number
    saved_by_users: number
    notifications: number
  }

  export type CommentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    replies?: boolean | CommentCountOutputTypeCountRepliesArgs
    votes?: boolean | CommentCountOutputTypeCountVotesArgs
    saved_by_users?: boolean | CommentCountOutputTypeCountSaved_by_usersArgs
    notifications?: boolean | CommentCountOutputTypeCountNotificationsArgs
  }

  // Custom InputTypes
  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommentCountOutputType
     */
    select?: CommentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountRepliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountVotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VoteWhereInput
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountSaved_by_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SavedContentWhereInput
  }

  /**
   * CommentCountOutputType without action
   */
  export type CommentCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    karma_points: number | null
    year_of_study: number | null
  }

  export type UserSumAggregateOutputType = {
    karma_points: number | null
    year_of_study: number | null
  }

  export type UserMinAggregateOutputType = {
    user_id: string | null
    monash_email: string | null
    username: string | null
    password_hash: string | null
    first_name: string | null
    last_name: string | null
    profile_picture_url: string | null
    bio: string | null
    karma_points: number | null
    year_of_study: number | null
    is_verified_student: boolean | null
    created_at: Date | null
    updated_at: Date | null
    campus_id: string | null
    faculty_id: string | null
    course_id: string | null
  }

  export type UserMaxAggregateOutputType = {
    user_id: string | null
    monash_email: string | null
    username: string | null
    password_hash: string | null
    first_name: string | null
    last_name: string | null
    profile_picture_url: string | null
    bio: string | null
    karma_points: number | null
    year_of_study: number | null
    is_verified_student: boolean | null
    created_at: Date | null
    updated_at: Date | null
    campus_id: string | null
    faculty_id: string | null
    course_id: string | null
  }

  export type UserCountAggregateOutputType = {
    user_id: number
    monash_email: number
    username: number
    password_hash: number
    first_name: number
    last_name: number
    profile_picture_url: number
    bio: number
    karma_points: number
    year_of_study: number
    is_verified_student: number
    created_at: number
    updated_at: number
    campus_id: number
    faculty_id: number
    course_id: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    karma_points?: true
    year_of_study?: true
  }

  export type UserSumAggregateInputType = {
    karma_points?: true
    year_of_study?: true
  }

  export type UserMinAggregateInputType = {
    user_id?: true
    monash_email?: true
    username?: true
    password_hash?: true
    first_name?: true
    last_name?: true
    profile_picture_url?: true
    bio?: true
    karma_points?: true
    year_of_study?: true
    is_verified_student?: true
    created_at?: true
    updated_at?: true
    campus_id?: true
    faculty_id?: true
    course_id?: true
  }

  export type UserMaxAggregateInputType = {
    user_id?: true
    monash_email?: true
    username?: true
    password_hash?: true
    first_name?: true
    last_name?: true
    profile_picture_url?: true
    bio?: true
    karma_points?: true
    year_of_study?: true
    is_verified_student?: true
    created_at?: true
    updated_at?: true
    campus_id?: true
    faculty_id?: true
    course_id?: true
  }

  export type UserCountAggregateInputType = {
    user_id?: true
    monash_email?: true
    username?: true
    password_hash?: true
    first_name?: true
    last_name?: true
    profile_picture_url?: true
    bio?: true
    karma_points?: true
    year_of_study?: true
    is_verified_student?: true
    created_at?: true
    updated_at?: true
    campus_id?: true
    faculty_id?: true
    course_id?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    user_id: string
    monash_email: string
    username: string
    password_hash: string
    first_name: string | null
    last_name: string | null
    profile_picture_url: string | null
    bio: string | null
    karma_points: number
    year_of_study: number | null
    is_verified_student: boolean
    created_at: Date
    updated_at: Date
    campus_id: string | null
    faculty_id: string | null
    course_id: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    monash_email?: boolean
    username?: boolean
    password_hash?: boolean
    first_name?: boolean
    last_name?: boolean
    profile_picture_url?: boolean
    bio?: boolean
    karma_points?: boolean
    year_of_study?: boolean
    is_verified_student?: boolean
    created_at?: boolean
    updated_at?: boolean
    campus_id?: boolean
    faculty_id?: boolean
    course_id?: boolean
    campus?: boolean | User$campusArgs<ExtArgs>
    faculty?: boolean | User$facultyArgs<ExtArgs>
    course?: boolean | User$courseArgs<ExtArgs>
    created_communities?: boolean | User$created_communitiesArgs<ExtArgs>
    posts?: boolean | User$postsArgs<ExtArgs>
    comments?: boolean | User$commentsArgs<ExtArgs>
    votes?: boolean | User$votesArgs<ExtArgs>
    memberships?: boolean | User$membershipsArgs<ExtArgs>
    moderated_communities?: boolean | User$moderated_communitiesArgs<ExtArgs>
    unit_enrollments?: boolean | User$unit_enrollmentsArgs<ExtArgs>
    saved_content?: boolean | User$saved_contentArgs<ExtArgs>
    notifications_received?: boolean | User$notifications_receivedArgs<ExtArgs>
    notifications_sent?: boolean | User$notifications_sentArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    monash_email?: boolean
    username?: boolean
    password_hash?: boolean
    first_name?: boolean
    last_name?: boolean
    profile_picture_url?: boolean
    bio?: boolean
    karma_points?: boolean
    year_of_study?: boolean
    is_verified_student?: boolean
    created_at?: boolean
    updated_at?: boolean
    campus_id?: boolean
    faculty_id?: boolean
    course_id?: boolean
    campus?: boolean | User$campusArgs<ExtArgs>
    faculty?: boolean | User$facultyArgs<ExtArgs>
    course?: boolean | User$courseArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    monash_email?: boolean
    username?: boolean
    password_hash?: boolean
    first_name?: boolean
    last_name?: boolean
    profile_picture_url?: boolean
    bio?: boolean
    karma_points?: boolean
    year_of_study?: boolean
    is_verified_student?: boolean
    created_at?: boolean
    updated_at?: boolean
    campus_id?: boolean
    faculty_id?: boolean
    course_id?: boolean
    campus?: boolean | User$campusArgs<ExtArgs>
    faculty?: boolean | User$facultyArgs<ExtArgs>
    course?: boolean | User$courseArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    user_id?: boolean
    monash_email?: boolean
    username?: boolean
    password_hash?: boolean
    first_name?: boolean
    last_name?: boolean
    profile_picture_url?: boolean
    bio?: boolean
    karma_points?: boolean
    year_of_study?: boolean
    is_verified_student?: boolean
    created_at?: boolean
    updated_at?: boolean
    campus_id?: boolean
    faculty_id?: boolean
    course_id?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "monash_email" | "username" | "password_hash" | "first_name" | "last_name" | "profile_picture_url" | "bio" | "karma_points" | "year_of_study" | "is_verified_student" | "created_at" | "updated_at" | "campus_id" | "faculty_id" | "course_id", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campus?: boolean | User$campusArgs<ExtArgs>
    faculty?: boolean | User$facultyArgs<ExtArgs>
    course?: boolean | User$courseArgs<ExtArgs>
    created_communities?: boolean | User$created_communitiesArgs<ExtArgs>
    posts?: boolean | User$postsArgs<ExtArgs>
    comments?: boolean | User$commentsArgs<ExtArgs>
    votes?: boolean | User$votesArgs<ExtArgs>
    memberships?: boolean | User$membershipsArgs<ExtArgs>
    moderated_communities?: boolean | User$moderated_communitiesArgs<ExtArgs>
    unit_enrollments?: boolean | User$unit_enrollmentsArgs<ExtArgs>
    saved_content?: boolean | User$saved_contentArgs<ExtArgs>
    notifications_received?: boolean | User$notifications_receivedArgs<ExtArgs>
    notifications_sent?: boolean | User$notifications_sentArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campus?: boolean | User$campusArgs<ExtArgs>
    faculty?: boolean | User$facultyArgs<ExtArgs>
    course?: boolean | User$courseArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    campus?: boolean | User$campusArgs<ExtArgs>
    faculty?: boolean | User$facultyArgs<ExtArgs>
    course?: boolean | User$courseArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      campus: Prisma.$CampusPayload<ExtArgs> | null
      faculty: Prisma.$FacultyPayload<ExtArgs> | null
      course: Prisma.$CoursePayload<ExtArgs> | null
      created_communities: Prisma.$CommunityPayload<ExtArgs>[]
      posts: Prisma.$PostPayload<ExtArgs>[]
      comments: Prisma.$CommentPayload<ExtArgs>[]
      votes: Prisma.$VotePayload<ExtArgs>[]
      memberships: Prisma.$CommunityMembershipPayload<ExtArgs>[]
      moderated_communities: Prisma.$ModeratorPayload<ExtArgs>[]
      unit_enrollments: Prisma.$UserUnitEnrollmentPayload<ExtArgs>[]
      saved_content: Prisma.$SavedContentPayload<ExtArgs>[]
      notifications_received: Prisma.$NotificationPayload<ExtArgs>[]
      notifications_sent: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: string
      monash_email: string
      username: string
      password_hash: string
      first_name: string | null
      last_name: string | null
      profile_picture_url: string | null
      bio: string | null
      karma_points: number
      year_of_study: number | null
      is_verified_student: boolean
      created_at: Date
      updated_at: Date
      campus_id: string | null
      faculty_id: string | null
      course_id: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const userWithUser_idOnly = await prisma.user.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `user_id`
     * const userWithUser_idOnly = await prisma.user.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `user_id`
     * const userWithUser_idOnly = await prisma.user.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    campus<T extends User$campusArgs<ExtArgs> = {}>(args?: Subset<T, User$campusArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    faculty<T extends User$facultyArgs<ExtArgs> = {}>(args?: Subset<T, User$facultyArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    course<T extends User$courseArgs<ExtArgs> = {}>(args?: Subset<T, User$courseArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    created_communities<T extends User$created_communitiesArgs<ExtArgs> = {}>(args?: Subset<T, User$created_communitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    posts<T extends User$postsArgs<ExtArgs> = {}>(args?: Subset<T, User$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    comments<T extends User$commentsArgs<ExtArgs> = {}>(args?: Subset<T, User$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    votes<T extends User$votesArgs<ExtArgs> = {}>(args?: Subset<T, User$votesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    memberships<T extends User$membershipsArgs<ExtArgs> = {}>(args?: Subset<T, User$membershipsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    moderated_communities<T extends User$moderated_communitiesArgs<ExtArgs> = {}>(args?: Subset<T, User$moderated_communitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    unit_enrollments<T extends User$unit_enrollmentsArgs<ExtArgs> = {}>(args?: Subset<T, User$unit_enrollmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    saved_content<T extends User$saved_contentArgs<ExtArgs> = {}>(args?: Subset<T, User$saved_contentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications_received<T extends User$notifications_receivedArgs<ExtArgs> = {}>(args?: Subset<T, User$notifications_receivedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications_sent<T extends User$notifications_sentArgs<ExtArgs> = {}>(args?: Subset<T, User$notifications_sentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly user_id: FieldRef<"User", 'String'>
    readonly monash_email: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly password_hash: FieldRef<"User", 'String'>
    readonly first_name: FieldRef<"User", 'String'>
    readonly last_name: FieldRef<"User", 'String'>
    readonly profile_picture_url: FieldRef<"User", 'String'>
    readonly bio: FieldRef<"User", 'String'>
    readonly karma_points: FieldRef<"User", 'Int'>
    readonly year_of_study: FieldRef<"User", 'Int'>
    readonly is_verified_student: FieldRef<"User", 'Boolean'>
    readonly created_at: FieldRef<"User", 'DateTime'>
    readonly updated_at: FieldRef<"User", 'DateTime'>
    readonly campus_id: FieldRef<"User", 'String'>
    readonly faculty_id: FieldRef<"User", 'String'>
    readonly course_id: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.campus
   */
  export type User$campusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    where?: CampusWhereInput
  }

  /**
   * User.faculty
   */
  export type User$facultyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    where?: FacultyWhereInput
  }

  /**
   * User.course
   */
  export type User$courseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    where?: CourseWhereInput
  }

  /**
   * User.created_communities
   */
  export type User$created_communitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    where?: CommunityWhereInput
    orderBy?: CommunityOrderByWithRelationInput | CommunityOrderByWithRelationInput[]
    cursor?: CommunityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * User.posts
   */
  export type User$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    cursor?: PostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * User.comments
   */
  export type User$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * User.votes
   */
  export type User$votesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    where?: VoteWhereInput
    orderBy?: VoteOrderByWithRelationInput | VoteOrderByWithRelationInput[]
    cursor?: VoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VoteScalarFieldEnum | VoteScalarFieldEnum[]
  }

  /**
   * User.memberships
   */
  export type User$membershipsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    where?: CommunityMembershipWhereInput
    orderBy?: CommunityMembershipOrderByWithRelationInput | CommunityMembershipOrderByWithRelationInput[]
    cursor?: CommunityMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunityMembershipScalarFieldEnum | CommunityMembershipScalarFieldEnum[]
  }

  /**
   * User.moderated_communities
   */
  export type User$moderated_communitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    where?: ModeratorWhereInput
    orderBy?: ModeratorOrderByWithRelationInput | ModeratorOrderByWithRelationInput[]
    cursor?: ModeratorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModeratorScalarFieldEnum | ModeratorScalarFieldEnum[]
  }

  /**
   * User.unit_enrollments
   */
  export type User$unit_enrollmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    where?: UserUnitEnrollmentWhereInput
    orderBy?: UserUnitEnrollmentOrderByWithRelationInput | UserUnitEnrollmentOrderByWithRelationInput[]
    cursor?: UserUnitEnrollmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserUnitEnrollmentScalarFieldEnum | UserUnitEnrollmentScalarFieldEnum[]
  }

  /**
   * User.saved_content
   */
  export type User$saved_contentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    where?: SavedContentWhereInput
    orderBy?: SavedContentOrderByWithRelationInput | SavedContentOrderByWithRelationInput[]
    cursor?: SavedContentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SavedContentScalarFieldEnum | SavedContentScalarFieldEnum[]
  }

  /**
   * User.notifications_received
   */
  export type User$notifications_receivedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.notifications_sent
   */
  export type User$notifications_sentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Campus
   */

  export type AggregateCampus = {
    _count: CampusCountAggregateOutputType | null
    _min: CampusMinAggregateOutputType | null
    _max: CampusMaxAggregateOutputType | null
  }

  export type CampusMinAggregateOutputType = {
    campus_id: string | null
    campus_name: string | null
    location_details: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CampusMaxAggregateOutputType = {
    campus_id: string | null
    campus_name: string | null
    location_details: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type CampusCountAggregateOutputType = {
    campus_id: number
    campus_name: number
    location_details: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type CampusMinAggregateInputType = {
    campus_id?: true
    campus_name?: true
    location_details?: true
    created_at?: true
    updated_at?: true
  }

  export type CampusMaxAggregateInputType = {
    campus_id?: true
    campus_name?: true
    location_details?: true
    created_at?: true
    updated_at?: true
  }

  export type CampusCountAggregateInputType = {
    campus_id?: true
    campus_name?: true
    location_details?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type CampusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campus to aggregate.
     */
    where?: CampusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campuses to fetch.
     */
    orderBy?: CampusOrderByWithRelationInput | CampusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CampusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Campuses
    **/
    _count?: true | CampusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CampusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CampusMaxAggregateInputType
  }

  export type GetCampusAggregateType<T extends CampusAggregateArgs> = {
        [P in keyof T & keyof AggregateCampus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCampus[P]>
      : GetScalarType<T[P], AggregateCampus[P]>
  }




  export type CampusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampusWhereInput
    orderBy?: CampusOrderByWithAggregationInput | CampusOrderByWithAggregationInput[]
    by: CampusScalarFieldEnum[] | CampusScalarFieldEnum
    having?: CampusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CampusCountAggregateInputType | true
    _min?: CampusMinAggregateInputType
    _max?: CampusMaxAggregateInputType
  }

  export type CampusGroupByOutputType = {
    campus_id: string
    campus_name: string
    location_details: string | null
    created_at: Date
    updated_at: Date
    _count: CampusCountAggregateOutputType | null
    _min: CampusMinAggregateOutputType | null
    _max: CampusMaxAggregateOutputType | null
  }

  type GetCampusGroupByPayload<T extends CampusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CampusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CampusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CampusGroupByOutputType[P]>
            : GetScalarType<T[P], CampusGroupByOutputType[P]>
        }
      >
    >


  export type CampusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    campus_id?: boolean
    campus_name?: boolean
    location_details?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | Campus$usersArgs<ExtArgs>
    communities?: boolean | Campus$communitiesArgs<ExtArgs>
    _count?: boolean | CampusCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campus"]>

  export type CampusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    campus_id?: boolean
    campus_name?: boolean
    location_details?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["campus"]>

  export type CampusSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    campus_id?: boolean
    campus_name?: boolean
    location_details?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["campus"]>

  export type CampusSelectScalar = {
    campus_id?: boolean
    campus_name?: boolean
    location_details?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type CampusOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"campus_id" | "campus_name" | "location_details" | "created_at" | "updated_at", ExtArgs["result"]["campus"]>
  export type CampusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Campus$usersArgs<ExtArgs>
    communities?: boolean | Campus$communitiesArgs<ExtArgs>
    _count?: boolean | CampusCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CampusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CampusIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CampusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Campus"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
      communities: Prisma.$CommunityPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      campus_id: string
      campus_name: string
      location_details: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["campus"]>
    composites: {}
  }

  type CampusGetPayload<S extends boolean | null | undefined | CampusDefaultArgs> = $Result.GetResult<Prisma.$CampusPayload, S>

  type CampusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CampusFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CampusCountAggregateInputType | true
    }

  export interface CampusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Campus'], meta: { name: 'Campus' } }
    /**
     * Find zero or one Campus that matches the filter.
     * @param {CampusFindUniqueArgs} args - Arguments to find a Campus
     * @example
     * // Get one Campus
     * const campus = await prisma.campus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CampusFindUniqueArgs>(args: SelectSubset<T, CampusFindUniqueArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Campus that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CampusFindUniqueOrThrowArgs} args - Arguments to find a Campus
     * @example
     * // Get one Campus
     * const campus = await prisma.campus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CampusFindUniqueOrThrowArgs>(args: SelectSubset<T, CampusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Campus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampusFindFirstArgs} args - Arguments to find a Campus
     * @example
     * // Get one Campus
     * const campus = await prisma.campus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CampusFindFirstArgs>(args?: SelectSubset<T, CampusFindFirstArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Campus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampusFindFirstOrThrowArgs} args - Arguments to find a Campus
     * @example
     * // Get one Campus
     * const campus = await prisma.campus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CampusFindFirstOrThrowArgs>(args?: SelectSubset<T, CampusFindFirstOrThrowArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Campuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Campuses
     * const campuses = await prisma.campus.findMany()
     * 
     * // Get first 10 Campuses
     * const campuses = await prisma.campus.findMany({ take: 10 })
     * 
     * // Only select the `campus_id`
     * const campusWithCampus_idOnly = await prisma.campus.findMany({ select: { campus_id: true } })
     * 
     */
    findMany<T extends CampusFindManyArgs>(args?: SelectSubset<T, CampusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Campus.
     * @param {CampusCreateArgs} args - Arguments to create a Campus.
     * @example
     * // Create one Campus
     * const Campus = await prisma.campus.create({
     *   data: {
     *     // ... data to create a Campus
     *   }
     * })
     * 
     */
    create<T extends CampusCreateArgs>(args: SelectSubset<T, CampusCreateArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Campuses.
     * @param {CampusCreateManyArgs} args - Arguments to create many Campuses.
     * @example
     * // Create many Campuses
     * const campus = await prisma.campus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CampusCreateManyArgs>(args?: SelectSubset<T, CampusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Campuses and returns the data saved in the database.
     * @param {CampusCreateManyAndReturnArgs} args - Arguments to create many Campuses.
     * @example
     * // Create many Campuses
     * const campus = await prisma.campus.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Campuses and only return the `campus_id`
     * const campusWithCampus_idOnly = await prisma.campus.createManyAndReturn({
     *   select: { campus_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CampusCreateManyAndReturnArgs>(args?: SelectSubset<T, CampusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Campus.
     * @param {CampusDeleteArgs} args - Arguments to delete one Campus.
     * @example
     * // Delete one Campus
     * const Campus = await prisma.campus.delete({
     *   where: {
     *     // ... filter to delete one Campus
     *   }
     * })
     * 
     */
    delete<T extends CampusDeleteArgs>(args: SelectSubset<T, CampusDeleteArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Campus.
     * @param {CampusUpdateArgs} args - Arguments to update one Campus.
     * @example
     * // Update one Campus
     * const campus = await prisma.campus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CampusUpdateArgs>(args: SelectSubset<T, CampusUpdateArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Campuses.
     * @param {CampusDeleteManyArgs} args - Arguments to filter Campuses to delete.
     * @example
     * // Delete a few Campuses
     * const { count } = await prisma.campus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CampusDeleteManyArgs>(args?: SelectSubset<T, CampusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Campuses
     * const campus = await prisma.campus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CampusUpdateManyArgs>(args: SelectSubset<T, CampusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campuses and returns the data updated in the database.
     * @param {CampusUpdateManyAndReturnArgs} args - Arguments to update many Campuses.
     * @example
     * // Update many Campuses
     * const campus = await prisma.campus.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Campuses and only return the `campus_id`
     * const campusWithCampus_idOnly = await prisma.campus.updateManyAndReturn({
     *   select: { campus_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CampusUpdateManyAndReturnArgs>(args: SelectSubset<T, CampusUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Campus.
     * @param {CampusUpsertArgs} args - Arguments to update or create a Campus.
     * @example
     * // Update or create a Campus
     * const campus = await prisma.campus.upsert({
     *   create: {
     *     // ... data to create a Campus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Campus we want to update
     *   }
     * })
     */
    upsert<T extends CampusUpsertArgs>(args: SelectSubset<T, CampusUpsertArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Campuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampusCountArgs} args - Arguments to filter Campuses to count.
     * @example
     * // Count the number of Campuses
     * const count = await prisma.campus.count({
     *   where: {
     *     // ... the filter for the Campuses we want to count
     *   }
     * })
    **/
    count<T extends CampusCountArgs>(
      args?: Subset<T, CampusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CampusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Campus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CampusAggregateArgs>(args: Subset<T, CampusAggregateArgs>): Prisma.PrismaPromise<GetCampusAggregateType<T>>

    /**
     * Group by Campus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CampusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CampusGroupByArgs['orderBy'] }
        : { orderBy?: CampusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CampusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCampusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Campus model
   */
  readonly fields: CampusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Campus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CampusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Campus$usersArgs<ExtArgs> = {}>(args?: Subset<T, Campus$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    communities<T extends Campus$communitiesArgs<ExtArgs> = {}>(args?: Subset<T, Campus$communitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Campus model
   */
  interface CampusFieldRefs {
    readonly campus_id: FieldRef<"Campus", 'String'>
    readonly campus_name: FieldRef<"Campus", 'String'>
    readonly location_details: FieldRef<"Campus", 'String'>
    readonly created_at: FieldRef<"Campus", 'DateTime'>
    readonly updated_at: FieldRef<"Campus", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Campus findUnique
   */
  export type CampusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    /**
     * Filter, which Campus to fetch.
     */
    where: CampusWhereUniqueInput
  }

  /**
   * Campus findUniqueOrThrow
   */
  export type CampusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    /**
     * Filter, which Campus to fetch.
     */
    where: CampusWhereUniqueInput
  }

  /**
   * Campus findFirst
   */
  export type CampusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    /**
     * Filter, which Campus to fetch.
     */
    where?: CampusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campuses to fetch.
     */
    orderBy?: CampusOrderByWithRelationInput | CampusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campuses.
     */
    cursor?: CampusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campuses.
     */
    distinct?: CampusScalarFieldEnum | CampusScalarFieldEnum[]
  }

  /**
   * Campus findFirstOrThrow
   */
  export type CampusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    /**
     * Filter, which Campus to fetch.
     */
    where?: CampusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campuses to fetch.
     */
    orderBy?: CampusOrderByWithRelationInput | CampusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campuses.
     */
    cursor?: CampusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campuses.
     */
    distinct?: CampusScalarFieldEnum | CampusScalarFieldEnum[]
  }

  /**
   * Campus findMany
   */
  export type CampusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    /**
     * Filter, which Campuses to fetch.
     */
    where?: CampusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campuses to fetch.
     */
    orderBy?: CampusOrderByWithRelationInput | CampusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Campuses.
     */
    cursor?: CampusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campuses.
     */
    skip?: number
    distinct?: CampusScalarFieldEnum | CampusScalarFieldEnum[]
  }

  /**
   * Campus create
   */
  export type CampusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    /**
     * The data needed to create a Campus.
     */
    data: XOR<CampusCreateInput, CampusUncheckedCreateInput>
  }

  /**
   * Campus createMany
   */
  export type CampusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Campuses.
     */
    data: CampusCreateManyInput | CampusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Campus createManyAndReturn
   */
  export type CampusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * The data used to create many Campuses.
     */
    data: CampusCreateManyInput | CampusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Campus update
   */
  export type CampusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    /**
     * The data needed to update a Campus.
     */
    data: XOR<CampusUpdateInput, CampusUncheckedUpdateInput>
    /**
     * Choose, which Campus to update.
     */
    where: CampusWhereUniqueInput
  }

  /**
   * Campus updateMany
   */
  export type CampusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Campuses.
     */
    data: XOR<CampusUpdateManyMutationInput, CampusUncheckedUpdateManyInput>
    /**
     * Filter which Campuses to update
     */
    where?: CampusWhereInput
    /**
     * Limit how many Campuses to update.
     */
    limit?: number
  }

  /**
   * Campus updateManyAndReturn
   */
  export type CampusUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * The data used to update Campuses.
     */
    data: XOR<CampusUpdateManyMutationInput, CampusUncheckedUpdateManyInput>
    /**
     * Filter which Campuses to update
     */
    where?: CampusWhereInput
    /**
     * Limit how many Campuses to update.
     */
    limit?: number
  }

  /**
   * Campus upsert
   */
  export type CampusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    /**
     * The filter to search for the Campus to update in case it exists.
     */
    where: CampusWhereUniqueInput
    /**
     * In case the Campus found by the `where` argument doesn't exist, create a new Campus with this data.
     */
    create: XOR<CampusCreateInput, CampusUncheckedCreateInput>
    /**
     * In case the Campus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CampusUpdateInput, CampusUncheckedUpdateInput>
  }

  /**
   * Campus delete
   */
  export type CampusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    /**
     * Filter which Campus to delete.
     */
    where: CampusWhereUniqueInput
  }

  /**
   * Campus deleteMany
   */
  export type CampusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campuses to delete
     */
    where?: CampusWhereInput
    /**
     * Limit how many Campuses to delete.
     */
    limit?: number
  }

  /**
   * Campus.users
   */
  export type Campus$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Campus.communities
   */
  export type Campus$communitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    where?: CommunityWhereInput
    orderBy?: CommunityOrderByWithRelationInput | CommunityOrderByWithRelationInput[]
    cursor?: CommunityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * Campus without action
   */
  export type CampusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
  }


  /**
   * Model Faculty
   */

  export type AggregateFaculty = {
    _count: FacultyCountAggregateOutputType | null
    _min: FacultyMinAggregateOutputType | null
    _max: FacultyMaxAggregateOutputType | null
  }

  export type FacultyMinAggregateOutputType = {
    faculty_id: string | null
    faculty_name: string | null
    faculty_abbreviation: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type FacultyMaxAggregateOutputType = {
    faculty_id: string | null
    faculty_name: string | null
    faculty_abbreviation: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type FacultyCountAggregateOutputType = {
    faculty_id: number
    faculty_name: number
    faculty_abbreviation: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type FacultyMinAggregateInputType = {
    faculty_id?: true
    faculty_name?: true
    faculty_abbreviation?: true
    created_at?: true
    updated_at?: true
  }

  export type FacultyMaxAggregateInputType = {
    faculty_id?: true
    faculty_name?: true
    faculty_abbreviation?: true
    created_at?: true
    updated_at?: true
  }

  export type FacultyCountAggregateInputType = {
    faculty_id?: true
    faculty_name?: true
    faculty_abbreviation?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type FacultyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Faculty to aggregate.
     */
    where?: FacultyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faculties to fetch.
     */
    orderBy?: FacultyOrderByWithRelationInput | FacultyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FacultyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faculties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faculties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Faculties
    **/
    _count?: true | FacultyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FacultyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FacultyMaxAggregateInputType
  }

  export type GetFacultyAggregateType<T extends FacultyAggregateArgs> = {
        [P in keyof T & keyof AggregateFaculty]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFaculty[P]>
      : GetScalarType<T[P], AggregateFaculty[P]>
  }




  export type FacultyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FacultyWhereInput
    orderBy?: FacultyOrderByWithAggregationInput | FacultyOrderByWithAggregationInput[]
    by: FacultyScalarFieldEnum[] | FacultyScalarFieldEnum
    having?: FacultyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FacultyCountAggregateInputType | true
    _min?: FacultyMinAggregateInputType
    _max?: FacultyMaxAggregateInputType
  }

  export type FacultyGroupByOutputType = {
    faculty_id: string
    faculty_name: string
    faculty_abbreviation: string | null
    created_at: Date
    updated_at: Date
    _count: FacultyCountAggregateOutputType | null
    _min: FacultyMinAggregateOutputType | null
    _max: FacultyMaxAggregateOutputType | null
  }

  type GetFacultyGroupByPayload<T extends FacultyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FacultyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FacultyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FacultyGroupByOutputType[P]>
            : GetScalarType<T[P], FacultyGroupByOutputType[P]>
        }
      >
    >


  export type FacultySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    faculty_id?: boolean
    faculty_name?: boolean
    faculty_abbreviation?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | Faculty$usersArgs<ExtArgs>
    courses?: boolean | Faculty$coursesArgs<ExtArgs>
    units?: boolean | Faculty$unitsArgs<ExtArgs>
    communities?: boolean | Faculty$communitiesArgs<ExtArgs>
    _count?: boolean | FacultyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["faculty"]>

  export type FacultySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    faculty_id?: boolean
    faculty_name?: boolean
    faculty_abbreviation?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["faculty"]>

  export type FacultySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    faculty_id?: boolean
    faculty_name?: boolean
    faculty_abbreviation?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["faculty"]>

  export type FacultySelectScalar = {
    faculty_id?: boolean
    faculty_name?: boolean
    faculty_abbreviation?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type FacultyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"faculty_id" | "faculty_name" | "faculty_abbreviation" | "created_at" | "updated_at", ExtArgs["result"]["faculty"]>
  export type FacultyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | Faculty$usersArgs<ExtArgs>
    courses?: boolean | Faculty$coursesArgs<ExtArgs>
    units?: boolean | Faculty$unitsArgs<ExtArgs>
    communities?: boolean | Faculty$communitiesArgs<ExtArgs>
    _count?: boolean | FacultyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FacultyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type FacultyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $FacultyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Faculty"
    objects: {
      users: Prisma.$UserPayload<ExtArgs>[]
      courses: Prisma.$CoursePayload<ExtArgs>[]
      units: Prisma.$UnitPayload<ExtArgs>[]
      communities: Prisma.$CommunityPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      faculty_id: string
      faculty_name: string
      faculty_abbreviation: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["faculty"]>
    composites: {}
  }

  type FacultyGetPayload<S extends boolean | null | undefined | FacultyDefaultArgs> = $Result.GetResult<Prisma.$FacultyPayload, S>

  type FacultyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FacultyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FacultyCountAggregateInputType | true
    }

  export interface FacultyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Faculty'], meta: { name: 'Faculty' } }
    /**
     * Find zero or one Faculty that matches the filter.
     * @param {FacultyFindUniqueArgs} args - Arguments to find a Faculty
     * @example
     * // Get one Faculty
     * const faculty = await prisma.faculty.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FacultyFindUniqueArgs>(args: SelectSubset<T, FacultyFindUniqueArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Faculty that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FacultyFindUniqueOrThrowArgs} args - Arguments to find a Faculty
     * @example
     * // Get one Faculty
     * const faculty = await prisma.faculty.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FacultyFindUniqueOrThrowArgs>(args: SelectSubset<T, FacultyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Faculty that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacultyFindFirstArgs} args - Arguments to find a Faculty
     * @example
     * // Get one Faculty
     * const faculty = await prisma.faculty.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FacultyFindFirstArgs>(args?: SelectSubset<T, FacultyFindFirstArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Faculty that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacultyFindFirstOrThrowArgs} args - Arguments to find a Faculty
     * @example
     * // Get one Faculty
     * const faculty = await prisma.faculty.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FacultyFindFirstOrThrowArgs>(args?: SelectSubset<T, FacultyFindFirstOrThrowArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Faculties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacultyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Faculties
     * const faculties = await prisma.faculty.findMany()
     * 
     * // Get first 10 Faculties
     * const faculties = await prisma.faculty.findMany({ take: 10 })
     * 
     * // Only select the `faculty_id`
     * const facultyWithFaculty_idOnly = await prisma.faculty.findMany({ select: { faculty_id: true } })
     * 
     */
    findMany<T extends FacultyFindManyArgs>(args?: SelectSubset<T, FacultyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Faculty.
     * @param {FacultyCreateArgs} args - Arguments to create a Faculty.
     * @example
     * // Create one Faculty
     * const Faculty = await prisma.faculty.create({
     *   data: {
     *     // ... data to create a Faculty
     *   }
     * })
     * 
     */
    create<T extends FacultyCreateArgs>(args: SelectSubset<T, FacultyCreateArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Faculties.
     * @param {FacultyCreateManyArgs} args - Arguments to create many Faculties.
     * @example
     * // Create many Faculties
     * const faculty = await prisma.faculty.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FacultyCreateManyArgs>(args?: SelectSubset<T, FacultyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Faculties and returns the data saved in the database.
     * @param {FacultyCreateManyAndReturnArgs} args - Arguments to create many Faculties.
     * @example
     * // Create many Faculties
     * const faculty = await prisma.faculty.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Faculties and only return the `faculty_id`
     * const facultyWithFaculty_idOnly = await prisma.faculty.createManyAndReturn({
     *   select: { faculty_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FacultyCreateManyAndReturnArgs>(args?: SelectSubset<T, FacultyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Faculty.
     * @param {FacultyDeleteArgs} args - Arguments to delete one Faculty.
     * @example
     * // Delete one Faculty
     * const Faculty = await prisma.faculty.delete({
     *   where: {
     *     // ... filter to delete one Faculty
     *   }
     * })
     * 
     */
    delete<T extends FacultyDeleteArgs>(args: SelectSubset<T, FacultyDeleteArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Faculty.
     * @param {FacultyUpdateArgs} args - Arguments to update one Faculty.
     * @example
     * // Update one Faculty
     * const faculty = await prisma.faculty.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FacultyUpdateArgs>(args: SelectSubset<T, FacultyUpdateArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Faculties.
     * @param {FacultyDeleteManyArgs} args - Arguments to filter Faculties to delete.
     * @example
     * // Delete a few Faculties
     * const { count } = await prisma.faculty.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FacultyDeleteManyArgs>(args?: SelectSubset<T, FacultyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Faculties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacultyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Faculties
     * const faculty = await prisma.faculty.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FacultyUpdateManyArgs>(args: SelectSubset<T, FacultyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Faculties and returns the data updated in the database.
     * @param {FacultyUpdateManyAndReturnArgs} args - Arguments to update many Faculties.
     * @example
     * // Update many Faculties
     * const faculty = await prisma.faculty.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Faculties and only return the `faculty_id`
     * const facultyWithFaculty_idOnly = await prisma.faculty.updateManyAndReturn({
     *   select: { faculty_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FacultyUpdateManyAndReturnArgs>(args: SelectSubset<T, FacultyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Faculty.
     * @param {FacultyUpsertArgs} args - Arguments to update or create a Faculty.
     * @example
     * // Update or create a Faculty
     * const faculty = await prisma.faculty.upsert({
     *   create: {
     *     // ... data to create a Faculty
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Faculty we want to update
     *   }
     * })
     */
    upsert<T extends FacultyUpsertArgs>(args: SelectSubset<T, FacultyUpsertArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Faculties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacultyCountArgs} args - Arguments to filter Faculties to count.
     * @example
     * // Count the number of Faculties
     * const count = await prisma.faculty.count({
     *   where: {
     *     // ... the filter for the Faculties we want to count
     *   }
     * })
    **/
    count<T extends FacultyCountArgs>(
      args?: Subset<T, FacultyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FacultyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Faculty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacultyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FacultyAggregateArgs>(args: Subset<T, FacultyAggregateArgs>): Prisma.PrismaPromise<GetFacultyAggregateType<T>>

    /**
     * Group by Faculty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacultyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FacultyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FacultyGroupByArgs['orderBy'] }
        : { orderBy?: FacultyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FacultyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFacultyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Faculty model
   */
  readonly fields: FacultyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Faculty.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FacultyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends Faculty$usersArgs<ExtArgs> = {}>(args?: Subset<T, Faculty$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    courses<T extends Faculty$coursesArgs<ExtArgs> = {}>(args?: Subset<T, Faculty$coursesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    units<T extends Faculty$unitsArgs<ExtArgs> = {}>(args?: Subset<T, Faculty$unitsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    communities<T extends Faculty$communitiesArgs<ExtArgs> = {}>(args?: Subset<T, Faculty$communitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Faculty model
   */
  interface FacultyFieldRefs {
    readonly faculty_id: FieldRef<"Faculty", 'String'>
    readonly faculty_name: FieldRef<"Faculty", 'String'>
    readonly faculty_abbreviation: FieldRef<"Faculty", 'String'>
    readonly created_at: FieldRef<"Faculty", 'DateTime'>
    readonly updated_at: FieldRef<"Faculty", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Faculty findUnique
   */
  export type FacultyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    /**
     * Filter, which Faculty to fetch.
     */
    where: FacultyWhereUniqueInput
  }

  /**
   * Faculty findUniqueOrThrow
   */
  export type FacultyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    /**
     * Filter, which Faculty to fetch.
     */
    where: FacultyWhereUniqueInput
  }

  /**
   * Faculty findFirst
   */
  export type FacultyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    /**
     * Filter, which Faculty to fetch.
     */
    where?: FacultyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faculties to fetch.
     */
    orderBy?: FacultyOrderByWithRelationInput | FacultyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Faculties.
     */
    cursor?: FacultyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faculties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faculties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Faculties.
     */
    distinct?: FacultyScalarFieldEnum | FacultyScalarFieldEnum[]
  }

  /**
   * Faculty findFirstOrThrow
   */
  export type FacultyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    /**
     * Filter, which Faculty to fetch.
     */
    where?: FacultyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faculties to fetch.
     */
    orderBy?: FacultyOrderByWithRelationInput | FacultyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Faculties.
     */
    cursor?: FacultyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faculties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faculties.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Faculties.
     */
    distinct?: FacultyScalarFieldEnum | FacultyScalarFieldEnum[]
  }

  /**
   * Faculty findMany
   */
  export type FacultyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    /**
     * Filter, which Faculties to fetch.
     */
    where?: FacultyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faculties to fetch.
     */
    orderBy?: FacultyOrderByWithRelationInput | FacultyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Faculties.
     */
    cursor?: FacultyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faculties from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faculties.
     */
    skip?: number
    distinct?: FacultyScalarFieldEnum | FacultyScalarFieldEnum[]
  }

  /**
   * Faculty create
   */
  export type FacultyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    /**
     * The data needed to create a Faculty.
     */
    data: XOR<FacultyCreateInput, FacultyUncheckedCreateInput>
  }

  /**
   * Faculty createMany
   */
  export type FacultyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Faculties.
     */
    data: FacultyCreateManyInput | FacultyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Faculty createManyAndReturn
   */
  export type FacultyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * The data used to create many Faculties.
     */
    data: FacultyCreateManyInput | FacultyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Faculty update
   */
  export type FacultyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    /**
     * The data needed to update a Faculty.
     */
    data: XOR<FacultyUpdateInput, FacultyUncheckedUpdateInput>
    /**
     * Choose, which Faculty to update.
     */
    where: FacultyWhereUniqueInput
  }

  /**
   * Faculty updateMany
   */
  export type FacultyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Faculties.
     */
    data: XOR<FacultyUpdateManyMutationInput, FacultyUncheckedUpdateManyInput>
    /**
     * Filter which Faculties to update
     */
    where?: FacultyWhereInput
    /**
     * Limit how many Faculties to update.
     */
    limit?: number
  }

  /**
   * Faculty updateManyAndReturn
   */
  export type FacultyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * The data used to update Faculties.
     */
    data: XOR<FacultyUpdateManyMutationInput, FacultyUncheckedUpdateManyInput>
    /**
     * Filter which Faculties to update
     */
    where?: FacultyWhereInput
    /**
     * Limit how many Faculties to update.
     */
    limit?: number
  }

  /**
   * Faculty upsert
   */
  export type FacultyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    /**
     * The filter to search for the Faculty to update in case it exists.
     */
    where: FacultyWhereUniqueInput
    /**
     * In case the Faculty found by the `where` argument doesn't exist, create a new Faculty with this data.
     */
    create: XOR<FacultyCreateInput, FacultyUncheckedCreateInput>
    /**
     * In case the Faculty was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FacultyUpdateInput, FacultyUncheckedUpdateInput>
  }

  /**
   * Faculty delete
   */
  export type FacultyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    /**
     * Filter which Faculty to delete.
     */
    where: FacultyWhereUniqueInput
  }

  /**
   * Faculty deleteMany
   */
  export type FacultyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Faculties to delete
     */
    where?: FacultyWhereInput
    /**
     * Limit how many Faculties to delete.
     */
    limit?: number
  }

  /**
   * Faculty.users
   */
  export type Faculty$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Faculty.courses
   */
  export type Faculty$coursesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    where?: CourseWhereInput
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    cursor?: CourseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]
  }

  /**
   * Faculty.units
   */
  export type Faculty$unitsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    where?: UnitWhereInput
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    cursor?: UnitWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UnitScalarFieldEnum | UnitScalarFieldEnum[]
  }

  /**
   * Faculty.communities
   */
  export type Faculty$communitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    where?: CommunityWhereInput
    orderBy?: CommunityOrderByWithRelationInput | CommunityOrderByWithRelationInput[]
    cursor?: CommunityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * Faculty without action
   */
  export type FacultyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
  }


  /**
   * Model Course
   */

  export type AggregateCourse = {
    _count: CourseCountAggregateOutputType | null
    _min: CourseMinAggregateOutputType | null
    _max: CourseMaxAggregateOutputType | null
  }

  export type CourseMinAggregateOutputType = {
    course_id: string | null
    course_code: string | null
    course_name: string | null
    course_description: string | null
    created_at: Date | null
    updated_at: Date | null
    faculty_id: string | null
  }

  export type CourseMaxAggregateOutputType = {
    course_id: string | null
    course_code: string | null
    course_name: string | null
    course_description: string | null
    created_at: Date | null
    updated_at: Date | null
    faculty_id: string | null
  }

  export type CourseCountAggregateOutputType = {
    course_id: number
    course_code: number
    course_name: number
    course_description: number
    created_at: number
    updated_at: number
    faculty_id: number
    _all: number
  }


  export type CourseMinAggregateInputType = {
    course_id?: true
    course_code?: true
    course_name?: true
    course_description?: true
    created_at?: true
    updated_at?: true
    faculty_id?: true
  }

  export type CourseMaxAggregateInputType = {
    course_id?: true
    course_code?: true
    course_name?: true
    course_description?: true
    created_at?: true
    updated_at?: true
    faculty_id?: true
  }

  export type CourseCountAggregateInputType = {
    course_id?: true
    course_code?: true
    course_name?: true
    course_description?: true
    created_at?: true
    updated_at?: true
    faculty_id?: true
    _all?: true
  }

  export type CourseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Course to aggregate.
     */
    where?: CourseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Courses to fetch.
     */
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CourseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Courses
    **/
    _count?: true | CourseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CourseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CourseMaxAggregateInputType
  }

  export type GetCourseAggregateType<T extends CourseAggregateArgs> = {
        [P in keyof T & keyof AggregateCourse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCourse[P]>
      : GetScalarType<T[P], AggregateCourse[P]>
  }




  export type CourseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CourseWhereInput
    orderBy?: CourseOrderByWithAggregationInput | CourseOrderByWithAggregationInput[]
    by: CourseScalarFieldEnum[] | CourseScalarFieldEnum
    having?: CourseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CourseCountAggregateInputType | true
    _min?: CourseMinAggregateInputType
    _max?: CourseMaxAggregateInputType
  }

  export type CourseGroupByOutputType = {
    course_id: string
    course_code: string
    course_name: string
    course_description: string | null
    created_at: Date
    updated_at: Date
    faculty_id: string
    _count: CourseCountAggregateOutputType | null
    _min: CourseMinAggregateOutputType | null
    _max: CourseMaxAggregateOutputType | null
  }

  type GetCourseGroupByPayload<T extends CourseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CourseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CourseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CourseGroupByOutputType[P]>
            : GetScalarType<T[P], CourseGroupByOutputType[P]>
        }
      >
    >


  export type CourseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    course_id?: boolean
    course_code?: boolean
    course_name?: boolean
    course_description?: boolean
    created_at?: boolean
    updated_at?: boolean
    faculty_id?: boolean
    faculty?: boolean | FacultyDefaultArgs<ExtArgs>
    users?: boolean | Course$usersArgs<ExtArgs>
    communities?: boolean | Course$communitiesArgs<ExtArgs>
    _count?: boolean | CourseCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["course"]>

  export type CourseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    course_id?: boolean
    course_code?: boolean
    course_name?: boolean
    course_description?: boolean
    created_at?: boolean
    updated_at?: boolean
    faculty_id?: boolean
    faculty?: boolean | FacultyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["course"]>

  export type CourseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    course_id?: boolean
    course_code?: boolean
    course_name?: boolean
    course_description?: boolean
    created_at?: boolean
    updated_at?: boolean
    faculty_id?: boolean
    faculty?: boolean | FacultyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["course"]>

  export type CourseSelectScalar = {
    course_id?: boolean
    course_code?: boolean
    course_name?: boolean
    course_description?: boolean
    created_at?: boolean
    updated_at?: boolean
    faculty_id?: boolean
  }

  export type CourseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"course_id" | "course_code" | "course_name" | "course_description" | "created_at" | "updated_at" | "faculty_id", ExtArgs["result"]["course"]>
  export type CourseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    faculty?: boolean | FacultyDefaultArgs<ExtArgs>
    users?: boolean | Course$usersArgs<ExtArgs>
    communities?: boolean | Course$communitiesArgs<ExtArgs>
    _count?: boolean | CourseCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CourseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    faculty?: boolean | FacultyDefaultArgs<ExtArgs>
  }
  export type CourseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    faculty?: boolean | FacultyDefaultArgs<ExtArgs>
  }

  export type $CoursePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Course"
    objects: {
      faculty: Prisma.$FacultyPayload<ExtArgs>
      users: Prisma.$UserPayload<ExtArgs>[]
      communities: Prisma.$CommunityPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      course_id: string
      course_code: string
      course_name: string
      course_description: string | null
      created_at: Date
      updated_at: Date
      faculty_id: string
    }, ExtArgs["result"]["course"]>
    composites: {}
  }

  type CourseGetPayload<S extends boolean | null | undefined | CourseDefaultArgs> = $Result.GetResult<Prisma.$CoursePayload, S>

  type CourseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CourseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CourseCountAggregateInputType | true
    }

  export interface CourseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Course'], meta: { name: 'Course' } }
    /**
     * Find zero or one Course that matches the filter.
     * @param {CourseFindUniqueArgs} args - Arguments to find a Course
     * @example
     * // Get one Course
     * const course = await prisma.course.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CourseFindUniqueArgs>(args: SelectSubset<T, CourseFindUniqueArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Course that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CourseFindUniqueOrThrowArgs} args - Arguments to find a Course
     * @example
     * // Get one Course
     * const course = await prisma.course.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CourseFindUniqueOrThrowArgs>(args: SelectSubset<T, CourseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Course that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseFindFirstArgs} args - Arguments to find a Course
     * @example
     * // Get one Course
     * const course = await prisma.course.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CourseFindFirstArgs>(args?: SelectSubset<T, CourseFindFirstArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Course that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseFindFirstOrThrowArgs} args - Arguments to find a Course
     * @example
     * // Get one Course
     * const course = await prisma.course.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CourseFindFirstOrThrowArgs>(args?: SelectSubset<T, CourseFindFirstOrThrowArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Courses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Courses
     * const courses = await prisma.course.findMany()
     * 
     * // Get first 10 Courses
     * const courses = await prisma.course.findMany({ take: 10 })
     * 
     * // Only select the `course_id`
     * const courseWithCourse_idOnly = await prisma.course.findMany({ select: { course_id: true } })
     * 
     */
    findMany<T extends CourseFindManyArgs>(args?: SelectSubset<T, CourseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Course.
     * @param {CourseCreateArgs} args - Arguments to create a Course.
     * @example
     * // Create one Course
     * const Course = await prisma.course.create({
     *   data: {
     *     // ... data to create a Course
     *   }
     * })
     * 
     */
    create<T extends CourseCreateArgs>(args: SelectSubset<T, CourseCreateArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Courses.
     * @param {CourseCreateManyArgs} args - Arguments to create many Courses.
     * @example
     * // Create many Courses
     * const course = await prisma.course.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CourseCreateManyArgs>(args?: SelectSubset<T, CourseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Courses and returns the data saved in the database.
     * @param {CourseCreateManyAndReturnArgs} args - Arguments to create many Courses.
     * @example
     * // Create many Courses
     * const course = await prisma.course.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Courses and only return the `course_id`
     * const courseWithCourse_idOnly = await prisma.course.createManyAndReturn({
     *   select: { course_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CourseCreateManyAndReturnArgs>(args?: SelectSubset<T, CourseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Course.
     * @param {CourseDeleteArgs} args - Arguments to delete one Course.
     * @example
     * // Delete one Course
     * const Course = await prisma.course.delete({
     *   where: {
     *     // ... filter to delete one Course
     *   }
     * })
     * 
     */
    delete<T extends CourseDeleteArgs>(args: SelectSubset<T, CourseDeleteArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Course.
     * @param {CourseUpdateArgs} args - Arguments to update one Course.
     * @example
     * // Update one Course
     * const course = await prisma.course.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CourseUpdateArgs>(args: SelectSubset<T, CourseUpdateArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Courses.
     * @param {CourseDeleteManyArgs} args - Arguments to filter Courses to delete.
     * @example
     * // Delete a few Courses
     * const { count } = await prisma.course.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CourseDeleteManyArgs>(args?: SelectSubset<T, CourseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Courses
     * const course = await prisma.course.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CourseUpdateManyArgs>(args: SelectSubset<T, CourseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Courses and returns the data updated in the database.
     * @param {CourseUpdateManyAndReturnArgs} args - Arguments to update many Courses.
     * @example
     * // Update many Courses
     * const course = await prisma.course.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Courses and only return the `course_id`
     * const courseWithCourse_idOnly = await prisma.course.updateManyAndReturn({
     *   select: { course_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CourseUpdateManyAndReturnArgs>(args: SelectSubset<T, CourseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Course.
     * @param {CourseUpsertArgs} args - Arguments to update or create a Course.
     * @example
     * // Update or create a Course
     * const course = await prisma.course.upsert({
     *   create: {
     *     // ... data to create a Course
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Course we want to update
     *   }
     * })
     */
    upsert<T extends CourseUpsertArgs>(args: SelectSubset<T, CourseUpsertArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Courses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseCountArgs} args - Arguments to filter Courses to count.
     * @example
     * // Count the number of Courses
     * const count = await prisma.course.count({
     *   where: {
     *     // ... the filter for the Courses we want to count
     *   }
     * })
    **/
    count<T extends CourseCountArgs>(
      args?: Subset<T, CourseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CourseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Course.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CourseAggregateArgs>(args: Subset<T, CourseAggregateArgs>): Prisma.PrismaPromise<GetCourseAggregateType<T>>

    /**
     * Group by Course.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CourseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CourseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CourseGroupByArgs['orderBy'] }
        : { orderBy?: CourseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CourseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCourseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Course model
   */
  readonly fields: CourseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Course.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CourseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    faculty<T extends FacultyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, FacultyDefaultArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends Course$usersArgs<ExtArgs> = {}>(args?: Subset<T, Course$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    communities<T extends Course$communitiesArgs<ExtArgs> = {}>(args?: Subset<T, Course$communitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Course model
   */
  interface CourseFieldRefs {
    readonly course_id: FieldRef<"Course", 'String'>
    readonly course_code: FieldRef<"Course", 'String'>
    readonly course_name: FieldRef<"Course", 'String'>
    readonly course_description: FieldRef<"Course", 'String'>
    readonly created_at: FieldRef<"Course", 'DateTime'>
    readonly updated_at: FieldRef<"Course", 'DateTime'>
    readonly faculty_id: FieldRef<"Course", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Course findUnique
   */
  export type CourseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Course to fetch.
     */
    where: CourseWhereUniqueInput
  }

  /**
   * Course findUniqueOrThrow
   */
  export type CourseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Course to fetch.
     */
    where: CourseWhereUniqueInput
  }

  /**
   * Course findFirst
   */
  export type CourseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Course to fetch.
     */
    where?: CourseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Courses to fetch.
     */
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Courses.
     */
    cursor?: CourseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Courses.
     */
    distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]
  }

  /**
   * Course findFirstOrThrow
   */
  export type CourseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Course to fetch.
     */
    where?: CourseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Courses to fetch.
     */
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Courses.
     */
    cursor?: CourseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Courses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Courses.
     */
    distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]
  }

  /**
   * Course findMany
   */
  export type CourseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter, which Courses to fetch.
     */
    where?: CourseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Courses to fetch.
     */
    orderBy?: CourseOrderByWithRelationInput | CourseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Courses.
     */
    cursor?: CourseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Courses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Courses.
     */
    skip?: number
    distinct?: CourseScalarFieldEnum | CourseScalarFieldEnum[]
  }

  /**
   * Course create
   */
  export type CourseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * The data needed to create a Course.
     */
    data: XOR<CourseCreateInput, CourseUncheckedCreateInput>
  }

  /**
   * Course createMany
   */
  export type CourseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Courses.
     */
    data: CourseCreateManyInput | CourseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Course createManyAndReturn
   */
  export type CourseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * The data used to create many Courses.
     */
    data: CourseCreateManyInput | CourseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Course update
   */
  export type CourseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * The data needed to update a Course.
     */
    data: XOR<CourseUpdateInput, CourseUncheckedUpdateInput>
    /**
     * Choose, which Course to update.
     */
    where: CourseWhereUniqueInput
  }

  /**
   * Course updateMany
   */
  export type CourseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Courses.
     */
    data: XOR<CourseUpdateManyMutationInput, CourseUncheckedUpdateManyInput>
    /**
     * Filter which Courses to update
     */
    where?: CourseWhereInput
    /**
     * Limit how many Courses to update.
     */
    limit?: number
  }

  /**
   * Course updateManyAndReturn
   */
  export type CourseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * The data used to update Courses.
     */
    data: XOR<CourseUpdateManyMutationInput, CourseUncheckedUpdateManyInput>
    /**
     * Filter which Courses to update
     */
    where?: CourseWhereInput
    /**
     * Limit how many Courses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Course upsert
   */
  export type CourseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * The filter to search for the Course to update in case it exists.
     */
    where: CourseWhereUniqueInput
    /**
     * In case the Course found by the `where` argument doesn't exist, create a new Course with this data.
     */
    create: XOR<CourseCreateInput, CourseUncheckedCreateInput>
    /**
     * In case the Course was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CourseUpdateInput, CourseUncheckedUpdateInput>
  }

  /**
   * Course delete
   */
  export type CourseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    /**
     * Filter which Course to delete.
     */
    where: CourseWhereUniqueInput
  }

  /**
   * Course deleteMany
   */
  export type CourseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Courses to delete
     */
    where?: CourseWhereInput
    /**
     * Limit how many Courses to delete.
     */
    limit?: number
  }

  /**
   * Course.users
   */
  export type Course$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Course.communities
   */
  export type Course$communitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    where?: CommunityWhereInput
    orderBy?: CommunityOrderByWithRelationInput | CommunityOrderByWithRelationInput[]
    cursor?: CommunityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * Course without action
   */
  export type CourseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
  }


  /**
   * Model Unit
   */

  export type AggregateUnit = {
    _count: UnitCountAggregateOutputType | null
    _avg: UnitAvgAggregateOutputType | null
    _sum: UnitSumAggregateOutputType | null
    _min: UnitMinAggregateOutputType | null
    _max: UnitMaxAggregateOutputType | null
  }

  export type UnitAvgAggregateOutputType = {
    year_level: number | null
  }

  export type UnitSumAggregateOutputType = {
    year_level: number | null
  }

  export type UnitMinAggregateOutputType = {
    unit_id: string | null
    unit_code: string | null
    unit_name: string | null
    unit_description: string | null
    semester_offered: string | null
    year_level: number | null
    created_at: Date | null
    updated_at: Date | null
    faculty_id: string | null
  }

  export type UnitMaxAggregateOutputType = {
    unit_id: string | null
    unit_code: string | null
    unit_name: string | null
    unit_description: string | null
    semester_offered: string | null
    year_level: number | null
    created_at: Date | null
    updated_at: Date | null
    faculty_id: string | null
  }

  export type UnitCountAggregateOutputType = {
    unit_id: number
    unit_code: number
    unit_name: number
    unit_description: number
    semester_offered: number
    year_level: number
    created_at: number
    updated_at: number
    faculty_id: number
    _all: number
  }


  export type UnitAvgAggregateInputType = {
    year_level?: true
  }

  export type UnitSumAggregateInputType = {
    year_level?: true
  }

  export type UnitMinAggregateInputType = {
    unit_id?: true
    unit_code?: true
    unit_name?: true
    unit_description?: true
    semester_offered?: true
    year_level?: true
    created_at?: true
    updated_at?: true
    faculty_id?: true
  }

  export type UnitMaxAggregateInputType = {
    unit_id?: true
    unit_code?: true
    unit_name?: true
    unit_description?: true
    semester_offered?: true
    year_level?: true
    created_at?: true
    updated_at?: true
    faculty_id?: true
  }

  export type UnitCountAggregateInputType = {
    unit_id?: true
    unit_code?: true
    unit_name?: true
    unit_description?: true
    semester_offered?: true
    year_level?: true
    created_at?: true
    updated_at?: true
    faculty_id?: true
    _all?: true
  }

  export type UnitAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Unit to aggregate.
     */
    where?: UnitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UnitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Units
    **/
    _count?: true | UnitCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UnitAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UnitSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UnitMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UnitMaxAggregateInputType
  }

  export type GetUnitAggregateType<T extends UnitAggregateArgs> = {
        [P in keyof T & keyof AggregateUnit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUnit[P]>
      : GetScalarType<T[P], AggregateUnit[P]>
  }




  export type UnitGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UnitWhereInput
    orderBy?: UnitOrderByWithAggregationInput | UnitOrderByWithAggregationInput[]
    by: UnitScalarFieldEnum[] | UnitScalarFieldEnum
    having?: UnitScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UnitCountAggregateInputType | true
    _avg?: UnitAvgAggregateInputType
    _sum?: UnitSumAggregateInputType
    _min?: UnitMinAggregateInputType
    _max?: UnitMaxAggregateInputType
  }

  export type UnitGroupByOutputType = {
    unit_id: string
    unit_code: string
    unit_name: string
    unit_description: string | null
    semester_offered: string | null
    year_level: number | null
    created_at: Date
    updated_at: Date
    faculty_id: string | null
    _count: UnitCountAggregateOutputType | null
    _avg: UnitAvgAggregateOutputType | null
    _sum: UnitSumAggregateOutputType | null
    _min: UnitMinAggregateOutputType | null
    _max: UnitMaxAggregateOutputType | null
  }

  type GetUnitGroupByPayload<T extends UnitGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UnitGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UnitGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UnitGroupByOutputType[P]>
            : GetScalarType<T[P], UnitGroupByOutputType[P]>
        }
      >
    >


  export type UnitSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    unit_id?: boolean
    unit_code?: boolean
    unit_name?: boolean
    unit_description?: boolean
    semester_offered?: boolean
    year_level?: boolean
    created_at?: boolean
    updated_at?: boolean
    faculty_id?: boolean
    faculty?: boolean | Unit$facultyArgs<ExtArgs>
    communities?: boolean | Unit$communitiesArgs<ExtArgs>
    user_enrollments?: boolean | Unit$user_enrollmentsArgs<ExtArgs>
    _count?: boolean | UnitCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["unit"]>

  export type UnitSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    unit_id?: boolean
    unit_code?: boolean
    unit_name?: boolean
    unit_description?: boolean
    semester_offered?: boolean
    year_level?: boolean
    created_at?: boolean
    updated_at?: boolean
    faculty_id?: boolean
    faculty?: boolean | Unit$facultyArgs<ExtArgs>
  }, ExtArgs["result"]["unit"]>

  export type UnitSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    unit_id?: boolean
    unit_code?: boolean
    unit_name?: boolean
    unit_description?: boolean
    semester_offered?: boolean
    year_level?: boolean
    created_at?: boolean
    updated_at?: boolean
    faculty_id?: boolean
    faculty?: boolean | Unit$facultyArgs<ExtArgs>
  }, ExtArgs["result"]["unit"]>

  export type UnitSelectScalar = {
    unit_id?: boolean
    unit_code?: boolean
    unit_name?: boolean
    unit_description?: boolean
    semester_offered?: boolean
    year_level?: boolean
    created_at?: boolean
    updated_at?: boolean
    faculty_id?: boolean
  }

  export type UnitOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"unit_id" | "unit_code" | "unit_name" | "unit_description" | "semester_offered" | "year_level" | "created_at" | "updated_at" | "faculty_id", ExtArgs["result"]["unit"]>
  export type UnitInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    faculty?: boolean | Unit$facultyArgs<ExtArgs>
    communities?: boolean | Unit$communitiesArgs<ExtArgs>
    user_enrollments?: boolean | Unit$user_enrollmentsArgs<ExtArgs>
    _count?: boolean | UnitCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UnitIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    faculty?: boolean | Unit$facultyArgs<ExtArgs>
  }
  export type UnitIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    faculty?: boolean | Unit$facultyArgs<ExtArgs>
  }

  export type $UnitPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Unit"
    objects: {
      faculty: Prisma.$FacultyPayload<ExtArgs> | null
      communities: Prisma.$CommunityPayload<ExtArgs>[]
      user_enrollments: Prisma.$UserUnitEnrollmentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      unit_id: string
      unit_code: string
      unit_name: string
      unit_description: string | null
      semester_offered: string | null
      year_level: number | null
      created_at: Date
      updated_at: Date
      faculty_id: string | null
    }, ExtArgs["result"]["unit"]>
    composites: {}
  }

  type UnitGetPayload<S extends boolean | null | undefined | UnitDefaultArgs> = $Result.GetResult<Prisma.$UnitPayload, S>

  type UnitCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UnitFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UnitCountAggregateInputType | true
    }

  export interface UnitDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Unit'], meta: { name: 'Unit' } }
    /**
     * Find zero or one Unit that matches the filter.
     * @param {UnitFindUniqueArgs} args - Arguments to find a Unit
     * @example
     * // Get one Unit
     * const unit = await prisma.unit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UnitFindUniqueArgs>(args: SelectSubset<T, UnitFindUniqueArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Unit that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UnitFindUniqueOrThrowArgs} args - Arguments to find a Unit
     * @example
     * // Get one Unit
     * const unit = await prisma.unit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UnitFindUniqueOrThrowArgs>(args: SelectSubset<T, UnitFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Unit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitFindFirstArgs} args - Arguments to find a Unit
     * @example
     * // Get one Unit
     * const unit = await prisma.unit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UnitFindFirstArgs>(args?: SelectSubset<T, UnitFindFirstArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Unit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitFindFirstOrThrowArgs} args - Arguments to find a Unit
     * @example
     * // Get one Unit
     * const unit = await prisma.unit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UnitFindFirstOrThrowArgs>(args?: SelectSubset<T, UnitFindFirstOrThrowArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Units that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Units
     * const units = await prisma.unit.findMany()
     * 
     * // Get first 10 Units
     * const units = await prisma.unit.findMany({ take: 10 })
     * 
     * // Only select the `unit_id`
     * const unitWithUnit_idOnly = await prisma.unit.findMany({ select: { unit_id: true } })
     * 
     */
    findMany<T extends UnitFindManyArgs>(args?: SelectSubset<T, UnitFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Unit.
     * @param {UnitCreateArgs} args - Arguments to create a Unit.
     * @example
     * // Create one Unit
     * const Unit = await prisma.unit.create({
     *   data: {
     *     // ... data to create a Unit
     *   }
     * })
     * 
     */
    create<T extends UnitCreateArgs>(args: SelectSubset<T, UnitCreateArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Units.
     * @param {UnitCreateManyArgs} args - Arguments to create many Units.
     * @example
     * // Create many Units
     * const unit = await prisma.unit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UnitCreateManyArgs>(args?: SelectSubset<T, UnitCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Units and returns the data saved in the database.
     * @param {UnitCreateManyAndReturnArgs} args - Arguments to create many Units.
     * @example
     * // Create many Units
     * const unit = await prisma.unit.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Units and only return the `unit_id`
     * const unitWithUnit_idOnly = await prisma.unit.createManyAndReturn({
     *   select: { unit_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UnitCreateManyAndReturnArgs>(args?: SelectSubset<T, UnitCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Unit.
     * @param {UnitDeleteArgs} args - Arguments to delete one Unit.
     * @example
     * // Delete one Unit
     * const Unit = await prisma.unit.delete({
     *   where: {
     *     // ... filter to delete one Unit
     *   }
     * })
     * 
     */
    delete<T extends UnitDeleteArgs>(args: SelectSubset<T, UnitDeleteArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Unit.
     * @param {UnitUpdateArgs} args - Arguments to update one Unit.
     * @example
     * // Update one Unit
     * const unit = await prisma.unit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UnitUpdateArgs>(args: SelectSubset<T, UnitUpdateArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Units.
     * @param {UnitDeleteManyArgs} args - Arguments to filter Units to delete.
     * @example
     * // Delete a few Units
     * const { count } = await prisma.unit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UnitDeleteManyArgs>(args?: SelectSubset<T, UnitDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Units
     * const unit = await prisma.unit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UnitUpdateManyArgs>(args: SelectSubset<T, UnitUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Units and returns the data updated in the database.
     * @param {UnitUpdateManyAndReturnArgs} args - Arguments to update many Units.
     * @example
     * // Update many Units
     * const unit = await prisma.unit.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Units and only return the `unit_id`
     * const unitWithUnit_idOnly = await prisma.unit.updateManyAndReturn({
     *   select: { unit_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UnitUpdateManyAndReturnArgs>(args: SelectSubset<T, UnitUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Unit.
     * @param {UnitUpsertArgs} args - Arguments to update or create a Unit.
     * @example
     * // Update or create a Unit
     * const unit = await prisma.unit.upsert({
     *   create: {
     *     // ... data to create a Unit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Unit we want to update
     *   }
     * })
     */
    upsert<T extends UnitUpsertArgs>(args: SelectSubset<T, UnitUpsertArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitCountArgs} args - Arguments to filter Units to count.
     * @example
     * // Count the number of Units
     * const count = await prisma.unit.count({
     *   where: {
     *     // ... the filter for the Units we want to count
     *   }
     * })
    **/
    count<T extends UnitCountArgs>(
      args?: Subset<T, UnitCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UnitCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Unit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UnitAggregateArgs>(args: Subset<T, UnitAggregateArgs>): Prisma.PrismaPromise<GetUnitAggregateType<T>>

    /**
     * Group by Unit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UnitGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UnitGroupByArgs['orderBy'] }
        : { orderBy?: UnitGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UnitGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUnitGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Unit model
   */
  readonly fields: UnitFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Unit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UnitClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    faculty<T extends Unit$facultyArgs<ExtArgs> = {}>(args?: Subset<T, Unit$facultyArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    communities<T extends Unit$communitiesArgs<ExtArgs> = {}>(args?: Subset<T, Unit$communitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_enrollments<T extends Unit$user_enrollmentsArgs<ExtArgs> = {}>(args?: Subset<T, Unit$user_enrollmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Unit model
   */
  interface UnitFieldRefs {
    readonly unit_id: FieldRef<"Unit", 'String'>
    readonly unit_code: FieldRef<"Unit", 'String'>
    readonly unit_name: FieldRef<"Unit", 'String'>
    readonly unit_description: FieldRef<"Unit", 'String'>
    readonly semester_offered: FieldRef<"Unit", 'String'>
    readonly year_level: FieldRef<"Unit", 'Int'>
    readonly created_at: FieldRef<"Unit", 'DateTime'>
    readonly updated_at: FieldRef<"Unit", 'DateTime'>
    readonly faculty_id: FieldRef<"Unit", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Unit findUnique
   */
  export type UnitFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Unit to fetch.
     */
    where: UnitWhereUniqueInput
  }

  /**
   * Unit findUniqueOrThrow
   */
  export type UnitFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Unit to fetch.
     */
    where: UnitWhereUniqueInput
  }

  /**
   * Unit findFirst
   */
  export type UnitFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Unit to fetch.
     */
    where?: UnitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Units.
     */
    cursor?: UnitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Units.
     */
    distinct?: UnitScalarFieldEnum | UnitScalarFieldEnum[]
  }

  /**
   * Unit findFirstOrThrow
   */
  export type UnitFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Unit to fetch.
     */
    where?: UnitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Units.
     */
    cursor?: UnitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Units.
     */
    distinct?: UnitScalarFieldEnum | UnitScalarFieldEnum[]
  }

  /**
   * Unit findMany
   */
  export type UnitFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter, which Units to fetch.
     */
    where?: UnitWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     */
    orderBy?: UnitOrderByWithRelationInput | UnitOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Units.
     */
    cursor?: UnitWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     */
    skip?: number
    distinct?: UnitScalarFieldEnum | UnitScalarFieldEnum[]
  }

  /**
   * Unit create
   */
  export type UnitCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * The data needed to create a Unit.
     */
    data: XOR<UnitCreateInput, UnitUncheckedCreateInput>
  }

  /**
   * Unit createMany
   */
  export type UnitCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Units.
     */
    data: UnitCreateManyInput | UnitCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Unit createManyAndReturn
   */
  export type UnitCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * The data used to create many Units.
     */
    data: UnitCreateManyInput | UnitCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Unit update
   */
  export type UnitUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * The data needed to update a Unit.
     */
    data: XOR<UnitUpdateInput, UnitUncheckedUpdateInput>
    /**
     * Choose, which Unit to update.
     */
    where: UnitWhereUniqueInput
  }

  /**
   * Unit updateMany
   */
  export type UnitUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Units.
     */
    data: XOR<UnitUpdateManyMutationInput, UnitUncheckedUpdateManyInput>
    /**
     * Filter which Units to update
     */
    where?: UnitWhereInput
    /**
     * Limit how many Units to update.
     */
    limit?: number
  }

  /**
   * Unit updateManyAndReturn
   */
  export type UnitUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * The data used to update Units.
     */
    data: XOR<UnitUpdateManyMutationInput, UnitUncheckedUpdateManyInput>
    /**
     * Filter which Units to update
     */
    where?: UnitWhereInput
    /**
     * Limit how many Units to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Unit upsert
   */
  export type UnitUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * The filter to search for the Unit to update in case it exists.
     */
    where: UnitWhereUniqueInput
    /**
     * In case the Unit found by the `where` argument doesn't exist, create a new Unit with this data.
     */
    create: XOR<UnitCreateInput, UnitUncheckedCreateInput>
    /**
     * In case the Unit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UnitUpdateInput, UnitUncheckedUpdateInput>
  }

  /**
   * Unit delete
   */
  export type UnitDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    /**
     * Filter which Unit to delete.
     */
    where: UnitWhereUniqueInput
  }

  /**
   * Unit deleteMany
   */
  export type UnitDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Units to delete
     */
    where?: UnitWhereInput
    /**
     * Limit how many Units to delete.
     */
    limit?: number
  }

  /**
   * Unit.faculty
   */
  export type Unit$facultyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    where?: FacultyWhereInput
  }

  /**
   * Unit.communities
   */
  export type Unit$communitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    where?: CommunityWhereInput
    orderBy?: CommunityOrderByWithRelationInput | CommunityOrderByWithRelationInput[]
    cursor?: CommunityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * Unit.user_enrollments
   */
  export type Unit$user_enrollmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    where?: UserUnitEnrollmentWhereInput
    orderBy?: UserUnitEnrollmentOrderByWithRelationInput | UserUnitEnrollmentOrderByWithRelationInput[]
    cursor?: UserUnitEnrollmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserUnitEnrollmentScalarFieldEnum | UserUnitEnrollmentScalarFieldEnum[]
  }

  /**
   * Unit without action
   */
  export type UnitDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
  }


  /**
   * Model Community
   */

  export type AggregateCommunity = {
    _count: CommunityCountAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  export type CommunityMinAggregateOutputType = {
    community_id: string | null
    name: string | null
    display_name: string | null
    description: string | null
    community_type: $Enums.CommunityType | null
    profile_image_url: string | null
    banner_image_url: string | null
    is_private: boolean | null
    rules: string | null
    created_at: Date | null
    updated_at: Date | null
    creator_id: string | null
    related_campus_id: string | null
    related_faculty_id: string | null
    related_course_id: string | null
    related_unit_id: string | null
  }

  export type CommunityMaxAggregateOutputType = {
    community_id: string | null
    name: string | null
    display_name: string | null
    description: string | null
    community_type: $Enums.CommunityType | null
    profile_image_url: string | null
    banner_image_url: string | null
    is_private: boolean | null
    rules: string | null
    created_at: Date | null
    updated_at: Date | null
    creator_id: string | null
    related_campus_id: string | null
    related_faculty_id: string | null
    related_course_id: string | null
    related_unit_id: string | null
  }

  export type CommunityCountAggregateOutputType = {
    community_id: number
    name: number
    display_name: number
    description: number
    community_type: number
    profile_image_url: number
    banner_image_url: number
    is_private: number
    rules: number
    created_at: number
    updated_at: number
    creator_id: number
    related_campus_id: number
    related_faculty_id: number
    related_course_id: number
    related_unit_id: number
    _all: number
  }


  export type CommunityMinAggregateInputType = {
    community_id?: true
    name?: true
    display_name?: true
    description?: true
    community_type?: true
    profile_image_url?: true
    banner_image_url?: true
    is_private?: true
    rules?: true
    created_at?: true
    updated_at?: true
    creator_id?: true
    related_campus_id?: true
    related_faculty_id?: true
    related_course_id?: true
    related_unit_id?: true
  }

  export type CommunityMaxAggregateInputType = {
    community_id?: true
    name?: true
    display_name?: true
    description?: true
    community_type?: true
    profile_image_url?: true
    banner_image_url?: true
    is_private?: true
    rules?: true
    created_at?: true
    updated_at?: true
    creator_id?: true
    related_campus_id?: true
    related_faculty_id?: true
    related_course_id?: true
    related_unit_id?: true
  }

  export type CommunityCountAggregateInputType = {
    community_id?: true
    name?: true
    display_name?: true
    description?: true
    community_type?: true
    profile_image_url?: true
    banner_image_url?: true
    is_private?: true
    rules?: true
    created_at?: true
    updated_at?: true
    creator_id?: true
    related_campus_id?: true
    related_faculty_id?: true
    related_course_id?: true
    related_unit_id?: true
    _all?: true
  }

  export type CommunityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Community to aggregate.
     */
    where?: CommunityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Communities to fetch.
     */
    orderBy?: CommunityOrderByWithRelationInput | CommunityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommunityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Communities
    **/
    _count?: true | CommunityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunityMaxAggregateInputType
  }

  export type GetCommunityAggregateType<T extends CommunityAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunity[P]>
      : GetScalarType<T[P], AggregateCommunity[P]>
  }




  export type CommunityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunityWhereInput
    orderBy?: CommunityOrderByWithAggregationInput | CommunityOrderByWithAggregationInput[]
    by: CommunityScalarFieldEnum[] | CommunityScalarFieldEnum
    having?: CommunityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunityCountAggregateInputType | true
    _min?: CommunityMinAggregateInputType
    _max?: CommunityMaxAggregateInputType
  }

  export type CommunityGroupByOutputType = {
    community_id: string
    name: string
    display_name: string
    description: string | null
    community_type: $Enums.CommunityType
    profile_image_url: string | null
    banner_image_url: string | null
    is_private: boolean
    rules: string | null
    created_at: Date
    updated_at: Date
    creator_id: string
    related_campus_id: string | null
    related_faculty_id: string | null
    related_course_id: string | null
    related_unit_id: string | null
    _count: CommunityCountAggregateOutputType | null
    _min: CommunityMinAggregateOutputType | null
    _max: CommunityMaxAggregateOutputType | null
  }

  type GetCommunityGroupByPayload<T extends CommunityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunityGroupByOutputType[P]>
            : GetScalarType<T[P], CommunityGroupByOutputType[P]>
        }
      >
    >


  export type CommunitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    community_id?: boolean
    name?: boolean
    display_name?: boolean
    description?: boolean
    community_type?: boolean
    profile_image_url?: boolean
    banner_image_url?: boolean
    is_private?: boolean
    rules?: boolean
    created_at?: boolean
    updated_at?: boolean
    creator_id?: boolean
    related_campus_id?: boolean
    related_faculty_id?: boolean
    related_course_id?: boolean
    related_unit_id?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
    related_campus?: boolean | Community$related_campusArgs<ExtArgs>
    related_faculty?: boolean | Community$related_facultyArgs<ExtArgs>
    related_course?: boolean | Community$related_courseArgs<ExtArgs>
    related_unit?: boolean | Community$related_unitArgs<ExtArgs>
    posts?: boolean | Community$postsArgs<ExtArgs>
    members?: boolean | Community$membersArgs<ExtArgs>
    moderators?: boolean | Community$moderatorsArgs<ExtArgs>
    notifications?: boolean | Community$notificationsArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["community"]>

  export type CommunitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    community_id?: boolean
    name?: boolean
    display_name?: boolean
    description?: boolean
    community_type?: boolean
    profile_image_url?: boolean
    banner_image_url?: boolean
    is_private?: boolean
    rules?: boolean
    created_at?: boolean
    updated_at?: boolean
    creator_id?: boolean
    related_campus_id?: boolean
    related_faculty_id?: boolean
    related_course_id?: boolean
    related_unit_id?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
    related_campus?: boolean | Community$related_campusArgs<ExtArgs>
    related_faculty?: boolean | Community$related_facultyArgs<ExtArgs>
    related_course?: boolean | Community$related_courseArgs<ExtArgs>
    related_unit?: boolean | Community$related_unitArgs<ExtArgs>
  }, ExtArgs["result"]["community"]>

  export type CommunitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    community_id?: boolean
    name?: boolean
    display_name?: boolean
    description?: boolean
    community_type?: boolean
    profile_image_url?: boolean
    banner_image_url?: boolean
    is_private?: boolean
    rules?: boolean
    created_at?: boolean
    updated_at?: boolean
    creator_id?: boolean
    related_campus_id?: boolean
    related_faculty_id?: boolean
    related_course_id?: boolean
    related_unit_id?: boolean
    creator?: boolean | UserDefaultArgs<ExtArgs>
    related_campus?: boolean | Community$related_campusArgs<ExtArgs>
    related_faculty?: boolean | Community$related_facultyArgs<ExtArgs>
    related_course?: boolean | Community$related_courseArgs<ExtArgs>
    related_unit?: boolean | Community$related_unitArgs<ExtArgs>
  }, ExtArgs["result"]["community"]>

  export type CommunitySelectScalar = {
    community_id?: boolean
    name?: boolean
    display_name?: boolean
    description?: boolean
    community_type?: boolean
    profile_image_url?: boolean
    banner_image_url?: boolean
    is_private?: boolean
    rules?: boolean
    created_at?: boolean
    updated_at?: boolean
    creator_id?: boolean
    related_campus_id?: boolean
    related_faculty_id?: boolean
    related_course_id?: boolean
    related_unit_id?: boolean
  }

  export type CommunityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"community_id" | "name" | "display_name" | "description" | "community_type" | "profile_image_url" | "banner_image_url" | "is_private" | "rules" | "created_at" | "updated_at" | "creator_id" | "related_campus_id" | "related_faculty_id" | "related_course_id" | "related_unit_id", ExtArgs["result"]["community"]>
  export type CommunityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
    related_campus?: boolean | Community$related_campusArgs<ExtArgs>
    related_faculty?: boolean | Community$related_facultyArgs<ExtArgs>
    related_course?: boolean | Community$related_courseArgs<ExtArgs>
    related_unit?: boolean | Community$related_unitArgs<ExtArgs>
    posts?: boolean | Community$postsArgs<ExtArgs>
    members?: boolean | Community$membersArgs<ExtArgs>
    moderators?: boolean | Community$moderatorsArgs<ExtArgs>
    notifications?: boolean | Community$notificationsArgs<ExtArgs>
    _count?: boolean | CommunityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CommunityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
    related_campus?: boolean | Community$related_campusArgs<ExtArgs>
    related_faculty?: boolean | Community$related_facultyArgs<ExtArgs>
    related_course?: boolean | Community$related_courseArgs<ExtArgs>
    related_unit?: boolean | Community$related_unitArgs<ExtArgs>
  }
  export type CommunityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | UserDefaultArgs<ExtArgs>
    related_campus?: boolean | Community$related_campusArgs<ExtArgs>
    related_faculty?: boolean | Community$related_facultyArgs<ExtArgs>
    related_course?: boolean | Community$related_courseArgs<ExtArgs>
    related_unit?: boolean | Community$related_unitArgs<ExtArgs>
  }

  export type $CommunityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Community"
    objects: {
      creator: Prisma.$UserPayload<ExtArgs>
      related_campus: Prisma.$CampusPayload<ExtArgs> | null
      related_faculty: Prisma.$FacultyPayload<ExtArgs> | null
      related_course: Prisma.$CoursePayload<ExtArgs> | null
      related_unit: Prisma.$UnitPayload<ExtArgs> | null
      posts: Prisma.$PostPayload<ExtArgs>[]
      members: Prisma.$CommunityMembershipPayload<ExtArgs>[]
      moderators: Prisma.$ModeratorPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      community_id: string
      name: string
      display_name: string
      description: string | null
      community_type: $Enums.CommunityType
      profile_image_url: string | null
      banner_image_url: string | null
      is_private: boolean
      rules: string | null
      created_at: Date
      updated_at: Date
      creator_id: string
      related_campus_id: string | null
      related_faculty_id: string | null
      related_course_id: string | null
      related_unit_id: string | null
    }, ExtArgs["result"]["community"]>
    composites: {}
  }

  type CommunityGetPayload<S extends boolean | null | undefined | CommunityDefaultArgs> = $Result.GetResult<Prisma.$CommunityPayload, S>

  type CommunityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommunityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommunityCountAggregateInputType | true
    }

  export interface CommunityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Community'], meta: { name: 'Community' } }
    /**
     * Find zero or one Community that matches the filter.
     * @param {CommunityFindUniqueArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommunityFindUniqueArgs>(args: SelectSubset<T, CommunityFindUniqueArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Community that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommunityFindUniqueOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommunityFindUniqueOrThrowArgs>(args: SelectSubset<T, CommunityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Community that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityFindFirstArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommunityFindFirstArgs>(args?: SelectSubset<T, CommunityFindFirstArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Community that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityFindFirstOrThrowArgs} args - Arguments to find a Community
     * @example
     * // Get one Community
     * const community = await prisma.community.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommunityFindFirstOrThrowArgs>(args?: SelectSubset<T, CommunityFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Communities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Communities
     * const communities = await prisma.community.findMany()
     * 
     * // Get first 10 Communities
     * const communities = await prisma.community.findMany({ take: 10 })
     * 
     * // Only select the `community_id`
     * const communityWithCommunity_idOnly = await prisma.community.findMany({ select: { community_id: true } })
     * 
     */
    findMany<T extends CommunityFindManyArgs>(args?: SelectSubset<T, CommunityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Community.
     * @param {CommunityCreateArgs} args - Arguments to create a Community.
     * @example
     * // Create one Community
     * const Community = await prisma.community.create({
     *   data: {
     *     // ... data to create a Community
     *   }
     * })
     * 
     */
    create<T extends CommunityCreateArgs>(args: SelectSubset<T, CommunityCreateArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Communities.
     * @param {CommunityCreateManyArgs} args - Arguments to create many Communities.
     * @example
     * // Create many Communities
     * const community = await prisma.community.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommunityCreateManyArgs>(args?: SelectSubset<T, CommunityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Communities and returns the data saved in the database.
     * @param {CommunityCreateManyAndReturnArgs} args - Arguments to create many Communities.
     * @example
     * // Create many Communities
     * const community = await prisma.community.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Communities and only return the `community_id`
     * const communityWithCommunity_idOnly = await prisma.community.createManyAndReturn({
     *   select: { community_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommunityCreateManyAndReturnArgs>(args?: SelectSubset<T, CommunityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Community.
     * @param {CommunityDeleteArgs} args - Arguments to delete one Community.
     * @example
     * // Delete one Community
     * const Community = await prisma.community.delete({
     *   where: {
     *     // ... filter to delete one Community
     *   }
     * })
     * 
     */
    delete<T extends CommunityDeleteArgs>(args: SelectSubset<T, CommunityDeleteArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Community.
     * @param {CommunityUpdateArgs} args - Arguments to update one Community.
     * @example
     * // Update one Community
     * const community = await prisma.community.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommunityUpdateArgs>(args: SelectSubset<T, CommunityUpdateArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Communities.
     * @param {CommunityDeleteManyArgs} args - Arguments to filter Communities to delete.
     * @example
     * // Delete a few Communities
     * const { count } = await prisma.community.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommunityDeleteManyArgs>(args?: SelectSubset<T, CommunityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Communities
     * const community = await prisma.community.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommunityUpdateManyArgs>(args: SelectSubset<T, CommunityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Communities and returns the data updated in the database.
     * @param {CommunityUpdateManyAndReturnArgs} args - Arguments to update many Communities.
     * @example
     * // Update many Communities
     * const community = await prisma.community.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Communities and only return the `community_id`
     * const communityWithCommunity_idOnly = await prisma.community.updateManyAndReturn({
     *   select: { community_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CommunityUpdateManyAndReturnArgs>(args: SelectSubset<T, CommunityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Community.
     * @param {CommunityUpsertArgs} args - Arguments to update or create a Community.
     * @example
     * // Update or create a Community
     * const community = await prisma.community.upsert({
     *   create: {
     *     // ... data to create a Community
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Community we want to update
     *   }
     * })
     */
    upsert<T extends CommunityUpsertArgs>(args: SelectSubset<T, CommunityUpsertArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Communities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityCountArgs} args - Arguments to filter Communities to count.
     * @example
     * // Count the number of Communities
     * const count = await prisma.community.count({
     *   where: {
     *     // ... the filter for the Communities we want to count
     *   }
     * })
    **/
    count<T extends CommunityCountArgs>(
      args?: Subset<T, CommunityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunityAggregateArgs>(args: Subset<T, CommunityAggregateArgs>): Prisma.PrismaPromise<GetCommunityAggregateType<T>>

    /**
     * Group by Community.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommunityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommunityGroupByArgs['orderBy'] }
        : { orderBy?: CommunityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommunityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Community model
   */
  readonly fields: CommunityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Community.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommunityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creator<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    related_campus<T extends Community$related_campusArgs<ExtArgs> = {}>(args?: Subset<T, Community$related_campusArgs<ExtArgs>>): Prisma__CampusClient<$Result.GetResult<Prisma.$CampusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    related_faculty<T extends Community$related_facultyArgs<ExtArgs> = {}>(args?: Subset<T, Community$related_facultyArgs<ExtArgs>>): Prisma__FacultyClient<$Result.GetResult<Prisma.$FacultyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    related_course<T extends Community$related_courseArgs<ExtArgs> = {}>(args?: Subset<T, Community$related_courseArgs<ExtArgs>>): Prisma__CourseClient<$Result.GetResult<Prisma.$CoursePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    related_unit<T extends Community$related_unitArgs<ExtArgs> = {}>(args?: Subset<T, Community$related_unitArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    posts<T extends Community$postsArgs<ExtArgs> = {}>(args?: Subset<T, Community$postsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    members<T extends Community$membersArgs<ExtArgs> = {}>(args?: Subset<T, Community$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    moderators<T extends Community$moderatorsArgs<ExtArgs> = {}>(args?: Subset<T, Community$moderatorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends Community$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, Community$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Community model
   */
  interface CommunityFieldRefs {
    readonly community_id: FieldRef<"Community", 'String'>
    readonly name: FieldRef<"Community", 'String'>
    readonly display_name: FieldRef<"Community", 'String'>
    readonly description: FieldRef<"Community", 'String'>
    readonly community_type: FieldRef<"Community", 'CommunityType'>
    readonly profile_image_url: FieldRef<"Community", 'String'>
    readonly banner_image_url: FieldRef<"Community", 'String'>
    readonly is_private: FieldRef<"Community", 'Boolean'>
    readonly rules: FieldRef<"Community", 'String'>
    readonly created_at: FieldRef<"Community", 'DateTime'>
    readonly updated_at: FieldRef<"Community", 'DateTime'>
    readonly creator_id: FieldRef<"Community", 'String'>
    readonly related_campus_id: FieldRef<"Community", 'String'>
    readonly related_faculty_id: FieldRef<"Community", 'String'>
    readonly related_course_id: FieldRef<"Community", 'String'>
    readonly related_unit_id: FieldRef<"Community", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Community findUnique
   */
  export type CommunityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    /**
     * Filter, which Community to fetch.
     */
    where: CommunityWhereUniqueInput
  }

  /**
   * Community findUniqueOrThrow
   */
  export type CommunityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    /**
     * Filter, which Community to fetch.
     */
    where: CommunityWhereUniqueInput
  }

  /**
   * Community findFirst
   */
  export type CommunityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    /**
     * Filter, which Community to fetch.
     */
    where?: CommunityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Communities to fetch.
     */
    orderBy?: CommunityOrderByWithRelationInput | CommunityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Communities.
     */
    cursor?: CommunityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * Community findFirstOrThrow
   */
  export type CommunityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    /**
     * Filter, which Community to fetch.
     */
    where?: CommunityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Communities to fetch.
     */
    orderBy?: CommunityOrderByWithRelationInput | CommunityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Communities.
     */
    cursor?: CommunityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Communities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Communities.
     */
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * Community findMany
   */
  export type CommunityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    /**
     * Filter, which Communities to fetch.
     */
    where?: CommunityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Communities to fetch.
     */
    orderBy?: CommunityOrderByWithRelationInput | CommunityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Communities.
     */
    cursor?: CommunityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Communities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Communities.
     */
    skip?: number
    distinct?: CommunityScalarFieldEnum | CommunityScalarFieldEnum[]
  }

  /**
   * Community create
   */
  export type CommunityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    /**
     * The data needed to create a Community.
     */
    data: XOR<CommunityCreateInput, CommunityUncheckedCreateInput>
  }

  /**
   * Community createMany
   */
  export type CommunityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Communities.
     */
    data: CommunityCreateManyInput | CommunityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Community createManyAndReturn
   */
  export type CommunityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * The data used to create many Communities.
     */
    data: CommunityCreateManyInput | CommunityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Community update
   */
  export type CommunityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    /**
     * The data needed to update a Community.
     */
    data: XOR<CommunityUpdateInput, CommunityUncheckedUpdateInput>
    /**
     * Choose, which Community to update.
     */
    where: CommunityWhereUniqueInput
  }

  /**
   * Community updateMany
   */
  export type CommunityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Communities.
     */
    data: XOR<CommunityUpdateManyMutationInput, CommunityUncheckedUpdateManyInput>
    /**
     * Filter which Communities to update
     */
    where?: CommunityWhereInput
    /**
     * Limit how many Communities to update.
     */
    limit?: number
  }

  /**
   * Community updateManyAndReturn
   */
  export type CommunityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * The data used to update Communities.
     */
    data: XOR<CommunityUpdateManyMutationInput, CommunityUncheckedUpdateManyInput>
    /**
     * Filter which Communities to update
     */
    where?: CommunityWhereInput
    /**
     * Limit how many Communities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Community upsert
   */
  export type CommunityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    /**
     * The filter to search for the Community to update in case it exists.
     */
    where: CommunityWhereUniqueInput
    /**
     * In case the Community found by the `where` argument doesn't exist, create a new Community with this data.
     */
    create: XOR<CommunityCreateInput, CommunityUncheckedCreateInput>
    /**
     * In case the Community was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommunityUpdateInput, CommunityUncheckedUpdateInput>
  }

  /**
   * Community delete
   */
  export type CommunityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    /**
     * Filter which Community to delete.
     */
    where: CommunityWhereUniqueInput
  }

  /**
   * Community deleteMany
   */
  export type CommunityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Communities to delete
     */
    where?: CommunityWhereInput
    /**
     * Limit how many Communities to delete.
     */
    limit?: number
  }

  /**
   * Community.related_campus
   */
  export type Community$related_campusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campus
     */
    select?: CampusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campus
     */
    omit?: CampusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampusInclude<ExtArgs> | null
    where?: CampusWhereInput
  }

  /**
   * Community.related_faculty
   */
  export type Community$related_facultyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faculty
     */
    select?: FacultySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Faculty
     */
    omit?: FacultyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FacultyInclude<ExtArgs> | null
    where?: FacultyWhereInput
  }

  /**
   * Community.related_course
   */
  export type Community$related_courseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Course
     */
    select?: CourseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Course
     */
    omit?: CourseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CourseInclude<ExtArgs> | null
    where?: CourseWhereInput
  }

  /**
   * Community.related_unit
   */
  export type Community$related_unitArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Unit
     */
    select?: UnitSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Unit
     */
    omit?: UnitOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UnitInclude<ExtArgs> | null
    where?: UnitWhereInput
  }

  /**
   * Community.posts
   */
  export type Community$postsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    cursor?: PostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Community.members
   */
  export type Community$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    where?: CommunityMembershipWhereInput
    orderBy?: CommunityMembershipOrderByWithRelationInput | CommunityMembershipOrderByWithRelationInput[]
    cursor?: CommunityMembershipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommunityMembershipScalarFieldEnum | CommunityMembershipScalarFieldEnum[]
  }

  /**
   * Community.moderators
   */
  export type Community$moderatorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    where?: ModeratorWhereInput
    orderBy?: ModeratorOrderByWithRelationInput | ModeratorOrderByWithRelationInput[]
    cursor?: ModeratorWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModeratorScalarFieldEnum | ModeratorScalarFieldEnum[]
  }

  /**
   * Community.notifications
   */
  export type Community$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Community without action
   */
  export type CommunityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
  }


  /**
   * Model Post
   */

  export type AggregatePost = {
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  export type PostAvgAggregateOutputType = {
    upvotes: number | null
    downvotes: number | null
    score: number | null
  }

  export type PostSumAggregateOutputType = {
    upvotes: number | null
    downvotes: number | null
    score: number | null
  }

  export type PostMinAggregateOutputType = {
    post_id: string | null
    title: string | null
    content_type: $Enums.PostContentType | null
    text_content: string | null
    media_url: string | null
    upvotes: number | null
    downvotes: number | null
    score: number | null
    flair_text: string | null
    is_stickied: boolean | null
    is_locked: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    user_id: string | null
    community_id: string | null
  }

  export type PostMaxAggregateOutputType = {
    post_id: string | null
    title: string | null
    content_type: $Enums.PostContentType | null
    text_content: string | null
    media_url: string | null
    upvotes: number | null
    downvotes: number | null
    score: number | null
    flair_text: string | null
    is_stickied: boolean | null
    is_locked: boolean | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    user_id: string | null
    community_id: string | null
  }

  export type PostCountAggregateOutputType = {
    post_id: number
    title: number
    content_type: number
    text_content: number
    media_url: number
    upvotes: number
    downvotes: number
    score: number
    flair_text: number
    is_stickied: number
    is_locked: number
    is_deleted: number
    created_at: number
    updated_at: number
    user_id: number
    community_id: number
    _all: number
  }


  export type PostAvgAggregateInputType = {
    upvotes?: true
    downvotes?: true
    score?: true
  }

  export type PostSumAggregateInputType = {
    upvotes?: true
    downvotes?: true
    score?: true
  }

  export type PostMinAggregateInputType = {
    post_id?: true
    title?: true
    content_type?: true
    text_content?: true
    media_url?: true
    upvotes?: true
    downvotes?: true
    score?: true
    flair_text?: true
    is_stickied?: true
    is_locked?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    user_id?: true
    community_id?: true
  }

  export type PostMaxAggregateInputType = {
    post_id?: true
    title?: true
    content_type?: true
    text_content?: true
    media_url?: true
    upvotes?: true
    downvotes?: true
    score?: true
    flair_text?: true
    is_stickied?: true
    is_locked?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    user_id?: true
    community_id?: true
  }

  export type PostCountAggregateInputType = {
    post_id?: true
    title?: true
    content_type?: true
    text_content?: true
    media_url?: true
    upvotes?: true
    downvotes?: true
    score?: true
    flair_text?: true
    is_stickied?: true
    is_locked?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    user_id?: true
    community_id?: true
    _all?: true
  }

  export type PostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Post to aggregate.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Posts
    **/
    _count?: true | PostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostMaxAggregateInputType
  }

  export type GetPostAggregateType<T extends PostAggregateArgs> = {
        [P in keyof T & keyof AggregatePost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost[P]>
      : GetScalarType<T[P], AggregatePost[P]>
  }




  export type PostGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
    orderBy?: PostOrderByWithAggregationInput | PostOrderByWithAggregationInput[]
    by: PostScalarFieldEnum[] | PostScalarFieldEnum
    having?: PostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostCountAggregateInputType | true
    _avg?: PostAvgAggregateInputType
    _sum?: PostSumAggregateInputType
    _min?: PostMinAggregateInputType
    _max?: PostMaxAggregateInputType
  }

  export type PostGroupByOutputType = {
    post_id: string
    title: string
    content_type: $Enums.PostContentType
    text_content: string | null
    media_url: string | null
    upvotes: number
    downvotes: number
    score: number
    flair_text: string | null
    is_stickied: boolean
    is_locked: boolean
    is_deleted: boolean
    created_at: Date
    updated_at: Date
    user_id: string
    community_id: string
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  type GetPostGroupByPayload<T extends PostGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostGroupByOutputType[P]>
            : GetScalarType<T[P], PostGroupByOutputType[P]>
        }
      >
    >


  export type PostSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    post_id?: boolean
    title?: boolean
    content_type?: boolean
    text_content?: boolean
    media_url?: boolean
    upvotes?: boolean
    downvotes?: boolean
    score?: boolean
    flair_text?: boolean
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_id?: boolean
    community_id?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
    comments?: boolean | Post$commentsArgs<ExtArgs>
    votes?: boolean | Post$votesArgs<ExtArgs>
    saved_by_users?: boolean | Post$saved_by_usersArgs<ExtArgs>
    notifications?: boolean | Post$notificationsArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    post_id?: boolean
    title?: boolean
    content_type?: boolean
    text_content?: boolean
    media_url?: boolean
    upvotes?: boolean
    downvotes?: boolean
    score?: boolean
    flair_text?: boolean
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_id?: boolean
    community_id?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    post_id?: boolean
    title?: boolean
    content_type?: boolean
    text_content?: boolean
    media_url?: boolean
    upvotes?: boolean
    downvotes?: boolean
    score?: boolean
    flair_text?: boolean
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_id?: boolean
    community_id?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>

  export type PostSelectScalar = {
    post_id?: boolean
    title?: boolean
    content_type?: boolean
    text_content?: boolean
    media_url?: boolean
    upvotes?: boolean
    downvotes?: boolean
    score?: boolean
    flair_text?: boolean
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    user_id?: boolean
    community_id?: boolean
  }

  export type PostOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"post_id" | "title" | "content_type" | "text_content" | "media_url" | "upvotes" | "downvotes" | "score" | "flair_text" | "is_stickied" | "is_locked" | "is_deleted" | "created_at" | "updated_at" | "user_id" | "community_id", ExtArgs["result"]["post"]>
  export type PostInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
    comments?: boolean | Post$commentsArgs<ExtArgs>
    votes?: boolean | Post$votesArgs<ExtArgs>
    saved_by_users?: boolean | Post$saved_by_usersArgs<ExtArgs>
    notifications?: boolean | Post$notificationsArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PostIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }
  export type PostIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }

  export type $PostPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Post"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      community: Prisma.$CommunityPayload<ExtArgs>
      comments: Prisma.$CommentPayload<ExtArgs>[]
      votes: Prisma.$VotePayload<ExtArgs>[]
      saved_by_users: Prisma.$SavedContentPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      post_id: string
      title: string
      content_type: $Enums.PostContentType
      text_content: string | null
      media_url: string | null
      upvotes: number
      downvotes: number
      score: number
      flair_text: string | null
      is_stickied: boolean
      is_locked: boolean
      is_deleted: boolean
      created_at: Date
      updated_at: Date
      user_id: string
      community_id: string
    }, ExtArgs["result"]["post"]>
    composites: {}
  }

  type PostGetPayload<S extends boolean | null | undefined | PostDefaultArgs> = $Result.GetResult<Prisma.$PostPayload, S>

  type PostCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PostFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PostCountAggregateInputType | true
    }

  export interface PostDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Post'], meta: { name: 'Post' } }
    /**
     * Find zero or one Post that matches the filter.
     * @param {PostFindUniqueArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PostFindUniqueArgs>(args: SelectSubset<T, PostFindUniqueArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PostFindUniqueOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PostFindUniqueOrThrowArgs>(args: SelectSubset<T, PostFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PostFindFirstArgs>(args?: SelectSubset<T, PostFindFirstArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PostFindFirstOrThrowArgs>(args?: SelectSubset<T, PostFindFirstOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.post.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.post.findMany({ take: 10 })
     * 
     * // Only select the `post_id`
     * const postWithPost_idOnly = await prisma.post.findMany({ select: { post_id: true } })
     * 
     */
    findMany<T extends PostFindManyArgs>(args?: SelectSubset<T, PostFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post.
     * @param {PostCreateArgs} args - Arguments to create a Post.
     * @example
     * // Create one Post
     * const Post = await prisma.post.create({
     *   data: {
     *     // ... data to create a Post
     *   }
     * })
     * 
     */
    create<T extends PostCreateArgs>(args: SelectSubset<T, PostCreateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Posts.
     * @param {PostCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PostCreateManyArgs>(args?: SelectSubset<T, PostCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Posts and returns the data saved in the database.
     * @param {PostCreateManyAndReturnArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Posts and only return the `post_id`
     * const postWithPost_idOnly = await prisma.post.createManyAndReturn({
     *   select: { post_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PostCreateManyAndReturnArgs>(args?: SelectSubset<T, PostCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Post.
     * @param {PostDeleteArgs} args - Arguments to delete one Post.
     * @example
     * // Delete one Post
     * const Post = await prisma.post.delete({
     *   where: {
     *     // ... filter to delete one Post
     *   }
     * })
     * 
     */
    delete<T extends PostDeleteArgs>(args: SelectSubset<T, PostDeleteArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post.
     * @param {PostUpdateArgs} args - Arguments to update one Post.
     * @example
     * // Update one Post
     * const post = await prisma.post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PostUpdateArgs>(args: SelectSubset<T, PostUpdateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Posts.
     * @param {PostDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PostDeleteManyArgs>(args?: SelectSubset<T, PostDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PostUpdateManyArgs>(args: SelectSubset<T, PostUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts and returns the data updated in the database.
     * @param {PostUpdateManyAndReturnArgs} args - Arguments to update many Posts.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Posts and only return the `post_id`
     * const postWithPost_idOnly = await prisma.post.updateManyAndReturn({
     *   select: { post_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PostUpdateManyAndReturnArgs>(args: SelectSubset<T, PostUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Post.
     * @param {PostUpsertArgs} args - Arguments to update or create a Post.
     * @example
     * // Update or create a Post
     * const post = await prisma.post.upsert({
     *   create: {
     *     // ... data to create a Post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post we want to update
     *   }
     * })
     */
    upsert<T extends PostUpsertArgs>(args: SelectSubset<T, PostUpsertArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.post.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends PostCountArgs>(
      args?: Subset<T, PostCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostAggregateArgs>(args: Subset<T, PostAggregateArgs>): Prisma.PrismaPromise<GetPostAggregateType<T>>

    /**
     * Group by Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostGroupByArgs['orderBy'] }
        : { orderBy?: PostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Post model
   */
  readonly fields: PostFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PostClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    community<T extends CommunityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CommunityDefaultArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    comments<T extends Post$commentsArgs<ExtArgs> = {}>(args?: Subset<T, Post$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    votes<T extends Post$votesArgs<ExtArgs> = {}>(args?: Subset<T, Post$votesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    saved_by_users<T extends Post$saved_by_usersArgs<ExtArgs> = {}>(args?: Subset<T, Post$saved_by_usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends Post$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, Post$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Post model
   */
  interface PostFieldRefs {
    readonly post_id: FieldRef<"Post", 'String'>
    readonly title: FieldRef<"Post", 'String'>
    readonly content_type: FieldRef<"Post", 'PostContentType'>
    readonly text_content: FieldRef<"Post", 'String'>
    readonly media_url: FieldRef<"Post", 'String'>
    readonly upvotes: FieldRef<"Post", 'Int'>
    readonly downvotes: FieldRef<"Post", 'Int'>
    readonly score: FieldRef<"Post", 'Int'>
    readonly flair_text: FieldRef<"Post", 'String'>
    readonly is_stickied: FieldRef<"Post", 'Boolean'>
    readonly is_locked: FieldRef<"Post", 'Boolean'>
    readonly is_deleted: FieldRef<"Post", 'Boolean'>
    readonly created_at: FieldRef<"Post", 'DateTime'>
    readonly updated_at: FieldRef<"Post", 'DateTime'>
    readonly user_id: FieldRef<"Post", 'String'>
    readonly community_id: FieldRef<"Post", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Post findUnique
   */
  export type PostFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findUniqueOrThrow
   */
  export type PostFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findFirst
   */
  export type PostFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findFirstOrThrow
   */
  export type PostFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findMany
   */
  export type PostFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Posts to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post create
   */
  export type PostCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to create a Post.
     */
    data: XOR<PostCreateInput, PostUncheckedCreateInput>
  }

  /**
   * Post createMany
   */
  export type PostCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Post createManyAndReturn
   */
  export type PostCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Post update
   */
  export type PostUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to update a Post.
     */
    data: XOR<PostUpdateInput, PostUncheckedUpdateInput>
    /**
     * Choose, which Post to update.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post updateMany
   */
  export type PostUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Posts.
     */
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to update.
     */
    limit?: number
  }

  /**
   * Post updateManyAndReturn
   */
  export type PostUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * The data used to update Posts.
     */
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Post upsert
   */
  export type PostUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The filter to search for the Post to update in case it exists.
     */
    where: PostWhereUniqueInput
    /**
     * In case the Post found by the `where` argument doesn't exist, create a new Post with this data.
     */
    create: XOR<PostCreateInput, PostUncheckedCreateInput>
    /**
     * In case the Post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PostUpdateInput, PostUncheckedUpdateInput>
  }

  /**
   * Post delete
   */
  export type PostDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter which Post to delete.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post deleteMany
   */
  export type PostDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Posts to delete
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to delete.
     */
    limit?: number
  }

  /**
   * Post.comments
   */
  export type Post$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Post.votes
   */
  export type Post$votesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    where?: VoteWhereInput
    orderBy?: VoteOrderByWithRelationInput | VoteOrderByWithRelationInput[]
    cursor?: VoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VoteScalarFieldEnum | VoteScalarFieldEnum[]
  }

  /**
   * Post.saved_by_users
   */
  export type Post$saved_by_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    where?: SavedContentWhereInput
    orderBy?: SavedContentOrderByWithRelationInput | SavedContentOrderByWithRelationInput[]
    cursor?: SavedContentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SavedContentScalarFieldEnum | SavedContentScalarFieldEnum[]
  }

  /**
   * Post.notifications
   */
  export type Post$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Post without action
   */
  export type PostDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
  }


  /**
   * Model Comment
   */

  export type AggregateComment = {
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  export type CommentAvgAggregateOutputType = {
    upvotes: number | null
    downvotes: number | null
    score: number | null
  }

  export type CommentSumAggregateOutputType = {
    upvotes: number | null
    downvotes: number | null
    score: number | null
  }

  export type CommentMinAggregateOutputType = {
    comment_id: string | null
    content: string | null
    upvotes: number | null
    downvotes: number | null
    score: number | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    post_id: string | null
    user_id: string | null
    parent_comment_id: string | null
  }

  export type CommentMaxAggregateOutputType = {
    comment_id: string | null
    content: string | null
    upvotes: number | null
    downvotes: number | null
    score: number | null
    is_deleted: boolean | null
    created_at: Date | null
    updated_at: Date | null
    post_id: string | null
    user_id: string | null
    parent_comment_id: string | null
  }

  export type CommentCountAggregateOutputType = {
    comment_id: number
    content: number
    upvotes: number
    downvotes: number
    score: number
    is_deleted: number
    created_at: number
    updated_at: number
    post_id: number
    user_id: number
    parent_comment_id: number
    _all: number
  }


  export type CommentAvgAggregateInputType = {
    upvotes?: true
    downvotes?: true
    score?: true
  }

  export type CommentSumAggregateInputType = {
    upvotes?: true
    downvotes?: true
    score?: true
  }

  export type CommentMinAggregateInputType = {
    comment_id?: true
    content?: true
    upvotes?: true
    downvotes?: true
    score?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    post_id?: true
    user_id?: true
    parent_comment_id?: true
  }

  export type CommentMaxAggregateInputType = {
    comment_id?: true
    content?: true
    upvotes?: true
    downvotes?: true
    score?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    post_id?: true
    user_id?: true
    parent_comment_id?: true
  }

  export type CommentCountAggregateInputType = {
    comment_id?: true
    content?: true
    upvotes?: true
    downvotes?: true
    score?: true
    is_deleted?: true
    created_at?: true
    updated_at?: true
    post_id?: true
    user_id?: true
    parent_comment_id?: true
    _all?: true
  }

  export type CommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comment to aggregate.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Comments
    **/
    _count?: true | CommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommentMaxAggregateInputType
  }

  export type GetCommentAggregateType<T extends CommentAggregateArgs> = {
        [P in keyof T & keyof AggregateComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateComment[P]>
      : GetScalarType<T[P], AggregateComment[P]>
  }




  export type CommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithAggregationInput | CommentOrderByWithAggregationInput[]
    by: CommentScalarFieldEnum[] | CommentScalarFieldEnum
    having?: CommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommentCountAggregateInputType | true
    _avg?: CommentAvgAggregateInputType
    _sum?: CommentSumAggregateInputType
    _min?: CommentMinAggregateInputType
    _max?: CommentMaxAggregateInputType
  }

  export type CommentGroupByOutputType = {
    comment_id: string
    content: string
    upvotes: number
    downvotes: number
    score: number
    is_deleted: boolean
    created_at: Date
    updated_at: Date
    post_id: string
    user_id: string
    parent_comment_id: string | null
    _count: CommentCountAggregateOutputType | null
    _avg: CommentAvgAggregateOutputType | null
    _sum: CommentSumAggregateOutputType | null
    _min: CommentMinAggregateOutputType | null
    _max: CommentMaxAggregateOutputType | null
  }

  type GetCommentGroupByPayload<T extends CommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommentGroupByOutputType[P]>
            : GetScalarType<T[P], CommentGroupByOutputType[P]>
        }
      >
    >


  export type CommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    comment_id?: boolean
    content?: boolean
    upvotes?: boolean
    downvotes?: boolean
    score?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    post_id?: boolean
    user_id?: boolean
    parent_comment_id?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    parent_comment?: boolean | Comment$parent_commentArgs<ExtArgs>
    replies?: boolean | Comment$repliesArgs<ExtArgs>
    votes?: boolean | Comment$votesArgs<ExtArgs>
    saved_by_users?: boolean | Comment$saved_by_usersArgs<ExtArgs>
    notifications?: boolean | Comment$notificationsArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    comment_id?: boolean
    content?: boolean
    upvotes?: boolean
    downvotes?: boolean
    score?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    post_id?: boolean
    user_id?: boolean
    parent_comment_id?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    parent_comment?: boolean | Comment$parent_commentArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    comment_id?: boolean
    content?: boolean
    upvotes?: boolean
    downvotes?: boolean
    score?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    post_id?: boolean
    user_id?: boolean
    parent_comment_id?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    parent_comment?: boolean | Comment$parent_commentArgs<ExtArgs>
  }, ExtArgs["result"]["comment"]>

  export type CommentSelectScalar = {
    comment_id?: boolean
    content?: boolean
    upvotes?: boolean
    downvotes?: boolean
    score?: boolean
    is_deleted?: boolean
    created_at?: boolean
    updated_at?: boolean
    post_id?: boolean
    user_id?: boolean
    parent_comment_id?: boolean
  }

  export type CommentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"comment_id" | "content" | "upvotes" | "downvotes" | "score" | "is_deleted" | "created_at" | "updated_at" | "post_id" | "user_id" | "parent_comment_id", ExtArgs["result"]["comment"]>
  export type CommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    parent_comment?: boolean | Comment$parent_commentArgs<ExtArgs>
    replies?: boolean | Comment$repliesArgs<ExtArgs>
    votes?: boolean | Comment$votesArgs<ExtArgs>
    saved_by_users?: boolean | Comment$saved_by_usersArgs<ExtArgs>
    notifications?: boolean | Comment$notificationsArgs<ExtArgs>
    _count?: boolean | CommentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CommentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    parent_comment?: boolean | Comment$parent_commentArgs<ExtArgs>
  }
  export type CommentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    author?: boolean | UserDefaultArgs<ExtArgs>
    parent_comment?: boolean | Comment$parent_commentArgs<ExtArgs>
  }

  export type $CommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Comment"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      author: Prisma.$UserPayload<ExtArgs>
      parent_comment: Prisma.$CommentPayload<ExtArgs> | null
      replies: Prisma.$CommentPayload<ExtArgs>[]
      votes: Prisma.$VotePayload<ExtArgs>[]
      saved_by_users: Prisma.$SavedContentPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      comment_id: string
      content: string
      upvotes: number
      downvotes: number
      score: number
      is_deleted: boolean
      created_at: Date
      updated_at: Date
      post_id: string
      user_id: string
      parent_comment_id: string | null
    }, ExtArgs["result"]["comment"]>
    composites: {}
  }

  type CommentGetPayload<S extends boolean | null | undefined | CommentDefaultArgs> = $Result.GetResult<Prisma.$CommentPayload, S>

  type CommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommentCountAggregateInputType | true
    }

  export interface CommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Comment'], meta: { name: 'Comment' } }
    /**
     * Find zero or one Comment that matches the filter.
     * @param {CommentFindUniqueArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommentFindUniqueArgs>(args: SelectSubset<T, CommentFindUniqueArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Comment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommentFindUniqueOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommentFindUniqueOrThrowArgs>(args: SelectSubset<T, CommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommentFindFirstArgs>(args?: SelectSubset<T, CommentFindFirstArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Comment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindFirstOrThrowArgs} args - Arguments to find a Comment
     * @example
     * // Get one Comment
     * const comment = await prisma.comment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommentFindFirstOrThrowArgs>(args?: SelectSubset<T, CommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Comments
     * const comments = await prisma.comment.findMany()
     * 
     * // Get first 10 Comments
     * const comments = await prisma.comment.findMany({ take: 10 })
     * 
     * // Only select the `comment_id`
     * const commentWithComment_idOnly = await prisma.comment.findMany({ select: { comment_id: true } })
     * 
     */
    findMany<T extends CommentFindManyArgs>(args?: SelectSubset<T, CommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Comment.
     * @param {CommentCreateArgs} args - Arguments to create a Comment.
     * @example
     * // Create one Comment
     * const Comment = await prisma.comment.create({
     *   data: {
     *     // ... data to create a Comment
     *   }
     * })
     * 
     */
    create<T extends CommentCreateArgs>(args: SelectSubset<T, CommentCreateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Comments.
     * @param {CommentCreateManyArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommentCreateManyArgs>(args?: SelectSubset<T, CommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Comments and returns the data saved in the database.
     * @param {CommentCreateManyAndReturnArgs} args - Arguments to create many Comments.
     * @example
     * // Create many Comments
     * const comment = await prisma.comment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Comments and only return the `comment_id`
     * const commentWithComment_idOnly = await prisma.comment.createManyAndReturn({
     *   select: { comment_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommentCreateManyAndReturnArgs>(args?: SelectSubset<T, CommentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Comment.
     * @param {CommentDeleteArgs} args - Arguments to delete one Comment.
     * @example
     * // Delete one Comment
     * const Comment = await prisma.comment.delete({
     *   where: {
     *     // ... filter to delete one Comment
     *   }
     * })
     * 
     */
    delete<T extends CommentDeleteArgs>(args: SelectSubset<T, CommentDeleteArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Comment.
     * @param {CommentUpdateArgs} args - Arguments to update one Comment.
     * @example
     * // Update one Comment
     * const comment = await prisma.comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommentUpdateArgs>(args: SelectSubset<T, CommentUpdateArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Comments.
     * @param {CommentDeleteManyArgs} args - Arguments to filter Comments to delete.
     * @example
     * // Delete a few Comments
     * const { count } = await prisma.comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommentDeleteManyArgs>(args?: SelectSubset<T, CommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommentUpdateManyArgs>(args: SelectSubset<T, CommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Comments and returns the data updated in the database.
     * @param {CommentUpdateManyAndReturnArgs} args - Arguments to update many Comments.
     * @example
     * // Update many Comments
     * const comment = await prisma.comment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Comments and only return the `comment_id`
     * const commentWithComment_idOnly = await prisma.comment.updateManyAndReturn({
     *   select: { comment_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CommentUpdateManyAndReturnArgs>(args: SelectSubset<T, CommentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Comment.
     * @param {CommentUpsertArgs} args - Arguments to update or create a Comment.
     * @example
     * // Update or create a Comment
     * const comment = await prisma.comment.upsert({
     *   create: {
     *     // ... data to create a Comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Comment we want to update
     *   }
     * })
     */
    upsert<T extends CommentUpsertArgs>(args: SelectSubset<T, CommentUpsertArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentCountArgs} args - Arguments to filter Comments to count.
     * @example
     * // Count the number of Comments
     * const count = await prisma.comment.count({
     *   where: {
     *     // ... the filter for the Comments we want to count
     *   }
     * })
    **/
    count<T extends CommentCountArgs>(
      args?: Subset<T, CommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommentAggregateArgs>(args: Subset<T, CommentAggregateArgs>): Prisma.PrismaPromise<GetCommentAggregateType<T>>

    /**
     * Group by Comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommentGroupByArgs['orderBy'] }
        : { orderBy?: CommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Comment model
   */
  readonly fields: CommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    parent_comment<T extends Comment$parent_commentArgs<ExtArgs> = {}>(args?: Subset<T, Comment$parent_commentArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    replies<T extends Comment$repliesArgs<ExtArgs> = {}>(args?: Subset<T, Comment$repliesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    votes<T extends Comment$votesArgs<ExtArgs> = {}>(args?: Subset<T, Comment$votesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    saved_by_users<T extends Comment$saved_by_usersArgs<ExtArgs> = {}>(args?: Subset<T, Comment$saved_by_usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends Comment$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, Comment$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Comment model
   */
  interface CommentFieldRefs {
    readonly comment_id: FieldRef<"Comment", 'String'>
    readonly content: FieldRef<"Comment", 'String'>
    readonly upvotes: FieldRef<"Comment", 'Int'>
    readonly downvotes: FieldRef<"Comment", 'Int'>
    readonly score: FieldRef<"Comment", 'Int'>
    readonly is_deleted: FieldRef<"Comment", 'Boolean'>
    readonly created_at: FieldRef<"Comment", 'DateTime'>
    readonly updated_at: FieldRef<"Comment", 'DateTime'>
    readonly post_id: FieldRef<"Comment", 'String'>
    readonly user_id: FieldRef<"Comment", 'String'>
    readonly parent_comment_id: FieldRef<"Comment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Comment findUnique
   */
  export type CommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findUniqueOrThrow
   */
  export type CommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment findFirst
   */
  export type CommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findFirstOrThrow
   */
  export type CommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comment to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Comments.
     */
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment findMany
   */
  export type CommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter, which Comments to fetch.
     */
    where?: CommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Comments to fetch.
     */
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Comments.
     */
    cursor?: CommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Comments.
     */
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment create
   */
  export type CommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to create a Comment.
     */
    data: XOR<CommentCreateInput, CommentUncheckedCreateInput>
  }

  /**
   * Comment createMany
   */
  export type CommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Comment createManyAndReturn
   */
  export type CommentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * The data used to create many Comments.
     */
    data: CommentCreateManyInput | CommentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comment update
   */
  export type CommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The data needed to update a Comment.
     */
    data: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
    /**
     * Choose, which Comment to update.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment updateMany
   */
  export type CommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to update.
     */
    limit?: number
  }

  /**
   * Comment updateManyAndReturn
   */
  export type CommentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * The data used to update Comments.
     */
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyInput>
    /**
     * Filter which Comments to update
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Comment upsert
   */
  export type CommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * The filter to search for the Comment to update in case it exists.
     */
    where: CommentWhereUniqueInput
    /**
     * In case the Comment found by the `where` argument doesn't exist, create a new Comment with this data.
     */
    create: XOR<CommentCreateInput, CommentUncheckedCreateInput>
    /**
     * In case the Comment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommentUpdateInput, CommentUncheckedUpdateInput>
  }

  /**
   * Comment delete
   */
  export type CommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    /**
     * Filter which Comment to delete.
     */
    where: CommentWhereUniqueInput
  }

  /**
   * Comment deleteMany
   */
  export type CommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Comments to delete
     */
    where?: CommentWhereInput
    /**
     * Limit how many Comments to delete.
     */
    limit?: number
  }

  /**
   * Comment.parent_comment
   */
  export type Comment$parent_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
  }

  /**
   * Comment.replies
   */
  export type Comment$repliesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
    orderBy?: CommentOrderByWithRelationInput | CommentOrderByWithRelationInput[]
    cursor?: CommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CommentScalarFieldEnum | CommentScalarFieldEnum[]
  }

  /**
   * Comment.votes
   */
  export type Comment$votesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    where?: VoteWhereInput
    orderBy?: VoteOrderByWithRelationInput | VoteOrderByWithRelationInput[]
    cursor?: VoteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VoteScalarFieldEnum | VoteScalarFieldEnum[]
  }

  /**
   * Comment.saved_by_users
   */
  export type Comment$saved_by_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    where?: SavedContentWhereInput
    orderBy?: SavedContentOrderByWithRelationInput | SavedContentOrderByWithRelationInput[]
    cursor?: SavedContentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SavedContentScalarFieldEnum | SavedContentScalarFieldEnum[]
  }

  /**
   * Comment.notifications
   */
  export type Comment$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Comment without action
   */
  export type CommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
  }


  /**
   * Model Vote
   */

  export type AggregateVote = {
    _count: VoteCountAggregateOutputType | null
    _min: VoteMinAggregateOutputType | null
    _max: VoteMaxAggregateOutputType | null
  }

  export type VoteMinAggregateOutputType = {
    vote_id: string | null
    vote_type: $Enums.VoteType | null
    created_at: Date | null
    user_id: string | null
    post_id: string | null
    comment_id: string | null
  }

  export type VoteMaxAggregateOutputType = {
    vote_id: string | null
    vote_type: $Enums.VoteType | null
    created_at: Date | null
    user_id: string | null
    post_id: string | null
    comment_id: string | null
  }

  export type VoteCountAggregateOutputType = {
    vote_id: number
    vote_type: number
    created_at: number
    user_id: number
    post_id: number
    comment_id: number
    _all: number
  }


  export type VoteMinAggregateInputType = {
    vote_id?: true
    vote_type?: true
    created_at?: true
    user_id?: true
    post_id?: true
    comment_id?: true
  }

  export type VoteMaxAggregateInputType = {
    vote_id?: true
    vote_type?: true
    created_at?: true
    user_id?: true
    post_id?: true
    comment_id?: true
  }

  export type VoteCountAggregateInputType = {
    vote_id?: true
    vote_type?: true
    created_at?: true
    user_id?: true
    post_id?: true
    comment_id?: true
    _all?: true
  }

  export type VoteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Vote to aggregate.
     */
    where?: VoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Votes to fetch.
     */
    orderBy?: VoteOrderByWithRelationInput | VoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Votes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Votes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Votes
    **/
    _count?: true | VoteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VoteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VoteMaxAggregateInputType
  }

  export type GetVoteAggregateType<T extends VoteAggregateArgs> = {
        [P in keyof T & keyof AggregateVote]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVote[P]>
      : GetScalarType<T[P], AggregateVote[P]>
  }




  export type VoteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VoteWhereInput
    orderBy?: VoteOrderByWithAggregationInput | VoteOrderByWithAggregationInput[]
    by: VoteScalarFieldEnum[] | VoteScalarFieldEnum
    having?: VoteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VoteCountAggregateInputType | true
    _min?: VoteMinAggregateInputType
    _max?: VoteMaxAggregateInputType
  }

  export type VoteGroupByOutputType = {
    vote_id: string
    vote_type: $Enums.VoteType
    created_at: Date
    user_id: string
    post_id: string | null
    comment_id: string | null
    _count: VoteCountAggregateOutputType | null
    _min: VoteMinAggregateOutputType | null
    _max: VoteMaxAggregateOutputType | null
  }

  type GetVoteGroupByPayload<T extends VoteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VoteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VoteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VoteGroupByOutputType[P]>
            : GetScalarType<T[P], VoteGroupByOutputType[P]>
        }
      >
    >


  export type VoteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    vote_id?: boolean
    vote_type?: boolean
    created_at?: boolean
    user_id?: boolean
    post_id?: boolean
    comment_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Vote$postArgs<ExtArgs>
    comment?: boolean | Vote$commentArgs<ExtArgs>
  }, ExtArgs["result"]["vote"]>

  export type VoteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    vote_id?: boolean
    vote_type?: boolean
    created_at?: boolean
    user_id?: boolean
    post_id?: boolean
    comment_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Vote$postArgs<ExtArgs>
    comment?: boolean | Vote$commentArgs<ExtArgs>
  }, ExtArgs["result"]["vote"]>

  export type VoteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    vote_id?: boolean
    vote_type?: boolean
    created_at?: boolean
    user_id?: boolean
    post_id?: boolean
    comment_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Vote$postArgs<ExtArgs>
    comment?: boolean | Vote$commentArgs<ExtArgs>
  }, ExtArgs["result"]["vote"]>

  export type VoteSelectScalar = {
    vote_id?: boolean
    vote_type?: boolean
    created_at?: boolean
    user_id?: boolean
    post_id?: boolean
    comment_id?: boolean
  }

  export type VoteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"vote_id" | "vote_type" | "created_at" | "user_id" | "post_id" | "comment_id", ExtArgs["result"]["vote"]>
  export type VoteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Vote$postArgs<ExtArgs>
    comment?: boolean | Vote$commentArgs<ExtArgs>
  }
  export type VoteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Vote$postArgs<ExtArgs>
    comment?: boolean | Vote$commentArgs<ExtArgs>
  }
  export type VoteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | Vote$postArgs<ExtArgs>
    comment?: boolean | Vote$commentArgs<ExtArgs>
  }

  export type $VotePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Vote"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      post: Prisma.$PostPayload<ExtArgs> | null
      comment: Prisma.$CommentPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      vote_id: string
      vote_type: $Enums.VoteType
      created_at: Date
      user_id: string
      post_id: string | null
      comment_id: string | null
    }, ExtArgs["result"]["vote"]>
    composites: {}
  }

  type VoteGetPayload<S extends boolean | null | undefined | VoteDefaultArgs> = $Result.GetResult<Prisma.$VotePayload, S>

  type VoteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VoteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VoteCountAggregateInputType | true
    }

  export interface VoteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Vote'], meta: { name: 'Vote' } }
    /**
     * Find zero or one Vote that matches the filter.
     * @param {VoteFindUniqueArgs} args - Arguments to find a Vote
     * @example
     * // Get one Vote
     * const vote = await prisma.vote.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VoteFindUniqueArgs>(args: SelectSubset<T, VoteFindUniqueArgs<ExtArgs>>): Prisma__VoteClient<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Vote that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VoteFindUniqueOrThrowArgs} args - Arguments to find a Vote
     * @example
     * // Get one Vote
     * const vote = await prisma.vote.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VoteFindUniqueOrThrowArgs>(args: SelectSubset<T, VoteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VoteClient<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vote that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VoteFindFirstArgs} args - Arguments to find a Vote
     * @example
     * // Get one Vote
     * const vote = await prisma.vote.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VoteFindFirstArgs>(args?: SelectSubset<T, VoteFindFirstArgs<ExtArgs>>): Prisma__VoteClient<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Vote that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VoteFindFirstOrThrowArgs} args - Arguments to find a Vote
     * @example
     * // Get one Vote
     * const vote = await prisma.vote.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VoteFindFirstOrThrowArgs>(args?: SelectSubset<T, VoteFindFirstOrThrowArgs<ExtArgs>>): Prisma__VoteClient<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Votes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VoteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Votes
     * const votes = await prisma.vote.findMany()
     * 
     * // Get first 10 Votes
     * const votes = await prisma.vote.findMany({ take: 10 })
     * 
     * // Only select the `vote_id`
     * const voteWithVote_idOnly = await prisma.vote.findMany({ select: { vote_id: true } })
     * 
     */
    findMany<T extends VoteFindManyArgs>(args?: SelectSubset<T, VoteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Vote.
     * @param {VoteCreateArgs} args - Arguments to create a Vote.
     * @example
     * // Create one Vote
     * const Vote = await prisma.vote.create({
     *   data: {
     *     // ... data to create a Vote
     *   }
     * })
     * 
     */
    create<T extends VoteCreateArgs>(args: SelectSubset<T, VoteCreateArgs<ExtArgs>>): Prisma__VoteClient<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Votes.
     * @param {VoteCreateManyArgs} args - Arguments to create many Votes.
     * @example
     * // Create many Votes
     * const vote = await prisma.vote.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VoteCreateManyArgs>(args?: SelectSubset<T, VoteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Votes and returns the data saved in the database.
     * @param {VoteCreateManyAndReturnArgs} args - Arguments to create many Votes.
     * @example
     * // Create many Votes
     * const vote = await prisma.vote.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Votes and only return the `vote_id`
     * const voteWithVote_idOnly = await prisma.vote.createManyAndReturn({
     *   select: { vote_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VoteCreateManyAndReturnArgs>(args?: SelectSubset<T, VoteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Vote.
     * @param {VoteDeleteArgs} args - Arguments to delete one Vote.
     * @example
     * // Delete one Vote
     * const Vote = await prisma.vote.delete({
     *   where: {
     *     // ... filter to delete one Vote
     *   }
     * })
     * 
     */
    delete<T extends VoteDeleteArgs>(args: SelectSubset<T, VoteDeleteArgs<ExtArgs>>): Prisma__VoteClient<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Vote.
     * @param {VoteUpdateArgs} args - Arguments to update one Vote.
     * @example
     * // Update one Vote
     * const vote = await prisma.vote.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VoteUpdateArgs>(args: SelectSubset<T, VoteUpdateArgs<ExtArgs>>): Prisma__VoteClient<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Votes.
     * @param {VoteDeleteManyArgs} args - Arguments to filter Votes to delete.
     * @example
     * // Delete a few Votes
     * const { count } = await prisma.vote.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VoteDeleteManyArgs>(args?: SelectSubset<T, VoteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Votes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VoteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Votes
     * const vote = await prisma.vote.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VoteUpdateManyArgs>(args: SelectSubset<T, VoteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Votes and returns the data updated in the database.
     * @param {VoteUpdateManyAndReturnArgs} args - Arguments to update many Votes.
     * @example
     * // Update many Votes
     * const vote = await prisma.vote.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Votes and only return the `vote_id`
     * const voteWithVote_idOnly = await prisma.vote.updateManyAndReturn({
     *   select: { vote_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VoteUpdateManyAndReturnArgs>(args: SelectSubset<T, VoteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Vote.
     * @param {VoteUpsertArgs} args - Arguments to update or create a Vote.
     * @example
     * // Update or create a Vote
     * const vote = await prisma.vote.upsert({
     *   create: {
     *     // ... data to create a Vote
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Vote we want to update
     *   }
     * })
     */
    upsert<T extends VoteUpsertArgs>(args: SelectSubset<T, VoteUpsertArgs<ExtArgs>>): Prisma__VoteClient<$Result.GetResult<Prisma.$VotePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Votes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VoteCountArgs} args - Arguments to filter Votes to count.
     * @example
     * // Count the number of Votes
     * const count = await prisma.vote.count({
     *   where: {
     *     // ... the filter for the Votes we want to count
     *   }
     * })
    **/
    count<T extends VoteCountArgs>(
      args?: Subset<T, VoteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VoteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Vote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VoteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VoteAggregateArgs>(args: Subset<T, VoteAggregateArgs>): Prisma.PrismaPromise<GetVoteAggregateType<T>>

    /**
     * Group by Vote.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VoteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VoteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VoteGroupByArgs['orderBy'] }
        : { orderBy?: VoteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VoteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVoteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Vote model
   */
  readonly fields: VoteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Vote.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VoteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    post<T extends Vote$postArgs<ExtArgs> = {}>(args?: Subset<T, Vote$postArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    comment<T extends Vote$commentArgs<ExtArgs> = {}>(args?: Subset<T, Vote$commentArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Vote model
   */
  interface VoteFieldRefs {
    readonly vote_id: FieldRef<"Vote", 'String'>
    readonly vote_type: FieldRef<"Vote", 'VoteType'>
    readonly created_at: FieldRef<"Vote", 'DateTime'>
    readonly user_id: FieldRef<"Vote", 'String'>
    readonly post_id: FieldRef<"Vote", 'String'>
    readonly comment_id: FieldRef<"Vote", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Vote findUnique
   */
  export type VoteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    /**
     * Filter, which Vote to fetch.
     */
    where: VoteWhereUniqueInput
  }

  /**
   * Vote findUniqueOrThrow
   */
  export type VoteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    /**
     * Filter, which Vote to fetch.
     */
    where: VoteWhereUniqueInput
  }

  /**
   * Vote findFirst
   */
  export type VoteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    /**
     * Filter, which Vote to fetch.
     */
    where?: VoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Votes to fetch.
     */
    orderBy?: VoteOrderByWithRelationInput | VoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Votes.
     */
    cursor?: VoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Votes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Votes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Votes.
     */
    distinct?: VoteScalarFieldEnum | VoteScalarFieldEnum[]
  }

  /**
   * Vote findFirstOrThrow
   */
  export type VoteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    /**
     * Filter, which Vote to fetch.
     */
    where?: VoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Votes to fetch.
     */
    orderBy?: VoteOrderByWithRelationInput | VoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Votes.
     */
    cursor?: VoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Votes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Votes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Votes.
     */
    distinct?: VoteScalarFieldEnum | VoteScalarFieldEnum[]
  }

  /**
   * Vote findMany
   */
  export type VoteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    /**
     * Filter, which Votes to fetch.
     */
    where?: VoteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Votes to fetch.
     */
    orderBy?: VoteOrderByWithRelationInput | VoteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Votes.
     */
    cursor?: VoteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Votes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Votes.
     */
    skip?: number
    distinct?: VoteScalarFieldEnum | VoteScalarFieldEnum[]
  }

  /**
   * Vote create
   */
  export type VoteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    /**
     * The data needed to create a Vote.
     */
    data: XOR<VoteCreateInput, VoteUncheckedCreateInput>
  }

  /**
   * Vote createMany
   */
  export type VoteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Votes.
     */
    data: VoteCreateManyInput | VoteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Vote createManyAndReturn
   */
  export type VoteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * The data used to create many Votes.
     */
    data: VoteCreateManyInput | VoteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vote update
   */
  export type VoteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    /**
     * The data needed to update a Vote.
     */
    data: XOR<VoteUpdateInput, VoteUncheckedUpdateInput>
    /**
     * Choose, which Vote to update.
     */
    where: VoteWhereUniqueInput
  }

  /**
   * Vote updateMany
   */
  export type VoteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Votes.
     */
    data: XOR<VoteUpdateManyMutationInput, VoteUncheckedUpdateManyInput>
    /**
     * Filter which Votes to update
     */
    where?: VoteWhereInput
    /**
     * Limit how many Votes to update.
     */
    limit?: number
  }

  /**
   * Vote updateManyAndReturn
   */
  export type VoteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * The data used to update Votes.
     */
    data: XOR<VoteUpdateManyMutationInput, VoteUncheckedUpdateManyInput>
    /**
     * Filter which Votes to update
     */
    where?: VoteWhereInput
    /**
     * Limit how many Votes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Vote upsert
   */
  export type VoteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    /**
     * The filter to search for the Vote to update in case it exists.
     */
    where: VoteWhereUniqueInput
    /**
     * In case the Vote found by the `where` argument doesn't exist, create a new Vote with this data.
     */
    create: XOR<VoteCreateInput, VoteUncheckedCreateInput>
    /**
     * In case the Vote was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VoteUpdateInput, VoteUncheckedUpdateInput>
  }

  /**
   * Vote delete
   */
  export type VoteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
    /**
     * Filter which Vote to delete.
     */
    where: VoteWhereUniqueInput
  }

  /**
   * Vote deleteMany
   */
  export type VoteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Votes to delete
     */
    where?: VoteWhereInput
    /**
     * Limit how many Votes to delete.
     */
    limit?: number
  }

  /**
   * Vote.post
   */
  export type Vote$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
  }

  /**
   * Vote.comment
   */
  export type Vote$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
  }

  /**
   * Vote without action
   */
  export type VoteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Vote
     */
    select?: VoteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Vote
     */
    omit?: VoteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VoteInclude<ExtArgs> | null
  }


  /**
   * Model CommunityMembership
   */

  export type AggregateCommunityMembership = {
    _count: CommunityMembershipCountAggregateOutputType | null
    _min: CommunityMembershipMinAggregateOutputType | null
    _max: CommunityMembershipMaxAggregateOutputType | null
  }

  export type CommunityMembershipMinAggregateOutputType = {
    membership_id: string | null
    role: $Enums.MembershipRole | null
    joined_at: Date | null
    user_id: string | null
    community_id: string | null
  }

  export type CommunityMembershipMaxAggregateOutputType = {
    membership_id: string | null
    role: $Enums.MembershipRole | null
    joined_at: Date | null
    user_id: string | null
    community_id: string | null
  }

  export type CommunityMembershipCountAggregateOutputType = {
    membership_id: number
    role: number
    joined_at: number
    user_id: number
    community_id: number
    _all: number
  }


  export type CommunityMembershipMinAggregateInputType = {
    membership_id?: true
    role?: true
    joined_at?: true
    user_id?: true
    community_id?: true
  }

  export type CommunityMembershipMaxAggregateInputType = {
    membership_id?: true
    role?: true
    joined_at?: true
    user_id?: true
    community_id?: true
  }

  export type CommunityMembershipCountAggregateInputType = {
    membership_id?: true
    role?: true
    joined_at?: true
    user_id?: true
    community_id?: true
    _all?: true
  }

  export type CommunityMembershipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommunityMembership to aggregate.
     */
    where?: CommunityMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunityMemberships to fetch.
     */
    orderBy?: CommunityMembershipOrderByWithRelationInput | CommunityMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommunityMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunityMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunityMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CommunityMemberships
    **/
    _count?: true | CommunityMembershipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommunityMembershipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommunityMembershipMaxAggregateInputType
  }

  export type GetCommunityMembershipAggregateType<T extends CommunityMembershipAggregateArgs> = {
        [P in keyof T & keyof AggregateCommunityMembership]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommunityMembership[P]>
      : GetScalarType<T[P], AggregateCommunityMembership[P]>
  }




  export type CommunityMembershipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommunityMembershipWhereInput
    orderBy?: CommunityMembershipOrderByWithAggregationInput | CommunityMembershipOrderByWithAggregationInput[]
    by: CommunityMembershipScalarFieldEnum[] | CommunityMembershipScalarFieldEnum
    having?: CommunityMembershipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommunityMembershipCountAggregateInputType | true
    _min?: CommunityMembershipMinAggregateInputType
    _max?: CommunityMembershipMaxAggregateInputType
  }

  export type CommunityMembershipGroupByOutputType = {
    membership_id: string
    role: $Enums.MembershipRole
    joined_at: Date
    user_id: string
    community_id: string
    _count: CommunityMembershipCountAggregateOutputType | null
    _min: CommunityMembershipMinAggregateOutputType | null
    _max: CommunityMembershipMaxAggregateOutputType | null
  }

  type GetCommunityMembershipGroupByPayload<T extends CommunityMembershipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommunityMembershipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommunityMembershipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommunityMembershipGroupByOutputType[P]>
            : GetScalarType<T[P], CommunityMembershipGroupByOutputType[P]>
        }
      >
    >


  export type CommunityMembershipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    membership_id?: boolean
    role?: boolean
    joined_at?: boolean
    user_id?: boolean
    community_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communityMembership"]>

  export type CommunityMembershipSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    membership_id?: boolean
    role?: boolean
    joined_at?: boolean
    user_id?: boolean
    community_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communityMembership"]>

  export type CommunityMembershipSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    membership_id?: boolean
    role?: boolean
    joined_at?: boolean
    user_id?: boolean
    community_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["communityMembership"]>

  export type CommunityMembershipSelectScalar = {
    membership_id?: boolean
    role?: boolean
    joined_at?: boolean
    user_id?: boolean
    community_id?: boolean
  }

  export type CommunityMembershipOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"membership_id" | "role" | "joined_at" | "user_id" | "community_id", ExtArgs["result"]["communityMembership"]>
  export type CommunityMembershipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }
  export type CommunityMembershipIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }
  export type CommunityMembershipIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }

  export type $CommunityMembershipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CommunityMembership"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      community: Prisma.$CommunityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      membership_id: string
      role: $Enums.MembershipRole
      joined_at: Date
      user_id: string
      community_id: string
    }, ExtArgs["result"]["communityMembership"]>
    composites: {}
  }

  type CommunityMembershipGetPayload<S extends boolean | null | undefined | CommunityMembershipDefaultArgs> = $Result.GetResult<Prisma.$CommunityMembershipPayload, S>

  type CommunityMembershipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CommunityMembershipFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CommunityMembershipCountAggregateInputType | true
    }

  export interface CommunityMembershipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CommunityMembership'], meta: { name: 'CommunityMembership' } }
    /**
     * Find zero or one CommunityMembership that matches the filter.
     * @param {CommunityMembershipFindUniqueArgs} args - Arguments to find a CommunityMembership
     * @example
     * // Get one CommunityMembership
     * const communityMembership = await prisma.communityMembership.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommunityMembershipFindUniqueArgs>(args: SelectSubset<T, CommunityMembershipFindUniqueArgs<ExtArgs>>): Prisma__CommunityMembershipClient<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CommunityMembership that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CommunityMembershipFindUniqueOrThrowArgs} args - Arguments to find a CommunityMembership
     * @example
     * // Get one CommunityMembership
     * const communityMembership = await prisma.communityMembership.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommunityMembershipFindUniqueOrThrowArgs>(args: SelectSubset<T, CommunityMembershipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommunityMembershipClient<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommunityMembership that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityMembershipFindFirstArgs} args - Arguments to find a CommunityMembership
     * @example
     * // Get one CommunityMembership
     * const communityMembership = await prisma.communityMembership.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommunityMembershipFindFirstArgs>(args?: SelectSubset<T, CommunityMembershipFindFirstArgs<ExtArgs>>): Prisma__CommunityMembershipClient<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CommunityMembership that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityMembershipFindFirstOrThrowArgs} args - Arguments to find a CommunityMembership
     * @example
     * // Get one CommunityMembership
     * const communityMembership = await prisma.communityMembership.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommunityMembershipFindFirstOrThrowArgs>(args?: SelectSubset<T, CommunityMembershipFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommunityMembershipClient<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CommunityMemberships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityMembershipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CommunityMemberships
     * const communityMemberships = await prisma.communityMembership.findMany()
     * 
     * // Get first 10 CommunityMemberships
     * const communityMemberships = await prisma.communityMembership.findMany({ take: 10 })
     * 
     * // Only select the `membership_id`
     * const communityMembershipWithMembership_idOnly = await prisma.communityMembership.findMany({ select: { membership_id: true } })
     * 
     */
    findMany<T extends CommunityMembershipFindManyArgs>(args?: SelectSubset<T, CommunityMembershipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CommunityMembership.
     * @param {CommunityMembershipCreateArgs} args - Arguments to create a CommunityMembership.
     * @example
     * // Create one CommunityMembership
     * const CommunityMembership = await prisma.communityMembership.create({
     *   data: {
     *     // ... data to create a CommunityMembership
     *   }
     * })
     * 
     */
    create<T extends CommunityMembershipCreateArgs>(args: SelectSubset<T, CommunityMembershipCreateArgs<ExtArgs>>): Prisma__CommunityMembershipClient<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CommunityMemberships.
     * @param {CommunityMembershipCreateManyArgs} args - Arguments to create many CommunityMemberships.
     * @example
     * // Create many CommunityMemberships
     * const communityMembership = await prisma.communityMembership.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommunityMembershipCreateManyArgs>(args?: SelectSubset<T, CommunityMembershipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CommunityMemberships and returns the data saved in the database.
     * @param {CommunityMembershipCreateManyAndReturnArgs} args - Arguments to create many CommunityMemberships.
     * @example
     * // Create many CommunityMemberships
     * const communityMembership = await prisma.communityMembership.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CommunityMemberships and only return the `membership_id`
     * const communityMembershipWithMembership_idOnly = await prisma.communityMembership.createManyAndReturn({
     *   select: { membership_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommunityMembershipCreateManyAndReturnArgs>(args?: SelectSubset<T, CommunityMembershipCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CommunityMembership.
     * @param {CommunityMembershipDeleteArgs} args - Arguments to delete one CommunityMembership.
     * @example
     * // Delete one CommunityMembership
     * const CommunityMembership = await prisma.communityMembership.delete({
     *   where: {
     *     // ... filter to delete one CommunityMembership
     *   }
     * })
     * 
     */
    delete<T extends CommunityMembershipDeleteArgs>(args: SelectSubset<T, CommunityMembershipDeleteArgs<ExtArgs>>): Prisma__CommunityMembershipClient<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CommunityMembership.
     * @param {CommunityMembershipUpdateArgs} args - Arguments to update one CommunityMembership.
     * @example
     * // Update one CommunityMembership
     * const communityMembership = await prisma.communityMembership.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommunityMembershipUpdateArgs>(args: SelectSubset<T, CommunityMembershipUpdateArgs<ExtArgs>>): Prisma__CommunityMembershipClient<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CommunityMemberships.
     * @param {CommunityMembershipDeleteManyArgs} args - Arguments to filter CommunityMemberships to delete.
     * @example
     * // Delete a few CommunityMemberships
     * const { count } = await prisma.communityMembership.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommunityMembershipDeleteManyArgs>(args?: SelectSubset<T, CommunityMembershipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CommunityMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityMembershipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CommunityMemberships
     * const communityMembership = await prisma.communityMembership.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommunityMembershipUpdateManyArgs>(args: SelectSubset<T, CommunityMembershipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CommunityMemberships and returns the data updated in the database.
     * @param {CommunityMembershipUpdateManyAndReturnArgs} args - Arguments to update many CommunityMemberships.
     * @example
     * // Update many CommunityMemberships
     * const communityMembership = await prisma.communityMembership.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CommunityMemberships and only return the `membership_id`
     * const communityMembershipWithMembership_idOnly = await prisma.communityMembership.updateManyAndReturn({
     *   select: { membership_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CommunityMembershipUpdateManyAndReturnArgs>(args: SelectSubset<T, CommunityMembershipUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CommunityMembership.
     * @param {CommunityMembershipUpsertArgs} args - Arguments to update or create a CommunityMembership.
     * @example
     * // Update or create a CommunityMembership
     * const communityMembership = await prisma.communityMembership.upsert({
     *   create: {
     *     // ... data to create a CommunityMembership
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CommunityMembership we want to update
     *   }
     * })
     */
    upsert<T extends CommunityMembershipUpsertArgs>(args: SelectSubset<T, CommunityMembershipUpsertArgs<ExtArgs>>): Prisma__CommunityMembershipClient<$Result.GetResult<Prisma.$CommunityMembershipPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CommunityMemberships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityMembershipCountArgs} args - Arguments to filter CommunityMemberships to count.
     * @example
     * // Count the number of CommunityMemberships
     * const count = await prisma.communityMembership.count({
     *   where: {
     *     // ... the filter for the CommunityMemberships we want to count
     *   }
     * })
    **/
    count<T extends CommunityMembershipCountArgs>(
      args?: Subset<T, CommunityMembershipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommunityMembershipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CommunityMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityMembershipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommunityMembershipAggregateArgs>(args: Subset<T, CommunityMembershipAggregateArgs>): Prisma.PrismaPromise<GetCommunityMembershipAggregateType<T>>

    /**
     * Group by CommunityMembership.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommunityMembershipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommunityMembershipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommunityMembershipGroupByArgs['orderBy'] }
        : { orderBy?: CommunityMembershipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommunityMembershipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommunityMembershipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CommunityMembership model
   */
  readonly fields: CommunityMembershipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CommunityMembership.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommunityMembershipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    community<T extends CommunityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CommunityDefaultArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CommunityMembership model
   */
  interface CommunityMembershipFieldRefs {
    readonly membership_id: FieldRef<"CommunityMembership", 'String'>
    readonly role: FieldRef<"CommunityMembership", 'MembershipRole'>
    readonly joined_at: FieldRef<"CommunityMembership", 'DateTime'>
    readonly user_id: FieldRef<"CommunityMembership", 'String'>
    readonly community_id: FieldRef<"CommunityMembership", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CommunityMembership findUnique
   */
  export type CommunityMembershipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    /**
     * Filter, which CommunityMembership to fetch.
     */
    where: CommunityMembershipWhereUniqueInput
  }

  /**
   * CommunityMembership findUniqueOrThrow
   */
  export type CommunityMembershipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    /**
     * Filter, which CommunityMembership to fetch.
     */
    where: CommunityMembershipWhereUniqueInput
  }

  /**
   * CommunityMembership findFirst
   */
  export type CommunityMembershipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    /**
     * Filter, which CommunityMembership to fetch.
     */
    where?: CommunityMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunityMemberships to fetch.
     */
    orderBy?: CommunityMembershipOrderByWithRelationInput | CommunityMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommunityMemberships.
     */
    cursor?: CommunityMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunityMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunityMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommunityMemberships.
     */
    distinct?: CommunityMembershipScalarFieldEnum | CommunityMembershipScalarFieldEnum[]
  }

  /**
   * CommunityMembership findFirstOrThrow
   */
  export type CommunityMembershipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    /**
     * Filter, which CommunityMembership to fetch.
     */
    where?: CommunityMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunityMemberships to fetch.
     */
    orderBy?: CommunityMembershipOrderByWithRelationInput | CommunityMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CommunityMemberships.
     */
    cursor?: CommunityMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunityMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunityMemberships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CommunityMemberships.
     */
    distinct?: CommunityMembershipScalarFieldEnum | CommunityMembershipScalarFieldEnum[]
  }

  /**
   * CommunityMembership findMany
   */
  export type CommunityMembershipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    /**
     * Filter, which CommunityMemberships to fetch.
     */
    where?: CommunityMembershipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CommunityMemberships to fetch.
     */
    orderBy?: CommunityMembershipOrderByWithRelationInput | CommunityMembershipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CommunityMemberships.
     */
    cursor?: CommunityMembershipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CommunityMemberships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CommunityMemberships.
     */
    skip?: number
    distinct?: CommunityMembershipScalarFieldEnum | CommunityMembershipScalarFieldEnum[]
  }

  /**
   * CommunityMembership create
   */
  export type CommunityMembershipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    /**
     * The data needed to create a CommunityMembership.
     */
    data: XOR<CommunityMembershipCreateInput, CommunityMembershipUncheckedCreateInput>
  }

  /**
   * CommunityMembership createMany
   */
  export type CommunityMembershipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CommunityMemberships.
     */
    data: CommunityMembershipCreateManyInput | CommunityMembershipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CommunityMembership createManyAndReturn
   */
  export type CommunityMembershipCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * The data used to create many CommunityMemberships.
     */
    data: CommunityMembershipCreateManyInput | CommunityMembershipCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CommunityMembership update
   */
  export type CommunityMembershipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    /**
     * The data needed to update a CommunityMembership.
     */
    data: XOR<CommunityMembershipUpdateInput, CommunityMembershipUncheckedUpdateInput>
    /**
     * Choose, which CommunityMembership to update.
     */
    where: CommunityMembershipWhereUniqueInput
  }

  /**
   * CommunityMembership updateMany
   */
  export type CommunityMembershipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CommunityMemberships.
     */
    data: XOR<CommunityMembershipUpdateManyMutationInput, CommunityMembershipUncheckedUpdateManyInput>
    /**
     * Filter which CommunityMemberships to update
     */
    where?: CommunityMembershipWhereInput
    /**
     * Limit how many CommunityMemberships to update.
     */
    limit?: number
  }

  /**
   * CommunityMembership updateManyAndReturn
   */
  export type CommunityMembershipUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * The data used to update CommunityMemberships.
     */
    data: XOR<CommunityMembershipUpdateManyMutationInput, CommunityMembershipUncheckedUpdateManyInput>
    /**
     * Filter which CommunityMemberships to update
     */
    where?: CommunityMembershipWhereInput
    /**
     * Limit how many CommunityMemberships to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CommunityMembership upsert
   */
  export type CommunityMembershipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    /**
     * The filter to search for the CommunityMembership to update in case it exists.
     */
    where: CommunityMembershipWhereUniqueInput
    /**
     * In case the CommunityMembership found by the `where` argument doesn't exist, create a new CommunityMembership with this data.
     */
    create: XOR<CommunityMembershipCreateInput, CommunityMembershipUncheckedCreateInput>
    /**
     * In case the CommunityMembership was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommunityMembershipUpdateInput, CommunityMembershipUncheckedUpdateInput>
  }

  /**
   * CommunityMembership delete
   */
  export type CommunityMembershipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
    /**
     * Filter which CommunityMembership to delete.
     */
    where: CommunityMembershipWhereUniqueInput
  }

  /**
   * CommunityMembership deleteMany
   */
  export type CommunityMembershipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CommunityMemberships to delete
     */
    where?: CommunityMembershipWhereInput
    /**
     * Limit how many CommunityMemberships to delete.
     */
    limit?: number
  }

  /**
   * CommunityMembership without action
   */
  export type CommunityMembershipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommunityMembership
     */
    select?: CommunityMembershipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CommunityMembership
     */
    omit?: CommunityMembershipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityMembershipInclude<ExtArgs> | null
  }


  /**
   * Model Moderator
   */

  export type AggregateModerator = {
    _count: ModeratorCountAggregateOutputType | null
    _min: ModeratorMinAggregateOutputType | null
    _max: ModeratorMaxAggregateOutputType | null
  }

  export type ModeratorMinAggregateOutputType = {
    moderator_id: string | null
    appointed_at: Date | null
    user_id: string | null
    community_id: string | null
  }

  export type ModeratorMaxAggregateOutputType = {
    moderator_id: string | null
    appointed_at: Date | null
    user_id: string | null
    community_id: string | null
  }

  export type ModeratorCountAggregateOutputType = {
    moderator_id: number
    permissions: number
    appointed_at: number
    user_id: number
    community_id: number
    _all: number
  }


  export type ModeratorMinAggregateInputType = {
    moderator_id?: true
    appointed_at?: true
    user_id?: true
    community_id?: true
  }

  export type ModeratorMaxAggregateInputType = {
    moderator_id?: true
    appointed_at?: true
    user_id?: true
    community_id?: true
  }

  export type ModeratorCountAggregateInputType = {
    moderator_id?: true
    permissions?: true
    appointed_at?: true
    user_id?: true
    community_id?: true
    _all?: true
  }

  export type ModeratorAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Moderator to aggregate.
     */
    where?: ModeratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moderators to fetch.
     */
    orderBy?: ModeratorOrderByWithRelationInput | ModeratorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModeratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moderators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moderators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Moderators
    **/
    _count?: true | ModeratorCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModeratorMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModeratorMaxAggregateInputType
  }

  export type GetModeratorAggregateType<T extends ModeratorAggregateArgs> = {
        [P in keyof T & keyof AggregateModerator]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModerator[P]>
      : GetScalarType<T[P], AggregateModerator[P]>
  }




  export type ModeratorGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModeratorWhereInput
    orderBy?: ModeratorOrderByWithAggregationInput | ModeratorOrderByWithAggregationInput[]
    by: ModeratorScalarFieldEnum[] | ModeratorScalarFieldEnum
    having?: ModeratorScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModeratorCountAggregateInputType | true
    _min?: ModeratorMinAggregateInputType
    _max?: ModeratorMaxAggregateInputType
  }

  export type ModeratorGroupByOutputType = {
    moderator_id: string
    permissions: JsonValue | null
    appointed_at: Date
    user_id: string
    community_id: string
    _count: ModeratorCountAggregateOutputType | null
    _min: ModeratorMinAggregateOutputType | null
    _max: ModeratorMaxAggregateOutputType | null
  }

  type GetModeratorGroupByPayload<T extends ModeratorGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModeratorGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModeratorGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModeratorGroupByOutputType[P]>
            : GetScalarType<T[P], ModeratorGroupByOutputType[P]>
        }
      >
    >


  export type ModeratorSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    moderator_id?: boolean
    permissions?: boolean
    appointed_at?: boolean
    user_id?: boolean
    community_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["moderator"]>

  export type ModeratorSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    moderator_id?: boolean
    permissions?: boolean
    appointed_at?: boolean
    user_id?: boolean
    community_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["moderator"]>

  export type ModeratorSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    moderator_id?: boolean
    permissions?: boolean
    appointed_at?: boolean
    user_id?: boolean
    community_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["moderator"]>

  export type ModeratorSelectScalar = {
    moderator_id?: boolean
    permissions?: boolean
    appointed_at?: boolean
    user_id?: boolean
    community_id?: boolean
  }

  export type ModeratorOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"moderator_id" | "permissions" | "appointed_at" | "user_id" | "community_id", ExtArgs["result"]["moderator"]>
  export type ModeratorInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }
  export type ModeratorIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }
  export type ModeratorIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    community?: boolean | CommunityDefaultArgs<ExtArgs>
  }

  export type $ModeratorPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Moderator"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      community: Prisma.$CommunityPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      moderator_id: string
      permissions: Prisma.JsonValue | null
      appointed_at: Date
      user_id: string
      community_id: string
    }, ExtArgs["result"]["moderator"]>
    composites: {}
  }

  type ModeratorGetPayload<S extends boolean | null | undefined | ModeratorDefaultArgs> = $Result.GetResult<Prisma.$ModeratorPayload, S>

  type ModeratorCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ModeratorFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ModeratorCountAggregateInputType | true
    }

  export interface ModeratorDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Moderator'], meta: { name: 'Moderator' } }
    /**
     * Find zero or one Moderator that matches the filter.
     * @param {ModeratorFindUniqueArgs} args - Arguments to find a Moderator
     * @example
     * // Get one Moderator
     * const moderator = await prisma.moderator.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModeratorFindUniqueArgs>(args: SelectSubset<T, ModeratorFindUniqueArgs<ExtArgs>>): Prisma__ModeratorClient<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Moderator that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ModeratorFindUniqueOrThrowArgs} args - Arguments to find a Moderator
     * @example
     * // Get one Moderator
     * const moderator = await prisma.moderator.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModeratorFindUniqueOrThrowArgs>(args: SelectSubset<T, ModeratorFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModeratorClient<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Moderator that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModeratorFindFirstArgs} args - Arguments to find a Moderator
     * @example
     * // Get one Moderator
     * const moderator = await prisma.moderator.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModeratorFindFirstArgs>(args?: SelectSubset<T, ModeratorFindFirstArgs<ExtArgs>>): Prisma__ModeratorClient<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Moderator that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModeratorFindFirstOrThrowArgs} args - Arguments to find a Moderator
     * @example
     * // Get one Moderator
     * const moderator = await prisma.moderator.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModeratorFindFirstOrThrowArgs>(args?: SelectSubset<T, ModeratorFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModeratorClient<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Moderators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModeratorFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Moderators
     * const moderators = await prisma.moderator.findMany()
     * 
     * // Get first 10 Moderators
     * const moderators = await prisma.moderator.findMany({ take: 10 })
     * 
     * // Only select the `moderator_id`
     * const moderatorWithModerator_idOnly = await prisma.moderator.findMany({ select: { moderator_id: true } })
     * 
     */
    findMany<T extends ModeratorFindManyArgs>(args?: SelectSubset<T, ModeratorFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Moderator.
     * @param {ModeratorCreateArgs} args - Arguments to create a Moderator.
     * @example
     * // Create one Moderator
     * const Moderator = await prisma.moderator.create({
     *   data: {
     *     // ... data to create a Moderator
     *   }
     * })
     * 
     */
    create<T extends ModeratorCreateArgs>(args: SelectSubset<T, ModeratorCreateArgs<ExtArgs>>): Prisma__ModeratorClient<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Moderators.
     * @param {ModeratorCreateManyArgs} args - Arguments to create many Moderators.
     * @example
     * // Create many Moderators
     * const moderator = await prisma.moderator.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModeratorCreateManyArgs>(args?: SelectSubset<T, ModeratorCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Moderators and returns the data saved in the database.
     * @param {ModeratorCreateManyAndReturnArgs} args - Arguments to create many Moderators.
     * @example
     * // Create many Moderators
     * const moderator = await prisma.moderator.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Moderators and only return the `moderator_id`
     * const moderatorWithModerator_idOnly = await prisma.moderator.createManyAndReturn({
     *   select: { moderator_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModeratorCreateManyAndReturnArgs>(args?: SelectSubset<T, ModeratorCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Moderator.
     * @param {ModeratorDeleteArgs} args - Arguments to delete one Moderator.
     * @example
     * // Delete one Moderator
     * const Moderator = await prisma.moderator.delete({
     *   where: {
     *     // ... filter to delete one Moderator
     *   }
     * })
     * 
     */
    delete<T extends ModeratorDeleteArgs>(args: SelectSubset<T, ModeratorDeleteArgs<ExtArgs>>): Prisma__ModeratorClient<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Moderator.
     * @param {ModeratorUpdateArgs} args - Arguments to update one Moderator.
     * @example
     * // Update one Moderator
     * const moderator = await prisma.moderator.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModeratorUpdateArgs>(args: SelectSubset<T, ModeratorUpdateArgs<ExtArgs>>): Prisma__ModeratorClient<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Moderators.
     * @param {ModeratorDeleteManyArgs} args - Arguments to filter Moderators to delete.
     * @example
     * // Delete a few Moderators
     * const { count } = await prisma.moderator.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModeratorDeleteManyArgs>(args?: SelectSubset<T, ModeratorDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Moderators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModeratorUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Moderators
     * const moderator = await prisma.moderator.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModeratorUpdateManyArgs>(args: SelectSubset<T, ModeratorUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Moderators and returns the data updated in the database.
     * @param {ModeratorUpdateManyAndReturnArgs} args - Arguments to update many Moderators.
     * @example
     * // Update many Moderators
     * const moderator = await prisma.moderator.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Moderators and only return the `moderator_id`
     * const moderatorWithModerator_idOnly = await prisma.moderator.updateManyAndReturn({
     *   select: { moderator_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ModeratorUpdateManyAndReturnArgs>(args: SelectSubset<T, ModeratorUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Moderator.
     * @param {ModeratorUpsertArgs} args - Arguments to update or create a Moderator.
     * @example
     * // Update or create a Moderator
     * const moderator = await prisma.moderator.upsert({
     *   create: {
     *     // ... data to create a Moderator
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Moderator we want to update
     *   }
     * })
     */
    upsert<T extends ModeratorUpsertArgs>(args: SelectSubset<T, ModeratorUpsertArgs<ExtArgs>>): Prisma__ModeratorClient<$Result.GetResult<Prisma.$ModeratorPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Moderators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModeratorCountArgs} args - Arguments to filter Moderators to count.
     * @example
     * // Count the number of Moderators
     * const count = await prisma.moderator.count({
     *   where: {
     *     // ... the filter for the Moderators we want to count
     *   }
     * })
    **/
    count<T extends ModeratorCountArgs>(
      args?: Subset<T, ModeratorCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModeratorCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Moderator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModeratorAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModeratorAggregateArgs>(args: Subset<T, ModeratorAggregateArgs>): Prisma.PrismaPromise<GetModeratorAggregateType<T>>

    /**
     * Group by Moderator.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModeratorGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModeratorGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModeratorGroupByArgs['orderBy'] }
        : { orderBy?: ModeratorGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModeratorGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModeratorGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Moderator model
   */
  readonly fields: ModeratorFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Moderator.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModeratorClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    community<T extends CommunityDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CommunityDefaultArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Moderator model
   */
  interface ModeratorFieldRefs {
    readonly moderator_id: FieldRef<"Moderator", 'String'>
    readonly permissions: FieldRef<"Moderator", 'Json'>
    readonly appointed_at: FieldRef<"Moderator", 'DateTime'>
    readonly user_id: FieldRef<"Moderator", 'String'>
    readonly community_id: FieldRef<"Moderator", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Moderator findUnique
   */
  export type ModeratorFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    /**
     * Filter, which Moderator to fetch.
     */
    where: ModeratorWhereUniqueInput
  }

  /**
   * Moderator findUniqueOrThrow
   */
  export type ModeratorFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    /**
     * Filter, which Moderator to fetch.
     */
    where: ModeratorWhereUniqueInput
  }

  /**
   * Moderator findFirst
   */
  export type ModeratorFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    /**
     * Filter, which Moderator to fetch.
     */
    where?: ModeratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moderators to fetch.
     */
    orderBy?: ModeratorOrderByWithRelationInput | ModeratorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Moderators.
     */
    cursor?: ModeratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moderators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moderators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Moderators.
     */
    distinct?: ModeratorScalarFieldEnum | ModeratorScalarFieldEnum[]
  }

  /**
   * Moderator findFirstOrThrow
   */
  export type ModeratorFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    /**
     * Filter, which Moderator to fetch.
     */
    where?: ModeratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moderators to fetch.
     */
    orderBy?: ModeratorOrderByWithRelationInput | ModeratorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Moderators.
     */
    cursor?: ModeratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moderators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moderators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Moderators.
     */
    distinct?: ModeratorScalarFieldEnum | ModeratorScalarFieldEnum[]
  }

  /**
   * Moderator findMany
   */
  export type ModeratorFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    /**
     * Filter, which Moderators to fetch.
     */
    where?: ModeratorWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Moderators to fetch.
     */
    orderBy?: ModeratorOrderByWithRelationInput | ModeratorOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Moderators.
     */
    cursor?: ModeratorWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Moderators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Moderators.
     */
    skip?: number
    distinct?: ModeratorScalarFieldEnum | ModeratorScalarFieldEnum[]
  }

  /**
   * Moderator create
   */
  export type ModeratorCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    /**
     * The data needed to create a Moderator.
     */
    data: XOR<ModeratorCreateInput, ModeratorUncheckedCreateInput>
  }

  /**
   * Moderator createMany
   */
  export type ModeratorCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Moderators.
     */
    data: ModeratorCreateManyInput | ModeratorCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Moderator createManyAndReturn
   */
  export type ModeratorCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * The data used to create many Moderators.
     */
    data: ModeratorCreateManyInput | ModeratorCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Moderator update
   */
  export type ModeratorUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    /**
     * The data needed to update a Moderator.
     */
    data: XOR<ModeratorUpdateInput, ModeratorUncheckedUpdateInput>
    /**
     * Choose, which Moderator to update.
     */
    where: ModeratorWhereUniqueInput
  }

  /**
   * Moderator updateMany
   */
  export type ModeratorUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Moderators.
     */
    data: XOR<ModeratorUpdateManyMutationInput, ModeratorUncheckedUpdateManyInput>
    /**
     * Filter which Moderators to update
     */
    where?: ModeratorWhereInput
    /**
     * Limit how many Moderators to update.
     */
    limit?: number
  }

  /**
   * Moderator updateManyAndReturn
   */
  export type ModeratorUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * The data used to update Moderators.
     */
    data: XOR<ModeratorUpdateManyMutationInput, ModeratorUncheckedUpdateManyInput>
    /**
     * Filter which Moderators to update
     */
    where?: ModeratorWhereInput
    /**
     * Limit how many Moderators to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Moderator upsert
   */
  export type ModeratorUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    /**
     * The filter to search for the Moderator to update in case it exists.
     */
    where: ModeratorWhereUniqueInput
    /**
     * In case the Moderator found by the `where` argument doesn't exist, create a new Moderator with this data.
     */
    create: XOR<ModeratorCreateInput, ModeratorUncheckedCreateInput>
    /**
     * In case the Moderator was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModeratorUpdateInput, ModeratorUncheckedUpdateInput>
  }

  /**
   * Moderator delete
   */
  export type ModeratorDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
    /**
     * Filter which Moderator to delete.
     */
    where: ModeratorWhereUniqueInput
  }

  /**
   * Moderator deleteMany
   */
  export type ModeratorDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Moderators to delete
     */
    where?: ModeratorWhereInput
    /**
     * Limit how many Moderators to delete.
     */
    limit?: number
  }

  /**
   * Moderator without action
   */
  export type ModeratorDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Moderator
     */
    select?: ModeratorSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Moderator
     */
    omit?: ModeratorOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModeratorInclude<ExtArgs> | null
  }


  /**
   * Model UserUnitEnrollment
   */

  export type AggregateUserUnitEnrollment = {
    _count: UserUnitEnrollmentCountAggregateOutputType | null
    _avg: UserUnitEnrollmentAvgAggregateOutputType | null
    _sum: UserUnitEnrollmentSumAggregateOutputType | null
    _min: UserUnitEnrollmentMinAggregateOutputType | null
    _max: UserUnitEnrollmentMaxAggregateOutputType | null
  }

  export type UserUnitEnrollmentAvgAggregateOutputType = {
    enrollment_year: number | null
  }

  export type UserUnitEnrollmentSumAggregateOutputType = {
    enrollment_year: number | null
  }

  export type UserUnitEnrollmentMinAggregateOutputType = {
    enrollment_id: string | null
    enrollment_year: number | null
    enrollment_semester: string | null
    status: $Enums.EnrollmentStatus | null
    user_id: string | null
    unit_id: string | null
  }

  export type UserUnitEnrollmentMaxAggregateOutputType = {
    enrollment_id: string | null
    enrollment_year: number | null
    enrollment_semester: string | null
    status: $Enums.EnrollmentStatus | null
    user_id: string | null
    unit_id: string | null
  }

  export type UserUnitEnrollmentCountAggregateOutputType = {
    enrollment_id: number
    enrollment_year: number
    enrollment_semester: number
    status: number
    user_id: number
    unit_id: number
    _all: number
  }


  export type UserUnitEnrollmentAvgAggregateInputType = {
    enrollment_year?: true
  }

  export type UserUnitEnrollmentSumAggregateInputType = {
    enrollment_year?: true
  }

  export type UserUnitEnrollmentMinAggregateInputType = {
    enrollment_id?: true
    enrollment_year?: true
    enrollment_semester?: true
    status?: true
    user_id?: true
    unit_id?: true
  }

  export type UserUnitEnrollmentMaxAggregateInputType = {
    enrollment_id?: true
    enrollment_year?: true
    enrollment_semester?: true
    status?: true
    user_id?: true
    unit_id?: true
  }

  export type UserUnitEnrollmentCountAggregateInputType = {
    enrollment_id?: true
    enrollment_year?: true
    enrollment_semester?: true
    status?: true
    user_id?: true
    unit_id?: true
    _all?: true
  }

  export type UserUnitEnrollmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserUnitEnrollment to aggregate.
     */
    where?: UserUnitEnrollmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserUnitEnrollments to fetch.
     */
    orderBy?: UserUnitEnrollmentOrderByWithRelationInput | UserUnitEnrollmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserUnitEnrollmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserUnitEnrollments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserUnitEnrollments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserUnitEnrollments
    **/
    _count?: true | UserUnitEnrollmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserUnitEnrollmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserUnitEnrollmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserUnitEnrollmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserUnitEnrollmentMaxAggregateInputType
  }

  export type GetUserUnitEnrollmentAggregateType<T extends UserUnitEnrollmentAggregateArgs> = {
        [P in keyof T & keyof AggregateUserUnitEnrollment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserUnitEnrollment[P]>
      : GetScalarType<T[P], AggregateUserUnitEnrollment[P]>
  }




  export type UserUnitEnrollmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserUnitEnrollmentWhereInput
    orderBy?: UserUnitEnrollmentOrderByWithAggregationInput | UserUnitEnrollmentOrderByWithAggregationInput[]
    by: UserUnitEnrollmentScalarFieldEnum[] | UserUnitEnrollmentScalarFieldEnum
    having?: UserUnitEnrollmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserUnitEnrollmentCountAggregateInputType | true
    _avg?: UserUnitEnrollmentAvgAggregateInputType
    _sum?: UserUnitEnrollmentSumAggregateInputType
    _min?: UserUnitEnrollmentMinAggregateInputType
    _max?: UserUnitEnrollmentMaxAggregateInputType
  }

  export type UserUnitEnrollmentGroupByOutputType = {
    enrollment_id: string
    enrollment_year: number
    enrollment_semester: string
    status: $Enums.EnrollmentStatus
    user_id: string
    unit_id: string
    _count: UserUnitEnrollmentCountAggregateOutputType | null
    _avg: UserUnitEnrollmentAvgAggregateOutputType | null
    _sum: UserUnitEnrollmentSumAggregateOutputType | null
    _min: UserUnitEnrollmentMinAggregateOutputType | null
    _max: UserUnitEnrollmentMaxAggregateOutputType | null
  }

  type GetUserUnitEnrollmentGroupByPayload<T extends UserUnitEnrollmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserUnitEnrollmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserUnitEnrollmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserUnitEnrollmentGroupByOutputType[P]>
            : GetScalarType<T[P], UserUnitEnrollmentGroupByOutputType[P]>
        }
      >
    >


  export type UserUnitEnrollmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    enrollment_id?: boolean
    enrollment_year?: boolean
    enrollment_semester?: boolean
    status?: boolean
    user_id?: boolean
    unit_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | UnitDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userUnitEnrollment"]>

  export type UserUnitEnrollmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    enrollment_id?: boolean
    enrollment_year?: boolean
    enrollment_semester?: boolean
    status?: boolean
    user_id?: boolean
    unit_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | UnitDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userUnitEnrollment"]>

  export type UserUnitEnrollmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    enrollment_id?: boolean
    enrollment_year?: boolean
    enrollment_semester?: boolean
    status?: boolean
    user_id?: boolean
    unit_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | UnitDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userUnitEnrollment"]>

  export type UserUnitEnrollmentSelectScalar = {
    enrollment_id?: boolean
    enrollment_year?: boolean
    enrollment_semester?: boolean
    status?: boolean
    user_id?: boolean
    unit_id?: boolean
  }

  export type UserUnitEnrollmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"enrollment_id" | "enrollment_year" | "enrollment_semester" | "status" | "user_id" | "unit_id", ExtArgs["result"]["userUnitEnrollment"]>
  export type UserUnitEnrollmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | UnitDefaultArgs<ExtArgs>
  }
  export type UserUnitEnrollmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | UnitDefaultArgs<ExtArgs>
  }
  export type UserUnitEnrollmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    unit?: boolean | UnitDefaultArgs<ExtArgs>
  }

  export type $UserUnitEnrollmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserUnitEnrollment"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      unit: Prisma.$UnitPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      enrollment_id: string
      enrollment_year: number
      enrollment_semester: string
      status: $Enums.EnrollmentStatus
      user_id: string
      unit_id: string
    }, ExtArgs["result"]["userUnitEnrollment"]>
    composites: {}
  }

  type UserUnitEnrollmentGetPayload<S extends boolean | null | undefined | UserUnitEnrollmentDefaultArgs> = $Result.GetResult<Prisma.$UserUnitEnrollmentPayload, S>

  type UserUnitEnrollmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserUnitEnrollmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserUnitEnrollmentCountAggregateInputType | true
    }

  export interface UserUnitEnrollmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserUnitEnrollment'], meta: { name: 'UserUnitEnrollment' } }
    /**
     * Find zero or one UserUnitEnrollment that matches the filter.
     * @param {UserUnitEnrollmentFindUniqueArgs} args - Arguments to find a UserUnitEnrollment
     * @example
     * // Get one UserUnitEnrollment
     * const userUnitEnrollment = await prisma.userUnitEnrollment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserUnitEnrollmentFindUniqueArgs>(args: SelectSubset<T, UserUnitEnrollmentFindUniqueArgs<ExtArgs>>): Prisma__UserUnitEnrollmentClient<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserUnitEnrollment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserUnitEnrollmentFindUniqueOrThrowArgs} args - Arguments to find a UserUnitEnrollment
     * @example
     * // Get one UserUnitEnrollment
     * const userUnitEnrollment = await prisma.userUnitEnrollment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserUnitEnrollmentFindUniqueOrThrowArgs>(args: SelectSubset<T, UserUnitEnrollmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserUnitEnrollmentClient<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserUnitEnrollment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUnitEnrollmentFindFirstArgs} args - Arguments to find a UserUnitEnrollment
     * @example
     * // Get one UserUnitEnrollment
     * const userUnitEnrollment = await prisma.userUnitEnrollment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserUnitEnrollmentFindFirstArgs>(args?: SelectSubset<T, UserUnitEnrollmentFindFirstArgs<ExtArgs>>): Prisma__UserUnitEnrollmentClient<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserUnitEnrollment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUnitEnrollmentFindFirstOrThrowArgs} args - Arguments to find a UserUnitEnrollment
     * @example
     * // Get one UserUnitEnrollment
     * const userUnitEnrollment = await prisma.userUnitEnrollment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserUnitEnrollmentFindFirstOrThrowArgs>(args?: SelectSubset<T, UserUnitEnrollmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserUnitEnrollmentClient<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserUnitEnrollments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUnitEnrollmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserUnitEnrollments
     * const userUnitEnrollments = await prisma.userUnitEnrollment.findMany()
     * 
     * // Get first 10 UserUnitEnrollments
     * const userUnitEnrollments = await prisma.userUnitEnrollment.findMany({ take: 10 })
     * 
     * // Only select the `enrollment_id`
     * const userUnitEnrollmentWithEnrollment_idOnly = await prisma.userUnitEnrollment.findMany({ select: { enrollment_id: true } })
     * 
     */
    findMany<T extends UserUnitEnrollmentFindManyArgs>(args?: SelectSubset<T, UserUnitEnrollmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserUnitEnrollment.
     * @param {UserUnitEnrollmentCreateArgs} args - Arguments to create a UserUnitEnrollment.
     * @example
     * // Create one UserUnitEnrollment
     * const UserUnitEnrollment = await prisma.userUnitEnrollment.create({
     *   data: {
     *     // ... data to create a UserUnitEnrollment
     *   }
     * })
     * 
     */
    create<T extends UserUnitEnrollmentCreateArgs>(args: SelectSubset<T, UserUnitEnrollmentCreateArgs<ExtArgs>>): Prisma__UserUnitEnrollmentClient<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserUnitEnrollments.
     * @param {UserUnitEnrollmentCreateManyArgs} args - Arguments to create many UserUnitEnrollments.
     * @example
     * // Create many UserUnitEnrollments
     * const userUnitEnrollment = await prisma.userUnitEnrollment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserUnitEnrollmentCreateManyArgs>(args?: SelectSubset<T, UserUnitEnrollmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserUnitEnrollments and returns the data saved in the database.
     * @param {UserUnitEnrollmentCreateManyAndReturnArgs} args - Arguments to create many UserUnitEnrollments.
     * @example
     * // Create many UserUnitEnrollments
     * const userUnitEnrollment = await prisma.userUnitEnrollment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserUnitEnrollments and only return the `enrollment_id`
     * const userUnitEnrollmentWithEnrollment_idOnly = await prisma.userUnitEnrollment.createManyAndReturn({
     *   select: { enrollment_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserUnitEnrollmentCreateManyAndReturnArgs>(args?: SelectSubset<T, UserUnitEnrollmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserUnitEnrollment.
     * @param {UserUnitEnrollmentDeleteArgs} args - Arguments to delete one UserUnitEnrollment.
     * @example
     * // Delete one UserUnitEnrollment
     * const UserUnitEnrollment = await prisma.userUnitEnrollment.delete({
     *   where: {
     *     // ... filter to delete one UserUnitEnrollment
     *   }
     * })
     * 
     */
    delete<T extends UserUnitEnrollmentDeleteArgs>(args: SelectSubset<T, UserUnitEnrollmentDeleteArgs<ExtArgs>>): Prisma__UserUnitEnrollmentClient<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserUnitEnrollment.
     * @param {UserUnitEnrollmentUpdateArgs} args - Arguments to update one UserUnitEnrollment.
     * @example
     * // Update one UserUnitEnrollment
     * const userUnitEnrollment = await prisma.userUnitEnrollment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUnitEnrollmentUpdateArgs>(args: SelectSubset<T, UserUnitEnrollmentUpdateArgs<ExtArgs>>): Prisma__UserUnitEnrollmentClient<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserUnitEnrollments.
     * @param {UserUnitEnrollmentDeleteManyArgs} args - Arguments to filter UserUnitEnrollments to delete.
     * @example
     * // Delete a few UserUnitEnrollments
     * const { count } = await prisma.userUnitEnrollment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserUnitEnrollmentDeleteManyArgs>(args?: SelectSubset<T, UserUnitEnrollmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserUnitEnrollments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUnitEnrollmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserUnitEnrollments
     * const userUnitEnrollment = await prisma.userUnitEnrollment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUnitEnrollmentUpdateManyArgs>(args: SelectSubset<T, UserUnitEnrollmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserUnitEnrollments and returns the data updated in the database.
     * @param {UserUnitEnrollmentUpdateManyAndReturnArgs} args - Arguments to update many UserUnitEnrollments.
     * @example
     * // Update many UserUnitEnrollments
     * const userUnitEnrollment = await prisma.userUnitEnrollment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserUnitEnrollments and only return the `enrollment_id`
     * const userUnitEnrollmentWithEnrollment_idOnly = await prisma.userUnitEnrollment.updateManyAndReturn({
     *   select: { enrollment_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUnitEnrollmentUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUnitEnrollmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserUnitEnrollment.
     * @param {UserUnitEnrollmentUpsertArgs} args - Arguments to update or create a UserUnitEnrollment.
     * @example
     * // Update or create a UserUnitEnrollment
     * const userUnitEnrollment = await prisma.userUnitEnrollment.upsert({
     *   create: {
     *     // ... data to create a UserUnitEnrollment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserUnitEnrollment we want to update
     *   }
     * })
     */
    upsert<T extends UserUnitEnrollmentUpsertArgs>(args: SelectSubset<T, UserUnitEnrollmentUpsertArgs<ExtArgs>>): Prisma__UserUnitEnrollmentClient<$Result.GetResult<Prisma.$UserUnitEnrollmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserUnitEnrollments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUnitEnrollmentCountArgs} args - Arguments to filter UserUnitEnrollments to count.
     * @example
     * // Count the number of UserUnitEnrollments
     * const count = await prisma.userUnitEnrollment.count({
     *   where: {
     *     // ... the filter for the UserUnitEnrollments we want to count
     *   }
     * })
    **/
    count<T extends UserUnitEnrollmentCountArgs>(
      args?: Subset<T, UserUnitEnrollmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserUnitEnrollmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserUnitEnrollment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUnitEnrollmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserUnitEnrollmentAggregateArgs>(args: Subset<T, UserUnitEnrollmentAggregateArgs>): Prisma.PrismaPromise<GetUserUnitEnrollmentAggregateType<T>>

    /**
     * Group by UserUnitEnrollment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUnitEnrollmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserUnitEnrollmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserUnitEnrollmentGroupByArgs['orderBy'] }
        : { orderBy?: UserUnitEnrollmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserUnitEnrollmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserUnitEnrollmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserUnitEnrollment model
   */
  readonly fields: UserUnitEnrollmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserUnitEnrollment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserUnitEnrollmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    unit<T extends UnitDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UnitDefaultArgs<ExtArgs>>): Prisma__UnitClient<$Result.GetResult<Prisma.$UnitPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserUnitEnrollment model
   */
  interface UserUnitEnrollmentFieldRefs {
    readonly enrollment_id: FieldRef<"UserUnitEnrollment", 'String'>
    readonly enrollment_year: FieldRef<"UserUnitEnrollment", 'Int'>
    readonly enrollment_semester: FieldRef<"UserUnitEnrollment", 'String'>
    readonly status: FieldRef<"UserUnitEnrollment", 'EnrollmentStatus'>
    readonly user_id: FieldRef<"UserUnitEnrollment", 'String'>
    readonly unit_id: FieldRef<"UserUnitEnrollment", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserUnitEnrollment findUnique
   */
  export type UserUnitEnrollmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which UserUnitEnrollment to fetch.
     */
    where: UserUnitEnrollmentWhereUniqueInput
  }

  /**
   * UserUnitEnrollment findUniqueOrThrow
   */
  export type UserUnitEnrollmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which UserUnitEnrollment to fetch.
     */
    where: UserUnitEnrollmentWhereUniqueInput
  }

  /**
   * UserUnitEnrollment findFirst
   */
  export type UserUnitEnrollmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which UserUnitEnrollment to fetch.
     */
    where?: UserUnitEnrollmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserUnitEnrollments to fetch.
     */
    orderBy?: UserUnitEnrollmentOrderByWithRelationInput | UserUnitEnrollmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserUnitEnrollments.
     */
    cursor?: UserUnitEnrollmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserUnitEnrollments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserUnitEnrollments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserUnitEnrollments.
     */
    distinct?: UserUnitEnrollmentScalarFieldEnum | UserUnitEnrollmentScalarFieldEnum[]
  }

  /**
   * UserUnitEnrollment findFirstOrThrow
   */
  export type UserUnitEnrollmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which UserUnitEnrollment to fetch.
     */
    where?: UserUnitEnrollmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserUnitEnrollments to fetch.
     */
    orderBy?: UserUnitEnrollmentOrderByWithRelationInput | UserUnitEnrollmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserUnitEnrollments.
     */
    cursor?: UserUnitEnrollmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserUnitEnrollments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserUnitEnrollments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserUnitEnrollments.
     */
    distinct?: UserUnitEnrollmentScalarFieldEnum | UserUnitEnrollmentScalarFieldEnum[]
  }

  /**
   * UserUnitEnrollment findMany
   */
  export type UserUnitEnrollmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    /**
     * Filter, which UserUnitEnrollments to fetch.
     */
    where?: UserUnitEnrollmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserUnitEnrollments to fetch.
     */
    orderBy?: UserUnitEnrollmentOrderByWithRelationInput | UserUnitEnrollmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserUnitEnrollments.
     */
    cursor?: UserUnitEnrollmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserUnitEnrollments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserUnitEnrollments.
     */
    skip?: number
    distinct?: UserUnitEnrollmentScalarFieldEnum | UserUnitEnrollmentScalarFieldEnum[]
  }

  /**
   * UserUnitEnrollment create
   */
  export type UserUnitEnrollmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    /**
     * The data needed to create a UserUnitEnrollment.
     */
    data: XOR<UserUnitEnrollmentCreateInput, UserUnitEnrollmentUncheckedCreateInput>
  }

  /**
   * UserUnitEnrollment createMany
   */
  export type UserUnitEnrollmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserUnitEnrollments.
     */
    data: UserUnitEnrollmentCreateManyInput | UserUnitEnrollmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserUnitEnrollment createManyAndReturn
   */
  export type UserUnitEnrollmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * The data used to create many UserUnitEnrollments.
     */
    data: UserUnitEnrollmentCreateManyInput | UserUnitEnrollmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserUnitEnrollment update
   */
  export type UserUnitEnrollmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    /**
     * The data needed to update a UserUnitEnrollment.
     */
    data: XOR<UserUnitEnrollmentUpdateInput, UserUnitEnrollmentUncheckedUpdateInput>
    /**
     * Choose, which UserUnitEnrollment to update.
     */
    where: UserUnitEnrollmentWhereUniqueInput
  }

  /**
   * UserUnitEnrollment updateMany
   */
  export type UserUnitEnrollmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserUnitEnrollments.
     */
    data: XOR<UserUnitEnrollmentUpdateManyMutationInput, UserUnitEnrollmentUncheckedUpdateManyInput>
    /**
     * Filter which UserUnitEnrollments to update
     */
    where?: UserUnitEnrollmentWhereInput
    /**
     * Limit how many UserUnitEnrollments to update.
     */
    limit?: number
  }

  /**
   * UserUnitEnrollment updateManyAndReturn
   */
  export type UserUnitEnrollmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * The data used to update UserUnitEnrollments.
     */
    data: XOR<UserUnitEnrollmentUpdateManyMutationInput, UserUnitEnrollmentUncheckedUpdateManyInput>
    /**
     * Filter which UserUnitEnrollments to update
     */
    where?: UserUnitEnrollmentWhereInput
    /**
     * Limit how many UserUnitEnrollments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserUnitEnrollment upsert
   */
  export type UserUnitEnrollmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    /**
     * The filter to search for the UserUnitEnrollment to update in case it exists.
     */
    where: UserUnitEnrollmentWhereUniqueInput
    /**
     * In case the UserUnitEnrollment found by the `where` argument doesn't exist, create a new UserUnitEnrollment with this data.
     */
    create: XOR<UserUnitEnrollmentCreateInput, UserUnitEnrollmentUncheckedCreateInput>
    /**
     * In case the UserUnitEnrollment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUnitEnrollmentUpdateInput, UserUnitEnrollmentUncheckedUpdateInput>
  }

  /**
   * UserUnitEnrollment delete
   */
  export type UserUnitEnrollmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
    /**
     * Filter which UserUnitEnrollment to delete.
     */
    where: UserUnitEnrollmentWhereUniqueInput
  }

  /**
   * UserUnitEnrollment deleteMany
   */
  export type UserUnitEnrollmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserUnitEnrollments to delete
     */
    where?: UserUnitEnrollmentWhereInput
    /**
     * Limit how many UserUnitEnrollments to delete.
     */
    limit?: number
  }

  /**
   * UserUnitEnrollment without action
   */
  export type UserUnitEnrollmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserUnitEnrollment
     */
    select?: UserUnitEnrollmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserUnitEnrollment
     */
    omit?: UserUnitEnrollmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserUnitEnrollmentInclude<ExtArgs> | null
  }


  /**
   * Model SavedContent
   */

  export type AggregateSavedContent = {
    _count: SavedContentCountAggregateOutputType | null
    _min: SavedContentMinAggregateOutputType | null
    _max: SavedContentMaxAggregateOutputType | null
  }

  export type SavedContentMinAggregateOutputType = {
    saved_id: string | null
    saved_at: Date | null
    user_id: string | null
    post_id: string | null
    comment_id: string | null
  }

  export type SavedContentMaxAggregateOutputType = {
    saved_id: string | null
    saved_at: Date | null
    user_id: string | null
    post_id: string | null
    comment_id: string | null
  }

  export type SavedContentCountAggregateOutputType = {
    saved_id: number
    saved_at: number
    user_id: number
    post_id: number
    comment_id: number
    _all: number
  }


  export type SavedContentMinAggregateInputType = {
    saved_id?: true
    saved_at?: true
    user_id?: true
    post_id?: true
    comment_id?: true
  }

  export type SavedContentMaxAggregateInputType = {
    saved_id?: true
    saved_at?: true
    user_id?: true
    post_id?: true
    comment_id?: true
  }

  export type SavedContentCountAggregateInputType = {
    saved_id?: true
    saved_at?: true
    user_id?: true
    post_id?: true
    comment_id?: true
    _all?: true
  }

  export type SavedContentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SavedContent to aggregate.
     */
    where?: SavedContentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SavedContents to fetch.
     */
    orderBy?: SavedContentOrderByWithRelationInput | SavedContentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SavedContentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SavedContents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SavedContents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SavedContents
    **/
    _count?: true | SavedContentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SavedContentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SavedContentMaxAggregateInputType
  }

  export type GetSavedContentAggregateType<T extends SavedContentAggregateArgs> = {
        [P in keyof T & keyof AggregateSavedContent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSavedContent[P]>
      : GetScalarType<T[P], AggregateSavedContent[P]>
  }




  export type SavedContentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SavedContentWhereInput
    orderBy?: SavedContentOrderByWithAggregationInput | SavedContentOrderByWithAggregationInput[]
    by: SavedContentScalarFieldEnum[] | SavedContentScalarFieldEnum
    having?: SavedContentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SavedContentCountAggregateInputType | true
    _min?: SavedContentMinAggregateInputType
    _max?: SavedContentMaxAggregateInputType
  }

  export type SavedContentGroupByOutputType = {
    saved_id: string
    saved_at: Date
    user_id: string
    post_id: string | null
    comment_id: string | null
    _count: SavedContentCountAggregateOutputType | null
    _min: SavedContentMinAggregateOutputType | null
    _max: SavedContentMaxAggregateOutputType | null
  }

  type GetSavedContentGroupByPayload<T extends SavedContentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SavedContentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SavedContentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SavedContentGroupByOutputType[P]>
            : GetScalarType<T[P], SavedContentGroupByOutputType[P]>
        }
      >
    >


  export type SavedContentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    saved_id?: boolean
    saved_at?: boolean
    user_id?: boolean
    post_id?: boolean
    comment_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | SavedContent$postArgs<ExtArgs>
    comment?: boolean | SavedContent$commentArgs<ExtArgs>
  }, ExtArgs["result"]["savedContent"]>

  export type SavedContentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    saved_id?: boolean
    saved_at?: boolean
    user_id?: boolean
    post_id?: boolean
    comment_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | SavedContent$postArgs<ExtArgs>
    comment?: boolean | SavedContent$commentArgs<ExtArgs>
  }, ExtArgs["result"]["savedContent"]>

  export type SavedContentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    saved_id?: boolean
    saved_at?: boolean
    user_id?: boolean
    post_id?: boolean
    comment_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | SavedContent$postArgs<ExtArgs>
    comment?: boolean | SavedContent$commentArgs<ExtArgs>
  }, ExtArgs["result"]["savedContent"]>

  export type SavedContentSelectScalar = {
    saved_id?: boolean
    saved_at?: boolean
    user_id?: boolean
    post_id?: boolean
    comment_id?: boolean
  }

  export type SavedContentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"saved_id" | "saved_at" | "user_id" | "post_id" | "comment_id", ExtArgs["result"]["savedContent"]>
  export type SavedContentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | SavedContent$postArgs<ExtArgs>
    comment?: boolean | SavedContent$commentArgs<ExtArgs>
  }
  export type SavedContentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | SavedContent$postArgs<ExtArgs>
    comment?: boolean | SavedContent$commentArgs<ExtArgs>
  }
  export type SavedContentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    post?: boolean | SavedContent$postArgs<ExtArgs>
    comment?: boolean | SavedContent$commentArgs<ExtArgs>
  }

  export type $SavedContentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SavedContent"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      post: Prisma.$PostPayload<ExtArgs> | null
      comment: Prisma.$CommentPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      saved_id: string
      saved_at: Date
      user_id: string
      post_id: string | null
      comment_id: string | null
    }, ExtArgs["result"]["savedContent"]>
    composites: {}
  }

  type SavedContentGetPayload<S extends boolean | null | undefined | SavedContentDefaultArgs> = $Result.GetResult<Prisma.$SavedContentPayload, S>

  type SavedContentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SavedContentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SavedContentCountAggregateInputType | true
    }

  export interface SavedContentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SavedContent'], meta: { name: 'SavedContent' } }
    /**
     * Find zero or one SavedContent that matches the filter.
     * @param {SavedContentFindUniqueArgs} args - Arguments to find a SavedContent
     * @example
     * // Get one SavedContent
     * const savedContent = await prisma.savedContent.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SavedContentFindUniqueArgs>(args: SelectSubset<T, SavedContentFindUniqueArgs<ExtArgs>>): Prisma__SavedContentClient<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SavedContent that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SavedContentFindUniqueOrThrowArgs} args - Arguments to find a SavedContent
     * @example
     * // Get one SavedContent
     * const savedContent = await prisma.savedContent.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SavedContentFindUniqueOrThrowArgs>(args: SelectSubset<T, SavedContentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SavedContentClient<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SavedContent that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedContentFindFirstArgs} args - Arguments to find a SavedContent
     * @example
     * // Get one SavedContent
     * const savedContent = await prisma.savedContent.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SavedContentFindFirstArgs>(args?: SelectSubset<T, SavedContentFindFirstArgs<ExtArgs>>): Prisma__SavedContentClient<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SavedContent that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedContentFindFirstOrThrowArgs} args - Arguments to find a SavedContent
     * @example
     * // Get one SavedContent
     * const savedContent = await prisma.savedContent.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SavedContentFindFirstOrThrowArgs>(args?: SelectSubset<T, SavedContentFindFirstOrThrowArgs<ExtArgs>>): Prisma__SavedContentClient<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SavedContents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedContentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SavedContents
     * const savedContents = await prisma.savedContent.findMany()
     * 
     * // Get first 10 SavedContents
     * const savedContents = await prisma.savedContent.findMany({ take: 10 })
     * 
     * // Only select the `saved_id`
     * const savedContentWithSaved_idOnly = await prisma.savedContent.findMany({ select: { saved_id: true } })
     * 
     */
    findMany<T extends SavedContentFindManyArgs>(args?: SelectSubset<T, SavedContentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SavedContent.
     * @param {SavedContentCreateArgs} args - Arguments to create a SavedContent.
     * @example
     * // Create one SavedContent
     * const SavedContent = await prisma.savedContent.create({
     *   data: {
     *     // ... data to create a SavedContent
     *   }
     * })
     * 
     */
    create<T extends SavedContentCreateArgs>(args: SelectSubset<T, SavedContentCreateArgs<ExtArgs>>): Prisma__SavedContentClient<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SavedContents.
     * @param {SavedContentCreateManyArgs} args - Arguments to create many SavedContents.
     * @example
     * // Create many SavedContents
     * const savedContent = await prisma.savedContent.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SavedContentCreateManyArgs>(args?: SelectSubset<T, SavedContentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SavedContents and returns the data saved in the database.
     * @param {SavedContentCreateManyAndReturnArgs} args - Arguments to create many SavedContents.
     * @example
     * // Create many SavedContents
     * const savedContent = await prisma.savedContent.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SavedContents and only return the `saved_id`
     * const savedContentWithSaved_idOnly = await prisma.savedContent.createManyAndReturn({
     *   select: { saved_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SavedContentCreateManyAndReturnArgs>(args?: SelectSubset<T, SavedContentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SavedContent.
     * @param {SavedContentDeleteArgs} args - Arguments to delete one SavedContent.
     * @example
     * // Delete one SavedContent
     * const SavedContent = await prisma.savedContent.delete({
     *   where: {
     *     // ... filter to delete one SavedContent
     *   }
     * })
     * 
     */
    delete<T extends SavedContentDeleteArgs>(args: SelectSubset<T, SavedContentDeleteArgs<ExtArgs>>): Prisma__SavedContentClient<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SavedContent.
     * @param {SavedContentUpdateArgs} args - Arguments to update one SavedContent.
     * @example
     * // Update one SavedContent
     * const savedContent = await prisma.savedContent.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SavedContentUpdateArgs>(args: SelectSubset<T, SavedContentUpdateArgs<ExtArgs>>): Prisma__SavedContentClient<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SavedContents.
     * @param {SavedContentDeleteManyArgs} args - Arguments to filter SavedContents to delete.
     * @example
     * // Delete a few SavedContents
     * const { count } = await prisma.savedContent.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SavedContentDeleteManyArgs>(args?: SelectSubset<T, SavedContentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SavedContents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedContentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SavedContents
     * const savedContent = await prisma.savedContent.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SavedContentUpdateManyArgs>(args: SelectSubset<T, SavedContentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SavedContents and returns the data updated in the database.
     * @param {SavedContentUpdateManyAndReturnArgs} args - Arguments to update many SavedContents.
     * @example
     * // Update many SavedContents
     * const savedContent = await prisma.savedContent.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SavedContents and only return the `saved_id`
     * const savedContentWithSaved_idOnly = await prisma.savedContent.updateManyAndReturn({
     *   select: { saved_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SavedContentUpdateManyAndReturnArgs>(args: SelectSubset<T, SavedContentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SavedContent.
     * @param {SavedContentUpsertArgs} args - Arguments to update or create a SavedContent.
     * @example
     * // Update or create a SavedContent
     * const savedContent = await prisma.savedContent.upsert({
     *   create: {
     *     // ... data to create a SavedContent
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SavedContent we want to update
     *   }
     * })
     */
    upsert<T extends SavedContentUpsertArgs>(args: SelectSubset<T, SavedContentUpsertArgs<ExtArgs>>): Prisma__SavedContentClient<$Result.GetResult<Prisma.$SavedContentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SavedContents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedContentCountArgs} args - Arguments to filter SavedContents to count.
     * @example
     * // Count the number of SavedContents
     * const count = await prisma.savedContent.count({
     *   where: {
     *     // ... the filter for the SavedContents we want to count
     *   }
     * })
    **/
    count<T extends SavedContentCountArgs>(
      args?: Subset<T, SavedContentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SavedContentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SavedContent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedContentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SavedContentAggregateArgs>(args: Subset<T, SavedContentAggregateArgs>): Prisma.PrismaPromise<GetSavedContentAggregateType<T>>

    /**
     * Group by SavedContent.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SavedContentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SavedContentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SavedContentGroupByArgs['orderBy'] }
        : { orderBy?: SavedContentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SavedContentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSavedContentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SavedContent model
   */
  readonly fields: SavedContentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SavedContent.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SavedContentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    post<T extends SavedContent$postArgs<ExtArgs> = {}>(args?: Subset<T, SavedContent$postArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    comment<T extends SavedContent$commentArgs<ExtArgs> = {}>(args?: Subset<T, SavedContent$commentArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SavedContent model
   */
  interface SavedContentFieldRefs {
    readonly saved_id: FieldRef<"SavedContent", 'String'>
    readonly saved_at: FieldRef<"SavedContent", 'DateTime'>
    readonly user_id: FieldRef<"SavedContent", 'String'>
    readonly post_id: FieldRef<"SavedContent", 'String'>
    readonly comment_id: FieldRef<"SavedContent", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SavedContent findUnique
   */
  export type SavedContentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    /**
     * Filter, which SavedContent to fetch.
     */
    where: SavedContentWhereUniqueInput
  }

  /**
   * SavedContent findUniqueOrThrow
   */
  export type SavedContentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    /**
     * Filter, which SavedContent to fetch.
     */
    where: SavedContentWhereUniqueInput
  }

  /**
   * SavedContent findFirst
   */
  export type SavedContentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    /**
     * Filter, which SavedContent to fetch.
     */
    where?: SavedContentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SavedContents to fetch.
     */
    orderBy?: SavedContentOrderByWithRelationInput | SavedContentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SavedContents.
     */
    cursor?: SavedContentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SavedContents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SavedContents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SavedContents.
     */
    distinct?: SavedContentScalarFieldEnum | SavedContentScalarFieldEnum[]
  }

  /**
   * SavedContent findFirstOrThrow
   */
  export type SavedContentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    /**
     * Filter, which SavedContent to fetch.
     */
    where?: SavedContentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SavedContents to fetch.
     */
    orderBy?: SavedContentOrderByWithRelationInput | SavedContentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SavedContents.
     */
    cursor?: SavedContentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SavedContents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SavedContents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SavedContents.
     */
    distinct?: SavedContentScalarFieldEnum | SavedContentScalarFieldEnum[]
  }

  /**
   * SavedContent findMany
   */
  export type SavedContentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    /**
     * Filter, which SavedContents to fetch.
     */
    where?: SavedContentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SavedContents to fetch.
     */
    orderBy?: SavedContentOrderByWithRelationInput | SavedContentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SavedContents.
     */
    cursor?: SavedContentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SavedContents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SavedContents.
     */
    skip?: number
    distinct?: SavedContentScalarFieldEnum | SavedContentScalarFieldEnum[]
  }

  /**
   * SavedContent create
   */
  export type SavedContentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    /**
     * The data needed to create a SavedContent.
     */
    data: XOR<SavedContentCreateInput, SavedContentUncheckedCreateInput>
  }

  /**
   * SavedContent createMany
   */
  export type SavedContentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SavedContents.
     */
    data: SavedContentCreateManyInput | SavedContentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SavedContent createManyAndReturn
   */
  export type SavedContentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * The data used to create many SavedContents.
     */
    data: SavedContentCreateManyInput | SavedContentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SavedContent update
   */
  export type SavedContentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    /**
     * The data needed to update a SavedContent.
     */
    data: XOR<SavedContentUpdateInput, SavedContentUncheckedUpdateInput>
    /**
     * Choose, which SavedContent to update.
     */
    where: SavedContentWhereUniqueInput
  }

  /**
   * SavedContent updateMany
   */
  export type SavedContentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SavedContents.
     */
    data: XOR<SavedContentUpdateManyMutationInput, SavedContentUncheckedUpdateManyInput>
    /**
     * Filter which SavedContents to update
     */
    where?: SavedContentWhereInput
    /**
     * Limit how many SavedContents to update.
     */
    limit?: number
  }

  /**
   * SavedContent updateManyAndReturn
   */
  export type SavedContentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * The data used to update SavedContents.
     */
    data: XOR<SavedContentUpdateManyMutationInput, SavedContentUncheckedUpdateManyInput>
    /**
     * Filter which SavedContents to update
     */
    where?: SavedContentWhereInput
    /**
     * Limit how many SavedContents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SavedContent upsert
   */
  export type SavedContentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    /**
     * The filter to search for the SavedContent to update in case it exists.
     */
    where: SavedContentWhereUniqueInput
    /**
     * In case the SavedContent found by the `where` argument doesn't exist, create a new SavedContent with this data.
     */
    create: XOR<SavedContentCreateInput, SavedContentUncheckedCreateInput>
    /**
     * In case the SavedContent was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SavedContentUpdateInput, SavedContentUncheckedUpdateInput>
  }

  /**
   * SavedContent delete
   */
  export type SavedContentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
    /**
     * Filter which SavedContent to delete.
     */
    where: SavedContentWhereUniqueInput
  }

  /**
   * SavedContent deleteMany
   */
  export type SavedContentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SavedContents to delete
     */
    where?: SavedContentWhereInput
    /**
     * Limit how many SavedContents to delete.
     */
    limit?: number
  }

  /**
   * SavedContent.post
   */
  export type SavedContent$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
  }

  /**
   * SavedContent.comment
   */
  export type SavedContent$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
  }

  /**
   * SavedContent without action
   */
  export type SavedContentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SavedContent
     */
    select?: SavedContentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SavedContent
     */
    omit?: SavedContentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SavedContentInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    notification_id: string | null
    type: $Enums.NotificationType | null
    content_preview: string | null
    is_read: boolean | null
    created_at: Date | null
    recipient_user_id: string | null
    sender_user_id: string | null
    related_post_id: string | null
    related_comment_id: string | null
    related_community_id: string | null
  }

  export type NotificationMaxAggregateOutputType = {
    notification_id: string | null
    type: $Enums.NotificationType | null
    content_preview: string | null
    is_read: boolean | null
    created_at: Date | null
    recipient_user_id: string | null
    sender_user_id: string | null
    related_post_id: string | null
    related_comment_id: string | null
    related_community_id: string | null
  }

  export type NotificationCountAggregateOutputType = {
    notification_id: number
    type: number
    content_preview: number
    is_read: number
    created_at: number
    recipient_user_id: number
    sender_user_id: number
    related_post_id: number
    related_comment_id: number
    related_community_id: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    notification_id?: true
    type?: true
    content_preview?: true
    is_read?: true
    created_at?: true
    recipient_user_id?: true
    sender_user_id?: true
    related_post_id?: true
    related_comment_id?: true
    related_community_id?: true
  }

  export type NotificationMaxAggregateInputType = {
    notification_id?: true
    type?: true
    content_preview?: true
    is_read?: true
    created_at?: true
    recipient_user_id?: true
    sender_user_id?: true
    related_post_id?: true
    related_comment_id?: true
    related_community_id?: true
  }

  export type NotificationCountAggregateInputType = {
    notification_id?: true
    type?: true
    content_preview?: true
    is_read?: true
    created_at?: true
    recipient_user_id?: true
    sender_user_id?: true
    related_post_id?: true
    related_comment_id?: true
    related_community_id?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    notification_id: string
    type: $Enums.NotificationType
    content_preview: string | null
    is_read: boolean
    created_at: Date
    recipient_user_id: string
    sender_user_id: string | null
    related_post_id: string | null
    related_comment_id: string | null
    related_community_id: string | null
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    notification_id?: boolean
    type?: boolean
    content_preview?: boolean
    is_read?: boolean
    created_at?: boolean
    recipient_user_id?: boolean
    sender_user_id?: boolean
    related_post_id?: boolean
    related_comment_id?: boolean
    related_community_id?: boolean
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | Notification$senderArgs<ExtArgs>
    related_post?: boolean | Notification$related_postArgs<ExtArgs>
    related_comment?: boolean | Notification$related_commentArgs<ExtArgs>
    related_community?: boolean | Notification$related_communityArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    notification_id?: boolean
    type?: boolean
    content_preview?: boolean
    is_read?: boolean
    created_at?: boolean
    recipient_user_id?: boolean
    sender_user_id?: boolean
    related_post_id?: boolean
    related_comment_id?: boolean
    related_community_id?: boolean
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | Notification$senderArgs<ExtArgs>
    related_post?: boolean | Notification$related_postArgs<ExtArgs>
    related_comment?: boolean | Notification$related_commentArgs<ExtArgs>
    related_community?: boolean | Notification$related_communityArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    notification_id?: boolean
    type?: boolean
    content_preview?: boolean
    is_read?: boolean
    created_at?: boolean
    recipient_user_id?: boolean
    sender_user_id?: boolean
    related_post_id?: boolean
    related_comment_id?: boolean
    related_community_id?: boolean
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | Notification$senderArgs<ExtArgs>
    related_post?: boolean | Notification$related_postArgs<ExtArgs>
    related_comment?: boolean | Notification$related_commentArgs<ExtArgs>
    related_community?: boolean | Notification$related_communityArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    notification_id?: boolean
    type?: boolean
    content_preview?: boolean
    is_read?: boolean
    created_at?: boolean
    recipient_user_id?: boolean
    sender_user_id?: boolean
    related_post_id?: boolean
    related_comment_id?: boolean
    related_community_id?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"notification_id" | "type" | "content_preview" | "is_read" | "created_at" | "recipient_user_id" | "sender_user_id" | "related_post_id" | "related_comment_id" | "related_community_id", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | Notification$senderArgs<ExtArgs>
    related_post?: boolean | Notification$related_postArgs<ExtArgs>
    related_comment?: boolean | Notification$related_commentArgs<ExtArgs>
    related_community?: boolean | Notification$related_communityArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | Notification$senderArgs<ExtArgs>
    related_post?: boolean | Notification$related_postArgs<ExtArgs>
    related_comment?: boolean | Notification$related_commentArgs<ExtArgs>
    related_community?: boolean | Notification$related_communityArgs<ExtArgs>
  }
  export type NotificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    recipient?: boolean | UserDefaultArgs<ExtArgs>
    sender?: boolean | Notification$senderArgs<ExtArgs>
    related_post?: boolean | Notification$related_postArgs<ExtArgs>
    related_comment?: boolean | Notification$related_commentArgs<ExtArgs>
    related_community?: boolean | Notification$related_communityArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      recipient: Prisma.$UserPayload<ExtArgs>
      sender: Prisma.$UserPayload<ExtArgs> | null
      related_post: Prisma.$PostPayload<ExtArgs> | null
      related_comment: Prisma.$CommentPayload<ExtArgs> | null
      related_community: Prisma.$CommunityPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      notification_id: string
      type: $Enums.NotificationType
      content_preview: string | null
      is_read: boolean
      created_at: Date
      recipient_user_id: string
      sender_user_id: string | null
      related_post_id: string | null
      related_comment_id: string | null
      related_community_id: string | null
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `notification_id`
     * const notificationWithNotification_idOnly = await prisma.notification.findMany({ select: { notification_id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `notification_id`
     * const notificationWithNotification_idOnly = await prisma.notification.createManyAndReturn({
     *   select: { notification_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {NotificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `notification_id`
     * const notificationWithNotification_idOnly = await prisma.notification.updateManyAndReturn({
     *   select: { notification_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificationUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    recipient<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sender<T extends Notification$senderArgs<ExtArgs> = {}>(args?: Subset<T, Notification$senderArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    related_post<T extends Notification$related_postArgs<ExtArgs> = {}>(args?: Subset<T, Notification$related_postArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    related_comment<T extends Notification$related_commentArgs<ExtArgs> = {}>(args?: Subset<T, Notification$related_commentArgs<ExtArgs>>): Prisma__CommentClient<$Result.GetResult<Prisma.$CommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    related_community<T extends Notification$related_communityArgs<ExtArgs> = {}>(args?: Subset<T, Notification$related_communityArgs<ExtArgs>>): Prisma__CommunityClient<$Result.GetResult<Prisma.$CommunityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */
  interface NotificationFieldRefs {
    readonly notification_id: FieldRef<"Notification", 'String'>
    readonly type: FieldRef<"Notification", 'NotificationType'>
    readonly content_preview: FieldRef<"Notification", 'String'>
    readonly is_read: FieldRef<"Notification", 'Boolean'>
    readonly created_at: FieldRef<"Notification", 'DateTime'>
    readonly recipient_user_id: FieldRef<"Notification", 'String'>
    readonly sender_user_id: FieldRef<"Notification", 'String'>
    readonly related_post_id: FieldRef<"Notification", 'String'>
    readonly related_comment_id: FieldRef<"Notification", 'String'>
    readonly related_community_id: FieldRef<"Notification", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification updateManyAndReturn
   */
  export type NotificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification.sender
   */
  export type Notification$senderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Notification.related_post
   */
  export type Notification$related_postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
  }

  /**
   * Notification.related_comment
   */
  export type Notification$related_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Comment
     */
    select?: CommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Comment
     */
    omit?: CommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommentInclude<ExtArgs> | null
    where?: CommentWhereInput
  }

  /**
   * Notification.related_community
   */
  export type Notification$related_communityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Community
     */
    select?: CommunitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Community
     */
    omit?: CommunityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommunityInclude<ExtArgs> | null
    where?: CommunityWhereInput
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    user_id: 'user_id',
    monash_email: 'monash_email',
    username: 'username',
    password_hash: 'password_hash',
    first_name: 'first_name',
    last_name: 'last_name',
    profile_picture_url: 'profile_picture_url',
    bio: 'bio',
    karma_points: 'karma_points',
    year_of_study: 'year_of_study',
    is_verified_student: 'is_verified_student',
    created_at: 'created_at',
    updated_at: 'updated_at',
    campus_id: 'campus_id',
    faculty_id: 'faculty_id',
    course_id: 'course_id'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const CampusScalarFieldEnum: {
    campus_id: 'campus_id',
    campus_name: 'campus_name',
    location_details: 'location_details',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type CampusScalarFieldEnum = (typeof CampusScalarFieldEnum)[keyof typeof CampusScalarFieldEnum]


  export const FacultyScalarFieldEnum: {
    faculty_id: 'faculty_id',
    faculty_name: 'faculty_name',
    faculty_abbreviation: 'faculty_abbreviation',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type FacultyScalarFieldEnum = (typeof FacultyScalarFieldEnum)[keyof typeof FacultyScalarFieldEnum]


  export const CourseScalarFieldEnum: {
    course_id: 'course_id',
    course_code: 'course_code',
    course_name: 'course_name',
    course_description: 'course_description',
    created_at: 'created_at',
    updated_at: 'updated_at',
    faculty_id: 'faculty_id'
  };

  export type CourseScalarFieldEnum = (typeof CourseScalarFieldEnum)[keyof typeof CourseScalarFieldEnum]


  export const UnitScalarFieldEnum: {
    unit_id: 'unit_id',
    unit_code: 'unit_code',
    unit_name: 'unit_name',
    unit_description: 'unit_description',
    semester_offered: 'semester_offered',
    year_level: 'year_level',
    created_at: 'created_at',
    updated_at: 'updated_at',
    faculty_id: 'faculty_id'
  };

  export type UnitScalarFieldEnum = (typeof UnitScalarFieldEnum)[keyof typeof UnitScalarFieldEnum]


  export const CommunityScalarFieldEnum: {
    community_id: 'community_id',
    name: 'name',
    display_name: 'display_name',
    description: 'description',
    community_type: 'community_type',
    profile_image_url: 'profile_image_url',
    banner_image_url: 'banner_image_url',
    is_private: 'is_private',
    rules: 'rules',
    created_at: 'created_at',
    updated_at: 'updated_at',
    creator_id: 'creator_id',
    related_campus_id: 'related_campus_id',
    related_faculty_id: 'related_faculty_id',
    related_course_id: 'related_course_id',
    related_unit_id: 'related_unit_id'
  };

  export type CommunityScalarFieldEnum = (typeof CommunityScalarFieldEnum)[keyof typeof CommunityScalarFieldEnum]


  export const PostScalarFieldEnum: {
    post_id: 'post_id',
    title: 'title',
    content_type: 'content_type',
    text_content: 'text_content',
    media_url: 'media_url',
    upvotes: 'upvotes',
    downvotes: 'downvotes',
    score: 'score',
    flair_text: 'flair_text',
    is_stickied: 'is_stickied',
    is_locked: 'is_locked',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at',
    user_id: 'user_id',
    community_id: 'community_id'
  };

  export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


  export const CommentScalarFieldEnum: {
    comment_id: 'comment_id',
    content: 'content',
    upvotes: 'upvotes',
    downvotes: 'downvotes',
    score: 'score',
    is_deleted: 'is_deleted',
    created_at: 'created_at',
    updated_at: 'updated_at',
    post_id: 'post_id',
    user_id: 'user_id',
    parent_comment_id: 'parent_comment_id'
  };

  export type CommentScalarFieldEnum = (typeof CommentScalarFieldEnum)[keyof typeof CommentScalarFieldEnum]


  export const VoteScalarFieldEnum: {
    vote_id: 'vote_id',
    vote_type: 'vote_type',
    created_at: 'created_at',
    user_id: 'user_id',
    post_id: 'post_id',
    comment_id: 'comment_id'
  };

  export type VoteScalarFieldEnum = (typeof VoteScalarFieldEnum)[keyof typeof VoteScalarFieldEnum]


  export const CommunityMembershipScalarFieldEnum: {
    membership_id: 'membership_id',
    role: 'role',
    joined_at: 'joined_at',
    user_id: 'user_id',
    community_id: 'community_id'
  };

  export type CommunityMembershipScalarFieldEnum = (typeof CommunityMembershipScalarFieldEnum)[keyof typeof CommunityMembershipScalarFieldEnum]


  export const ModeratorScalarFieldEnum: {
    moderator_id: 'moderator_id',
    permissions: 'permissions',
    appointed_at: 'appointed_at',
    user_id: 'user_id',
    community_id: 'community_id'
  };

  export type ModeratorScalarFieldEnum = (typeof ModeratorScalarFieldEnum)[keyof typeof ModeratorScalarFieldEnum]


  export const UserUnitEnrollmentScalarFieldEnum: {
    enrollment_id: 'enrollment_id',
    enrollment_year: 'enrollment_year',
    enrollment_semester: 'enrollment_semester',
    status: 'status',
    user_id: 'user_id',
    unit_id: 'unit_id'
  };

  export type UserUnitEnrollmentScalarFieldEnum = (typeof UserUnitEnrollmentScalarFieldEnum)[keyof typeof UserUnitEnrollmentScalarFieldEnum]


  export const SavedContentScalarFieldEnum: {
    saved_id: 'saved_id',
    saved_at: 'saved_at',
    user_id: 'user_id',
    post_id: 'post_id',
    comment_id: 'comment_id'
  };

  export type SavedContentScalarFieldEnum = (typeof SavedContentScalarFieldEnum)[keyof typeof SavedContentScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    notification_id: 'notification_id',
    type: 'type',
    content_preview: 'content_preview',
    is_read: 'is_read',
    created_at: 'created_at',
    recipient_user_id: 'recipient_user_id',
    sender_user_id: 'sender_user_id',
    related_post_id: 'related_post_id',
    related_comment_id: 'related_comment_id',
    related_community_id: 'related_community_id'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'CommunityType'
   */
  export type EnumCommunityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CommunityType'>
    


  /**
   * Reference to a field of type 'CommunityType[]'
   */
  export type ListEnumCommunityTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CommunityType[]'>
    


  /**
   * Reference to a field of type 'PostContentType'
   */
  export type EnumPostContentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PostContentType'>
    


  /**
   * Reference to a field of type 'PostContentType[]'
   */
  export type ListEnumPostContentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PostContentType[]'>
    


  /**
   * Reference to a field of type 'VoteType'
   */
  export type EnumVoteTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VoteType'>
    


  /**
   * Reference to a field of type 'VoteType[]'
   */
  export type ListEnumVoteTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VoteType[]'>
    


  /**
   * Reference to a field of type 'MembershipRole'
   */
  export type EnumMembershipRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MembershipRole'>
    


  /**
   * Reference to a field of type 'MembershipRole[]'
   */
  export type ListEnumMembershipRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MembershipRole[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'EnrollmentStatus'
   */
  export type EnumEnrollmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EnrollmentStatus'>
    


  /**
   * Reference to a field of type 'EnrollmentStatus[]'
   */
  export type ListEnumEnrollmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'EnrollmentStatus[]'>
    


  /**
   * Reference to a field of type 'NotificationType'
   */
  export type EnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType'>
    


  /**
   * Reference to a field of type 'NotificationType[]'
   */
  export type ListEnumNotificationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'NotificationType[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    user_id?: StringFilter<"User"> | string
    monash_email?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password_hash?: StringFilter<"User"> | string
    first_name?: StringNullableFilter<"User"> | string | null
    last_name?: StringNullableFilter<"User"> | string | null
    profile_picture_url?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    karma_points?: IntFilter<"User"> | number
    year_of_study?: IntNullableFilter<"User"> | number | null
    is_verified_student?: BoolFilter<"User"> | boolean
    created_at?: DateTimeFilter<"User"> | Date | string
    updated_at?: DateTimeFilter<"User"> | Date | string
    campus_id?: StringNullableFilter<"User"> | string | null
    faculty_id?: StringNullableFilter<"User"> | string | null
    course_id?: StringNullableFilter<"User"> | string | null
    campus?: XOR<CampusNullableScalarRelationFilter, CampusWhereInput> | null
    faculty?: XOR<FacultyNullableScalarRelationFilter, FacultyWhereInput> | null
    course?: XOR<CourseNullableScalarRelationFilter, CourseWhereInput> | null
    created_communities?: CommunityListRelationFilter
    posts?: PostListRelationFilter
    comments?: CommentListRelationFilter
    votes?: VoteListRelationFilter
    memberships?: CommunityMembershipListRelationFilter
    moderated_communities?: ModeratorListRelationFilter
    unit_enrollments?: UserUnitEnrollmentListRelationFilter
    saved_content?: SavedContentListRelationFilter
    notifications_received?: NotificationListRelationFilter
    notifications_sent?: NotificationListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    user_id?: SortOrder
    monash_email?: SortOrder
    username?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    profile_picture_url?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    karma_points?: SortOrder
    year_of_study?: SortOrderInput | SortOrder
    is_verified_student?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    campus_id?: SortOrderInput | SortOrder
    faculty_id?: SortOrderInput | SortOrder
    course_id?: SortOrderInput | SortOrder
    campus?: CampusOrderByWithRelationInput
    faculty?: FacultyOrderByWithRelationInput
    course?: CourseOrderByWithRelationInput
    created_communities?: CommunityOrderByRelationAggregateInput
    posts?: PostOrderByRelationAggregateInput
    comments?: CommentOrderByRelationAggregateInput
    votes?: VoteOrderByRelationAggregateInput
    memberships?: CommunityMembershipOrderByRelationAggregateInput
    moderated_communities?: ModeratorOrderByRelationAggregateInput
    unit_enrollments?: UserUnitEnrollmentOrderByRelationAggregateInput
    saved_content?: SavedContentOrderByRelationAggregateInput
    notifications_received?: NotificationOrderByRelationAggregateInput
    notifications_sent?: NotificationOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    user_id?: string
    monash_email?: string
    username?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password_hash?: StringFilter<"User"> | string
    first_name?: StringNullableFilter<"User"> | string | null
    last_name?: StringNullableFilter<"User"> | string | null
    profile_picture_url?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    karma_points?: IntFilter<"User"> | number
    year_of_study?: IntNullableFilter<"User"> | number | null
    is_verified_student?: BoolFilter<"User"> | boolean
    created_at?: DateTimeFilter<"User"> | Date | string
    updated_at?: DateTimeFilter<"User"> | Date | string
    campus_id?: StringNullableFilter<"User"> | string | null
    faculty_id?: StringNullableFilter<"User"> | string | null
    course_id?: StringNullableFilter<"User"> | string | null
    campus?: XOR<CampusNullableScalarRelationFilter, CampusWhereInput> | null
    faculty?: XOR<FacultyNullableScalarRelationFilter, FacultyWhereInput> | null
    course?: XOR<CourseNullableScalarRelationFilter, CourseWhereInput> | null
    created_communities?: CommunityListRelationFilter
    posts?: PostListRelationFilter
    comments?: CommentListRelationFilter
    votes?: VoteListRelationFilter
    memberships?: CommunityMembershipListRelationFilter
    moderated_communities?: ModeratorListRelationFilter
    unit_enrollments?: UserUnitEnrollmentListRelationFilter
    saved_content?: SavedContentListRelationFilter
    notifications_received?: NotificationListRelationFilter
    notifications_sent?: NotificationListRelationFilter
  }, "user_id" | "monash_email" | "username">

  export type UserOrderByWithAggregationInput = {
    user_id?: SortOrder
    monash_email?: SortOrder
    username?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    profile_picture_url?: SortOrderInput | SortOrder
    bio?: SortOrderInput | SortOrder
    karma_points?: SortOrder
    year_of_study?: SortOrderInput | SortOrder
    is_verified_student?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    campus_id?: SortOrderInput | SortOrder
    faculty_id?: SortOrderInput | SortOrder
    course_id?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    user_id?: StringWithAggregatesFilter<"User"> | string
    monash_email?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    password_hash?: StringWithAggregatesFilter<"User"> | string
    first_name?: StringNullableWithAggregatesFilter<"User"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"User"> | string | null
    profile_picture_url?: StringNullableWithAggregatesFilter<"User"> | string | null
    bio?: StringNullableWithAggregatesFilter<"User"> | string | null
    karma_points?: IntWithAggregatesFilter<"User"> | number
    year_of_study?: IntNullableWithAggregatesFilter<"User"> | number | null
    is_verified_student?: BoolWithAggregatesFilter<"User"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"User"> | Date | string
    campus_id?: StringNullableWithAggregatesFilter<"User"> | string | null
    faculty_id?: StringNullableWithAggregatesFilter<"User"> | string | null
    course_id?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type CampusWhereInput = {
    AND?: CampusWhereInput | CampusWhereInput[]
    OR?: CampusWhereInput[]
    NOT?: CampusWhereInput | CampusWhereInput[]
    campus_id?: StringFilter<"Campus"> | string
    campus_name?: StringFilter<"Campus"> | string
    location_details?: StringNullableFilter<"Campus"> | string | null
    created_at?: DateTimeFilter<"Campus"> | Date | string
    updated_at?: DateTimeFilter<"Campus"> | Date | string
    users?: UserListRelationFilter
    communities?: CommunityListRelationFilter
  }

  export type CampusOrderByWithRelationInput = {
    campus_id?: SortOrder
    campus_name?: SortOrder
    location_details?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    users?: UserOrderByRelationAggregateInput
    communities?: CommunityOrderByRelationAggregateInput
  }

  export type CampusWhereUniqueInput = Prisma.AtLeast<{
    campus_id?: string
    campus_name?: string
    AND?: CampusWhereInput | CampusWhereInput[]
    OR?: CampusWhereInput[]
    NOT?: CampusWhereInput | CampusWhereInput[]
    location_details?: StringNullableFilter<"Campus"> | string | null
    created_at?: DateTimeFilter<"Campus"> | Date | string
    updated_at?: DateTimeFilter<"Campus"> | Date | string
    users?: UserListRelationFilter
    communities?: CommunityListRelationFilter
  }, "campus_id" | "campus_name">

  export type CampusOrderByWithAggregationInput = {
    campus_id?: SortOrder
    campus_name?: SortOrder
    location_details?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: CampusCountOrderByAggregateInput
    _max?: CampusMaxOrderByAggregateInput
    _min?: CampusMinOrderByAggregateInput
  }

  export type CampusScalarWhereWithAggregatesInput = {
    AND?: CampusScalarWhereWithAggregatesInput | CampusScalarWhereWithAggregatesInput[]
    OR?: CampusScalarWhereWithAggregatesInput[]
    NOT?: CampusScalarWhereWithAggregatesInput | CampusScalarWhereWithAggregatesInput[]
    campus_id?: StringWithAggregatesFilter<"Campus"> | string
    campus_name?: StringWithAggregatesFilter<"Campus"> | string
    location_details?: StringNullableWithAggregatesFilter<"Campus"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Campus"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Campus"> | Date | string
  }

  export type FacultyWhereInput = {
    AND?: FacultyWhereInput | FacultyWhereInput[]
    OR?: FacultyWhereInput[]
    NOT?: FacultyWhereInput | FacultyWhereInput[]
    faculty_id?: StringFilter<"Faculty"> | string
    faculty_name?: StringFilter<"Faculty"> | string
    faculty_abbreviation?: StringNullableFilter<"Faculty"> | string | null
    created_at?: DateTimeFilter<"Faculty"> | Date | string
    updated_at?: DateTimeFilter<"Faculty"> | Date | string
    users?: UserListRelationFilter
    courses?: CourseListRelationFilter
    units?: UnitListRelationFilter
    communities?: CommunityListRelationFilter
  }

  export type FacultyOrderByWithRelationInput = {
    faculty_id?: SortOrder
    faculty_name?: SortOrder
    faculty_abbreviation?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    users?: UserOrderByRelationAggregateInput
    courses?: CourseOrderByRelationAggregateInput
    units?: UnitOrderByRelationAggregateInput
    communities?: CommunityOrderByRelationAggregateInput
  }

  export type FacultyWhereUniqueInput = Prisma.AtLeast<{
    faculty_id?: string
    faculty_name?: string
    AND?: FacultyWhereInput | FacultyWhereInput[]
    OR?: FacultyWhereInput[]
    NOT?: FacultyWhereInput | FacultyWhereInput[]
    faculty_abbreviation?: StringNullableFilter<"Faculty"> | string | null
    created_at?: DateTimeFilter<"Faculty"> | Date | string
    updated_at?: DateTimeFilter<"Faculty"> | Date | string
    users?: UserListRelationFilter
    courses?: CourseListRelationFilter
    units?: UnitListRelationFilter
    communities?: CommunityListRelationFilter
  }, "faculty_id" | "faculty_name">

  export type FacultyOrderByWithAggregationInput = {
    faculty_id?: SortOrder
    faculty_name?: SortOrder
    faculty_abbreviation?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: FacultyCountOrderByAggregateInput
    _max?: FacultyMaxOrderByAggregateInput
    _min?: FacultyMinOrderByAggregateInput
  }

  export type FacultyScalarWhereWithAggregatesInput = {
    AND?: FacultyScalarWhereWithAggregatesInput | FacultyScalarWhereWithAggregatesInput[]
    OR?: FacultyScalarWhereWithAggregatesInput[]
    NOT?: FacultyScalarWhereWithAggregatesInput | FacultyScalarWhereWithAggregatesInput[]
    faculty_id?: StringWithAggregatesFilter<"Faculty"> | string
    faculty_name?: StringWithAggregatesFilter<"Faculty"> | string
    faculty_abbreviation?: StringNullableWithAggregatesFilter<"Faculty"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Faculty"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Faculty"> | Date | string
  }

  export type CourseWhereInput = {
    AND?: CourseWhereInput | CourseWhereInput[]
    OR?: CourseWhereInput[]
    NOT?: CourseWhereInput | CourseWhereInput[]
    course_id?: StringFilter<"Course"> | string
    course_code?: StringFilter<"Course"> | string
    course_name?: StringFilter<"Course"> | string
    course_description?: StringNullableFilter<"Course"> | string | null
    created_at?: DateTimeFilter<"Course"> | Date | string
    updated_at?: DateTimeFilter<"Course"> | Date | string
    faculty_id?: StringFilter<"Course"> | string
    faculty?: XOR<FacultyScalarRelationFilter, FacultyWhereInput>
    users?: UserListRelationFilter
    communities?: CommunityListRelationFilter
  }

  export type CourseOrderByWithRelationInput = {
    course_id?: SortOrder
    course_code?: SortOrder
    course_name?: SortOrder
    course_description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrder
    faculty?: FacultyOrderByWithRelationInput
    users?: UserOrderByRelationAggregateInput
    communities?: CommunityOrderByRelationAggregateInput
  }

  export type CourseWhereUniqueInput = Prisma.AtLeast<{
    course_id?: string
    course_code?: string
    AND?: CourseWhereInput | CourseWhereInput[]
    OR?: CourseWhereInput[]
    NOT?: CourseWhereInput | CourseWhereInput[]
    course_name?: StringFilter<"Course"> | string
    course_description?: StringNullableFilter<"Course"> | string | null
    created_at?: DateTimeFilter<"Course"> | Date | string
    updated_at?: DateTimeFilter<"Course"> | Date | string
    faculty_id?: StringFilter<"Course"> | string
    faculty?: XOR<FacultyScalarRelationFilter, FacultyWhereInput>
    users?: UserListRelationFilter
    communities?: CommunityListRelationFilter
  }, "course_id" | "course_code">

  export type CourseOrderByWithAggregationInput = {
    course_id?: SortOrder
    course_code?: SortOrder
    course_name?: SortOrder
    course_description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrder
    _count?: CourseCountOrderByAggregateInput
    _max?: CourseMaxOrderByAggregateInput
    _min?: CourseMinOrderByAggregateInput
  }

  export type CourseScalarWhereWithAggregatesInput = {
    AND?: CourseScalarWhereWithAggregatesInput | CourseScalarWhereWithAggregatesInput[]
    OR?: CourseScalarWhereWithAggregatesInput[]
    NOT?: CourseScalarWhereWithAggregatesInput | CourseScalarWhereWithAggregatesInput[]
    course_id?: StringWithAggregatesFilter<"Course"> | string
    course_code?: StringWithAggregatesFilter<"Course"> | string
    course_name?: StringWithAggregatesFilter<"Course"> | string
    course_description?: StringNullableWithAggregatesFilter<"Course"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Course"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Course"> | Date | string
    faculty_id?: StringWithAggregatesFilter<"Course"> | string
  }

  export type UnitWhereInput = {
    AND?: UnitWhereInput | UnitWhereInput[]
    OR?: UnitWhereInput[]
    NOT?: UnitWhereInput | UnitWhereInput[]
    unit_id?: StringFilter<"Unit"> | string
    unit_code?: StringFilter<"Unit"> | string
    unit_name?: StringFilter<"Unit"> | string
    unit_description?: StringNullableFilter<"Unit"> | string | null
    semester_offered?: StringNullableFilter<"Unit"> | string | null
    year_level?: IntNullableFilter<"Unit"> | number | null
    created_at?: DateTimeFilter<"Unit"> | Date | string
    updated_at?: DateTimeFilter<"Unit"> | Date | string
    faculty_id?: StringNullableFilter<"Unit"> | string | null
    faculty?: XOR<FacultyNullableScalarRelationFilter, FacultyWhereInput> | null
    communities?: CommunityListRelationFilter
    user_enrollments?: UserUnitEnrollmentListRelationFilter
  }

  export type UnitOrderByWithRelationInput = {
    unit_id?: SortOrder
    unit_code?: SortOrder
    unit_name?: SortOrder
    unit_description?: SortOrderInput | SortOrder
    semester_offered?: SortOrderInput | SortOrder
    year_level?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrderInput | SortOrder
    faculty?: FacultyOrderByWithRelationInput
    communities?: CommunityOrderByRelationAggregateInput
    user_enrollments?: UserUnitEnrollmentOrderByRelationAggregateInput
  }

  export type UnitWhereUniqueInput = Prisma.AtLeast<{
    unit_id?: string
    unit_code?: string
    AND?: UnitWhereInput | UnitWhereInput[]
    OR?: UnitWhereInput[]
    NOT?: UnitWhereInput | UnitWhereInput[]
    unit_name?: StringFilter<"Unit"> | string
    unit_description?: StringNullableFilter<"Unit"> | string | null
    semester_offered?: StringNullableFilter<"Unit"> | string | null
    year_level?: IntNullableFilter<"Unit"> | number | null
    created_at?: DateTimeFilter<"Unit"> | Date | string
    updated_at?: DateTimeFilter<"Unit"> | Date | string
    faculty_id?: StringNullableFilter<"Unit"> | string | null
    faculty?: XOR<FacultyNullableScalarRelationFilter, FacultyWhereInput> | null
    communities?: CommunityListRelationFilter
    user_enrollments?: UserUnitEnrollmentListRelationFilter
  }, "unit_id" | "unit_code">

  export type UnitOrderByWithAggregationInput = {
    unit_id?: SortOrder
    unit_code?: SortOrder
    unit_name?: SortOrder
    unit_description?: SortOrderInput | SortOrder
    semester_offered?: SortOrderInput | SortOrder
    year_level?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrderInput | SortOrder
    _count?: UnitCountOrderByAggregateInput
    _avg?: UnitAvgOrderByAggregateInput
    _max?: UnitMaxOrderByAggregateInput
    _min?: UnitMinOrderByAggregateInput
    _sum?: UnitSumOrderByAggregateInput
  }

  export type UnitScalarWhereWithAggregatesInput = {
    AND?: UnitScalarWhereWithAggregatesInput | UnitScalarWhereWithAggregatesInput[]
    OR?: UnitScalarWhereWithAggregatesInput[]
    NOT?: UnitScalarWhereWithAggregatesInput | UnitScalarWhereWithAggregatesInput[]
    unit_id?: StringWithAggregatesFilter<"Unit"> | string
    unit_code?: StringWithAggregatesFilter<"Unit"> | string
    unit_name?: StringWithAggregatesFilter<"Unit"> | string
    unit_description?: StringNullableWithAggregatesFilter<"Unit"> | string | null
    semester_offered?: StringNullableWithAggregatesFilter<"Unit"> | string | null
    year_level?: IntNullableWithAggregatesFilter<"Unit"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"Unit"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Unit"> | Date | string
    faculty_id?: StringNullableWithAggregatesFilter<"Unit"> | string | null
  }

  export type CommunityWhereInput = {
    AND?: CommunityWhereInput | CommunityWhereInput[]
    OR?: CommunityWhereInput[]
    NOT?: CommunityWhereInput | CommunityWhereInput[]
    community_id?: StringFilter<"Community"> | string
    name?: StringFilter<"Community"> | string
    display_name?: StringFilter<"Community"> | string
    description?: StringNullableFilter<"Community"> | string | null
    community_type?: EnumCommunityTypeFilter<"Community"> | $Enums.CommunityType
    profile_image_url?: StringNullableFilter<"Community"> | string | null
    banner_image_url?: StringNullableFilter<"Community"> | string | null
    is_private?: BoolFilter<"Community"> | boolean
    rules?: StringNullableFilter<"Community"> | string | null
    created_at?: DateTimeFilter<"Community"> | Date | string
    updated_at?: DateTimeFilter<"Community"> | Date | string
    creator_id?: StringFilter<"Community"> | string
    related_campus_id?: StringNullableFilter<"Community"> | string | null
    related_faculty_id?: StringNullableFilter<"Community"> | string | null
    related_course_id?: StringNullableFilter<"Community"> | string | null
    related_unit_id?: StringNullableFilter<"Community"> | string | null
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
    related_campus?: XOR<CampusNullableScalarRelationFilter, CampusWhereInput> | null
    related_faculty?: XOR<FacultyNullableScalarRelationFilter, FacultyWhereInput> | null
    related_course?: XOR<CourseNullableScalarRelationFilter, CourseWhereInput> | null
    related_unit?: XOR<UnitNullableScalarRelationFilter, UnitWhereInput> | null
    posts?: PostListRelationFilter
    members?: CommunityMembershipListRelationFilter
    moderators?: ModeratorListRelationFilter
    notifications?: NotificationListRelationFilter
  }

  export type CommunityOrderByWithRelationInput = {
    community_id?: SortOrder
    name?: SortOrder
    display_name?: SortOrder
    description?: SortOrderInput | SortOrder
    community_type?: SortOrder
    profile_image_url?: SortOrderInput | SortOrder
    banner_image_url?: SortOrderInput | SortOrder
    is_private?: SortOrder
    rules?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    creator_id?: SortOrder
    related_campus_id?: SortOrderInput | SortOrder
    related_faculty_id?: SortOrderInput | SortOrder
    related_course_id?: SortOrderInput | SortOrder
    related_unit_id?: SortOrderInput | SortOrder
    creator?: UserOrderByWithRelationInput
    related_campus?: CampusOrderByWithRelationInput
    related_faculty?: FacultyOrderByWithRelationInput
    related_course?: CourseOrderByWithRelationInput
    related_unit?: UnitOrderByWithRelationInput
    posts?: PostOrderByRelationAggregateInput
    members?: CommunityMembershipOrderByRelationAggregateInput
    moderators?: ModeratorOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
  }

  export type CommunityWhereUniqueInput = Prisma.AtLeast<{
    community_id?: string
    name?: string
    AND?: CommunityWhereInput | CommunityWhereInput[]
    OR?: CommunityWhereInput[]
    NOT?: CommunityWhereInput | CommunityWhereInput[]
    display_name?: StringFilter<"Community"> | string
    description?: StringNullableFilter<"Community"> | string | null
    community_type?: EnumCommunityTypeFilter<"Community"> | $Enums.CommunityType
    profile_image_url?: StringNullableFilter<"Community"> | string | null
    banner_image_url?: StringNullableFilter<"Community"> | string | null
    is_private?: BoolFilter<"Community"> | boolean
    rules?: StringNullableFilter<"Community"> | string | null
    created_at?: DateTimeFilter<"Community"> | Date | string
    updated_at?: DateTimeFilter<"Community"> | Date | string
    creator_id?: StringFilter<"Community"> | string
    related_campus_id?: StringNullableFilter<"Community"> | string | null
    related_faculty_id?: StringNullableFilter<"Community"> | string | null
    related_course_id?: StringNullableFilter<"Community"> | string | null
    related_unit_id?: StringNullableFilter<"Community"> | string | null
    creator?: XOR<UserScalarRelationFilter, UserWhereInput>
    related_campus?: XOR<CampusNullableScalarRelationFilter, CampusWhereInput> | null
    related_faculty?: XOR<FacultyNullableScalarRelationFilter, FacultyWhereInput> | null
    related_course?: XOR<CourseNullableScalarRelationFilter, CourseWhereInput> | null
    related_unit?: XOR<UnitNullableScalarRelationFilter, UnitWhereInput> | null
    posts?: PostListRelationFilter
    members?: CommunityMembershipListRelationFilter
    moderators?: ModeratorListRelationFilter
    notifications?: NotificationListRelationFilter
  }, "community_id" | "name">

  export type CommunityOrderByWithAggregationInput = {
    community_id?: SortOrder
    name?: SortOrder
    display_name?: SortOrder
    description?: SortOrderInput | SortOrder
    community_type?: SortOrder
    profile_image_url?: SortOrderInput | SortOrder
    banner_image_url?: SortOrderInput | SortOrder
    is_private?: SortOrder
    rules?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    creator_id?: SortOrder
    related_campus_id?: SortOrderInput | SortOrder
    related_faculty_id?: SortOrderInput | SortOrder
    related_course_id?: SortOrderInput | SortOrder
    related_unit_id?: SortOrderInput | SortOrder
    _count?: CommunityCountOrderByAggregateInput
    _max?: CommunityMaxOrderByAggregateInput
    _min?: CommunityMinOrderByAggregateInput
  }

  export type CommunityScalarWhereWithAggregatesInput = {
    AND?: CommunityScalarWhereWithAggregatesInput | CommunityScalarWhereWithAggregatesInput[]
    OR?: CommunityScalarWhereWithAggregatesInput[]
    NOT?: CommunityScalarWhereWithAggregatesInput | CommunityScalarWhereWithAggregatesInput[]
    community_id?: StringWithAggregatesFilter<"Community"> | string
    name?: StringWithAggregatesFilter<"Community"> | string
    display_name?: StringWithAggregatesFilter<"Community"> | string
    description?: StringNullableWithAggregatesFilter<"Community"> | string | null
    community_type?: EnumCommunityTypeWithAggregatesFilter<"Community"> | $Enums.CommunityType
    profile_image_url?: StringNullableWithAggregatesFilter<"Community"> | string | null
    banner_image_url?: StringNullableWithAggregatesFilter<"Community"> | string | null
    is_private?: BoolWithAggregatesFilter<"Community"> | boolean
    rules?: StringNullableWithAggregatesFilter<"Community"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Community"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Community"> | Date | string
    creator_id?: StringWithAggregatesFilter<"Community"> | string
    related_campus_id?: StringNullableWithAggregatesFilter<"Community"> | string | null
    related_faculty_id?: StringNullableWithAggregatesFilter<"Community"> | string | null
    related_course_id?: StringNullableWithAggregatesFilter<"Community"> | string | null
    related_unit_id?: StringNullableWithAggregatesFilter<"Community"> | string | null
  }

  export type PostWhereInput = {
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    post_id?: StringFilter<"Post"> | string
    title?: StringFilter<"Post"> | string
    content_type?: EnumPostContentTypeFilter<"Post"> | $Enums.PostContentType
    text_content?: StringNullableFilter<"Post"> | string | null
    media_url?: StringNullableFilter<"Post"> | string | null
    upvotes?: IntFilter<"Post"> | number
    downvotes?: IntFilter<"Post"> | number
    score?: IntFilter<"Post"> | number
    flair_text?: StringNullableFilter<"Post"> | string | null
    is_stickied?: BoolFilter<"Post"> | boolean
    is_locked?: BoolFilter<"Post"> | boolean
    is_deleted?: BoolFilter<"Post"> | boolean
    created_at?: DateTimeFilter<"Post"> | Date | string
    updated_at?: DateTimeFilter<"Post"> | Date | string
    user_id?: StringFilter<"Post"> | string
    community_id?: StringFilter<"Post"> | string
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    community?: XOR<CommunityScalarRelationFilter, CommunityWhereInput>
    comments?: CommentListRelationFilter
    votes?: VoteListRelationFilter
    saved_by_users?: SavedContentListRelationFilter
    notifications?: NotificationListRelationFilter
  }

  export type PostOrderByWithRelationInput = {
    post_id?: SortOrder
    title?: SortOrder
    content_type?: SortOrder
    text_content?: SortOrderInput | SortOrder
    media_url?: SortOrderInput | SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    flair_text?: SortOrderInput | SortOrder
    is_stickied?: SortOrder
    is_locked?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    author?: UserOrderByWithRelationInput
    community?: CommunityOrderByWithRelationInput
    comments?: CommentOrderByRelationAggregateInput
    votes?: VoteOrderByRelationAggregateInput
    saved_by_users?: SavedContentOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
  }

  export type PostWhereUniqueInput = Prisma.AtLeast<{
    post_id?: string
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    title?: StringFilter<"Post"> | string
    content_type?: EnumPostContentTypeFilter<"Post"> | $Enums.PostContentType
    text_content?: StringNullableFilter<"Post"> | string | null
    media_url?: StringNullableFilter<"Post"> | string | null
    upvotes?: IntFilter<"Post"> | number
    downvotes?: IntFilter<"Post"> | number
    score?: IntFilter<"Post"> | number
    flair_text?: StringNullableFilter<"Post"> | string | null
    is_stickied?: BoolFilter<"Post"> | boolean
    is_locked?: BoolFilter<"Post"> | boolean
    is_deleted?: BoolFilter<"Post"> | boolean
    created_at?: DateTimeFilter<"Post"> | Date | string
    updated_at?: DateTimeFilter<"Post"> | Date | string
    user_id?: StringFilter<"Post"> | string
    community_id?: StringFilter<"Post"> | string
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    community?: XOR<CommunityScalarRelationFilter, CommunityWhereInput>
    comments?: CommentListRelationFilter
    votes?: VoteListRelationFilter
    saved_by_users?: SavedContentListRelationFilter
    notifications?: NotificationListRelationFilter
  }, "post_id">

  export type PostOrderByWithAggregationInput = {
    post_id?: SortOrder
    title?: SortOrder
    content_type?: SortOrder
    text_content?: SortOrderInput | SortOrder
    media_url?: SortOrderInput | SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    flair_text?: SortOrderInput | SortOrder
    is_stickied?: SortOrder
    is_locked?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    _count?: PostCountOrderByAggregateInput
    _avg?: PostAvgOrderByAggregateInput
    _max?: PostMaxOrderByAggregateInput
    _min?: PostMinOrderByAggregateInput
    _sum?: PostSumOrderByAggregateInput
  }

  export type PostScalarWhereWithAggregatesInput = {
    AND?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    OR?: PostScalarWhereWithAggregatesInput[]
    NOT?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    post_id?: StringWithAggregatesFilter<"Post"> | string
    title?: StringWithAggregatesFilter<"Post"> | string
    content_type?: EnumPostContentTypeWithAggregatesFilter<"Post"> | $Enums.PostContentType
    text_content?: StringNullableWithAggregatesFilter<"Post"> | string | null
    media_url?: StringNullableWithAggregatesFilter<"Post"> | string | null
    upvotes?: IntWithAggregatesFilter<"Post"> | number
    downvotes?: IntWithAggregatesFilter<"Post"> | number
    score?: IntWithAggregatesFilter<"Post"> | number
    flair_text?: StringNullableWithAggregatesFilter<"Post"> | string | null
    is_stickied?: BoolWithAggregatesFilter<"Post"> | boolean
    is_locked?: BoolWithAggregatesFilter<"Post"> | boolean
    is_deleted?: BoolWithAggregatesFilter<"Post"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Post"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Post"> | Date | string
    user_id?: StringWithAggregatesFilter<"Post"> | string
    community_id?: StringWithAggregatesFilter<"Post"> | string
  }

  export type CommentWhereInput = {
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    comment_id?: StringFilter<"Comment"> | string
    content?: StringFilter<"Comment"> | string
    upvotes?: IntFilter<"Comment"> | number
    downvotes?: IntFilter<"Comment"> | number
    score?: IntFilter<"Comment"> | number
    is_deleted?: BoolFilter<"Comment"> | boolean
    created_at?: DateTimeFilter<"Comment"> | Date | string
    updated_at?: DateTimeFilter<"Comment"> | Date | string
    post_id?: StringFilter<"Comment"> | string
    user_id?: StringFilter<"Comment"> | string
    parent_comment_id?: StringNullableFilter<"Comment"> | string | null
    post?: XOR<PostScalarRelationFilter, PostWhereInput>
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    parent_comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
    replies?: CommentListRelationFilter
    votes?: VoteListRelationFilter
    saved_by_users?: SavedContentListRelationFilter
    notifications?: NotificationListRelationFilter
  }

  export type CommentOrderByWithRelationInput = {
    comment_id?: SortOrder
    content?: SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    parent_comment_id?: SortOrderInput | SortOrder
    post?: PostOrderByWithRelationInput
    author?: UserOrderByWithRelationInput
    parent_comment?: CommentOrderByWithRelationInput
    replies?: CommentOrderByRelationAggregateInput
    votes?: VoteOrderByRelationAggregateInput
    saved_by_users?: SavedContentOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
  }

  export type CommentWhereUniqueInput = Prisma.AtLeast<{
    comment_id?: string
    AND?: CommentWhereInput | CommentWhereInput[]
    OR?: CommentWhereInput[]
    NOT?: CommentWhereInput | CommentWhereInput[]
    content?: StringFilter<"Comment"> | string
    upvotes?: IntFilter<"Comment"> | number
    downvotes?: IntFilter<"Comment"> | number
    score?: IntFilter<"Comment"> | number
    is_deleted?: BoolFilter<"Comment"> | boolean
    created_at?: DateTimeFilter<"Comment"> | Date | string
    updated_at?: DateTimeFilter<"Comment"> | Date | string
    post_id?: StringFilter<"Comment"> | string
    user_id?: StringFilter<"Comment"> | string
    parent_comment_id?: StringNullableFilter<"Comment"> | string | null
    post?: XOR<PostScalarRelationFilter, PostWhereInput>
    author?: XOR<UserScalarRelationFilter, UserWhereInput>
    parent_comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
    replies?: CommentListRelationFilter
    votes?: VoteListRelationFilter
    saved_by_users?: SavedContentListRelationFilter
    notifications?: NotificationListRelationFilter
  }, "comment_id">

  export type CommentOrderByWithAggregationInput = {
    comment_id?: SortOrder
    content?: SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    parent_comment_id?: SortOrderInput | SortOrder
    _count?: CommentCountOrderByAggregateInput
    _avg?: CommentAvgOrderByAggregateInput
    _max?: CommentMaxOrderByAggregateInput
    _min?: CommentMinOrderByAggregateInput
    _sum?: CommentSumOrderByAggregateInput
  }

  export type CommentScalarWhereWithAggregatesInput = {
    AND?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    OR?: CommentScalarWhereWithAggregatesInput[]
    NOT?: CommentScalarWhereWithAggregatesInput | CommentScalarWhereWithAggregatesInput[]
    comment_id?: StringWithAggregatesFilter<"Comment"> | string
    content?: StringWithAggregatesFilter<"Comment"> | string
    upvotes?: IntWithAggregatesFilter<"Comment"> | number
    downvotes?: IntWithAggregatesFilter<"Comment"> | number
    score?: IntWithAggregatesFilter<"Comment"> | number
    is_deleted?: BoolWithAggregatesFilter<"Comment"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Comment"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Comment"> | Date | string
    post_id?: StringWithAggregatesFilter<"Comment"> | string
    user_id?: StringWithAggregatesFilter<"Comment"> | string
    parent_comment_id?: StringNullableWithAggregatesFilter<"Comment"> | string | null
  }

  export type VoteWhereInput = {
    AND?: VoteWhereInput | VoteWhereInput[]
    OR?: VoteWhereInput[]
    NOT?: VoteWhereInput | VoteWhereInput[]
    vote_id?: StringFilter<"Vote"> | string
    vote_type?: EnumVoteTypeFilter<"Vote"> | $Enums.VoteType
    created_at?: DateTimeFilter<"Vote"> | Date | string
    user_id?: StringFilter<"Vote"> | string
    post_id?: StringNullableFilter<"Vote"> | string | null
    comment_id?: StringNullableFilter<"Vote"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    post?: XOR<PostNullableScalarRelationFilter, PostWhereInput> | null
    comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
  }

  export type VoteOrderByWithRelationInput = {
    vote_id?: SortOrder
    vote_type?: SortOrder
    created_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrderInput | SortOrder
    comment_id?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    post?: PostOrderByWithRelationInput
    comment?: CommentOrderByWithRelationInput
  }

  export type VoteWhereUniqueInput = Prisma.AtLeast<{
    vote_id?: string
    UserPostVote?: VoteUserPostVoteCompoundUniqueInput
    UserCommentVote?: VoteUserCommentVoteCompoundUniqueInput
    AND?: VoteWhereInput | VoteWhereInput[]
    OR?: VoteWhereInput[]
    NOT?: VoteWhereInput | VoteWhereInput[]
    vote_type?: EnumVoteTypeFilter<"Vote"> | $Enums.VoteType
    created_at?: DateTimeFilter<"Vote"> | Date | string
    user_id?: StringFilter<"Vote"> | string
    post_id?: StringNullableFilter<"Vote"> | string | null
    comment_id?: StringNullableFilter<"Vote"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    post?: XOR<PostNullableScalarRelationFilter, PostWhereInput> | null
    comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
  }, "vote_id" | "UserPostVote" | "UserCommentVote">

  export type VoteOrderByWithAggregationInput = {
    vote_id?: SortOrder
    vote_type?: SortOrder
    created_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrderInput | SortOrder
    comment_id?: SortOrderInput | SortOrder
    _count?: VoteCountOrderByAggregateInput
    _max?: VoteMaxOrderByAggregateInput
    _min?: VoteMinOrderByAggregateInput
  }

  export type VoteScalarWhereWithAggregatesInput = {
    AND?: VoteScalarWhereWithAggregatesInput | VoteScalarWhereWithAggregatesInput[]
    OR?: VoteScalarWhereWithAggregatesInput[]
    NOT?: VoteScalarWhereWithAggregatesInput | VoteScalarWhereWithAggregatesInput[]
    vote_id?: StringWithAggregatesFilter<"Vote"> | string
    vote_type?: EnumVoteTypeWithAggregatesFilter<"Vote"> | $Enums.VoteType
    created_at?: DateTimeWithAggregatesFilter<"Vote"> | Date | string
    user_id?: StringWithAggregatesFilter<"Vote"> | string
    post_id?: StringNullableWithAggregatesFilter<"Vote"> | string | null
    comment_id?: StringNullableWithAggregatesFilter<"Vote"> | string | null
  }

  export type CommunityMembershipWhereInput = {
    AND?: CommunityMembershipWhereInput | CommunityMembershipWhereInput[]
    OR?: CommunityMembershipWhereInput[]
    NOT?: CommunityMembershipWhereInput | CommunityMembershipWhereInput[]
    membership_id?: StringFilter<"CommunityMembership"> | string
    role?: EnumMembershipRoleFilter<"CommunityMembership"> | $Enums.MembershipRole
    joined_at?: DateTimeFilter<"CommunityMembership"> | Date | string
    user_id?: StringFilter<"CommunityMembership"> | string
    community_id?: StringFilter<"CommunityMembership"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    community?: XOR<CommunityScalarRelationFilter, CommunityWhereInput>
  }

  export type CommunityMembershipOrderByWithRelationInput = {
    membership_id?: SortOrder
    role?: SortOrder
    joined_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    user?: UserOrderByWithRelationInput
    community?: CommunityOrderByWithRelationInput
  }

  export type CommunityMembershipWhereUniqueInput = Prisma.AtLeast<{
    membership_id?: string
    user_id_community_id?: CommunityMembershipUser_idCommunity_idCompoundUniqueInput
    AND?: CommunityMembershipWhereInput | CommunityMembershipWhereInput[]
    OR?: CommunityMembershipWhereInput[]
    NOT?: CommunityMembershipWhereInput | CommunityMembershipWhereInput[]
    role?: EnumMembershipRoleFilter<"CommunityMembership"> | $Enums.MembershipRole
    joined_at?: DateTimeFilter<"CommunityMembership"> | Date | string
    user_id?: StringFilter<"CommunityMembership"> | string
    community_id?: StringFilter<"CommunityMembership"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    community?: XOR<CommunityScalarRelationFilter, CommunityWhereInput>
  }, "membership_id" | "user_id_community_id">

  export type CommunityMembershipOrderByWithAggregationInput = {
    membership_id?: SortOrder
    role?: SortOrder
    joined_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    _count?: CommunityMembershipCountOrderByAggregateInput
    _max?: CommunityMembershipMaxOrderByAggregateInput
    _min?: CommunityMembershipMinOrderByAggregateInput
  }

  export type CommunityMembershipScalarWhereWithAggregatesInput = {
    AND?: CommunityMembershipScalarWhereWithAggregatesInput | CommunityMembershipScalarWhereWithAggregatesInput[]
    OR?: CommunityMembershipScalarWhereWithAggregatesInput[]
    NOT?: CommunityMembershipScalarWhereWithAggregatesInput | CommunityMembershipScalarWhereWithAggregatesInput[]
    membership_id?: StringWithAggregatesFilter<"CommunityMembership"> | string
    role?: EnumMembershipRoleWithAggregatesFilter<"CommunityMembership"> | $Enums.MembershipRole
    joined_at?: DateTimeWithAggregatesFilter<"CommunityMembership"> | Date | string
    user_id?: StringWithAggregatesFilter<"CommunityMembership"> | string
    community_id?: StringWithAggregatesFilter<"CommunityMembership"> | string
  }

  export type ModeratorWhereInput = {
    AND?: ModeratorWhereInput | ModeratorWhereInput[]
    OR?: ModeratorWhereInput[]
    NOT?: ModeratorWhereInput | ModeratorWhereInput[]
    moderator_id?: StringFilter<"Moderator"> | string
    permissions?: JsonNullableFilter<"Moderator">
    appointed_at?: DateTimeFilter<"Moderator"> | Date | string
    user_id?: StringFilter<"Moderator"> | string
    community_id?: StringFilter<"Moderator"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    community?: XOR<CommunityScalarRelationFilter, CommunityWhereInput>
  }

  export type ModeratorOrderByWithRelationInput = {
    moderator_id?: SortOrder
    permissions?: SortOrderInput | SortOrder
    appointed_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    user?: UserOrderByWithRelationInput
    community?: CommunityOrderByWithRelationInput
  }

  export type ModeratorWhereUniqueInput = Prisma.AtLeast<{
    moderator_id?: string
    user_id_community_id?: ModeratorUser_idCommunity_idCompoundUniqueInput
    AND?: ModeratorWhereInput | ModeratorWhereInput[]
    OR?: ModeratorWhereInput[]
    NOT?: ModeratorWhereInput | ModeratorWhereInput[]
    permissions?: JsonNullableFilter<"Moderator">
    appointed_at?: DateTimeFilter<"Moderator"> | Date | string
    user_id?: StringFilter<"Moderator"> | string
    community_id?: StringFilter<"Moderator"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    community?: XOR<CommunityScalarRelationFilter, CommunityWhereInput>
  }, "moderator_id" | "user_id_community_id">

  export type ModeratorOrderByWithAggregationInput = {
    moderator_id?: SortOrder
    permissions?: SortOrderInput | SortOrder
    appointed_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
    _count?: ModeratorCountOrderByAggregateInput
    _max?: ModeratorMaxOrderByAggregateInput
    _min?: ModeratorMinOrderByAggregateInput
  }

  export type ModeratorScalarWhereWithAggregatesInput = {
    AND?: ModeratorScalarWhereWithAggregatesInput | ModeratorScalarWhereWithAggregatesInput[]
    OR?: ModeratorScalarWhereWithAggregatesInput[]
    NOT?: ModeratorScalarWhereWithAggregatesInput | ModeratorScalarWhereWithAggregatesInput[]
    moderator_id?: StringWithAggregatesFilter<"Moderator"> | string
    permissions?: JsonNullableWithAggregatesFilter<"Moderator">
    appointed_at?: DateTimeWithAggregatesFilter<"Moderator"> | Date | string
    user_id?: StringWithAggregatesFilter<"Moderator"> | string
    community_id?: StringWithAggregatesFilter<"Moderator"> | string
  }

  export type UserUnitEnrollmentWhereInput = {
    AND?: UserUnitEnrollmentWhereInput | UserUnitEnrollmentWhereInput[]
    OR?: UserUnitEnrollmentWhereInput[]
    NOT?: UserUnitEnrollmentWhereInput | UserUnitEnrollmentWhereInput[]
    enrollment_id?: StringFilter<"UserUnitEnrollment"> | string
    enrollment_year?: IntFilter<"UserUnitEnrollment"> | number
    enrollment_semester?: StringFilter<"UserUnitEnrollment"> | string
    status?: EnumEnrollmentStatusFilter<"UserUnitEnrollment"> | $Enums.EnrollmentStatus
    user_id?: StringFilter<"UserUnitEnrollment"> | string
    unit_id?: StringFilter<"UserUnitEnrollment"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    unit?: XOR<UnitScalarRelationFilter, UnitWhereInput>
  }

  export type UserUnitEnrollmentOrderByWithRelationInput = {
    enrollment_id?: SortOrder
    enrollment_year?: SortOrder
    enrollment_semester?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    unit_id?: SortOrder
    user?: UserOrderByWithRelationInput
    unit?: UnitOrderByWithRelationInput
  }

  export type UserUnitEnrollmentWhereUniqueInput = Prisma.AtLeast<{
    enrollment_id?: string
    user_id_unit_id_enrollment_year_enrollment_semester?: UserUnitEnrollmentUser_idUnit_idEnrollment_yearEnrollment_semesterCompoundUniqueInput
    AND?: UserUnitEnrollmentWhereInput | UserUnitEnrollmentWhereInput[]
    OR?: UserUnitEnrollmentWhereInput[]
    NOT?: UserUnitEnrollmentWhereInput | UserUnitEnrollmentWhereInput[]
    enrollment_year?: IntFilter<"UserUnitEnrollment"> | number
    enrollment_semester?: StringFilter<"UserUnitEnrollment"> | string
    status?: EnumEnrollmentStatusFilter<"UserUnitEnrollment"> | $Enums.EnrollmentStatus
    user_id?: StringFilter<"UserUnitEnrollment"> | string
    unit_id?: StringFilter<"UserUnitEnrollment"> | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    unit?: XOR<UnitScalarRelationFilter, UnitWhereInput>
  }, "enrollment_id" | "user_id_unit_id_enrollment_year_enrollment_semester">

  export type UserUnitEnrollmentOrderByWithAggregationInput = {
    enrollment_id?: SortOrder
    enrollment_year?: SortOrder
    enrollment_semester?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    unit_id?: SortOrder
    _count?: UserUnitEnrollmentCountOrderByAggregateInput
    _avg?: UserUnitEnrollmentAvgOrderByAggregateInput
    _max?: UserUnitEnrollmentMaxOrderByAggregateInput
    _min?: UserUnitEnrollmentMinOrderByAggregateInput
    _sum?: UserUnitEnrollmentSumOrderByAggregateInput
  }

  export type UserUnitEnrollmentScalarWhereWithAggregatesInput = {
    AND?: UserUnitEnrollmentScalarWhereWithAggregatesInput | UserUnitEnrollmentScalarWhereWithAggregatesInput[]
    OR?: UserUnitEnrollmentScalarWhereWithAggregatesInput[]
    NOT?: UserUnitEnrollmentScalarWhereWithAggregatesInput | UserUnitEnrollmentScalarWhereWithAggregatesInput[]
    enrollment_id?: StringWithAggregatesFilter<"UserUnitEnrollment"> | string
    enrollment_year?: IntWithAggregatesFilter<"UserUnitEnrollment"> | number
    enrollment_semester?: StringWithAggregatesFilter<"UserUnitEnrollment"> | string
    status?: EnumEnrollmentStatusWithAggregatesFilter<"UserUnitEnrollment"> | $Enums.EnrollmentStatus
    user_id?: StringWithAggregatesFilter<"UserUnitEnrollment"> | string
    unit_id?: StringWithAggregatesFilter<"UserUnitEnrollment"> | string
  }

  export type SavedContentWhereInput = {
    AND?: SavedContentWhereInput | SavedContentWhereInput[]
    OR?: SavedContentWhereInput[]
    NOT?: SavedContentWhereInput | SavedContentWhereInput[]
    saved_id?: StringFilter<"SavedContent"> | string
    saved_at?: DateTimeFilter<"SavedContent"> | Date | string
    user_id?: StringFilter<"SavedContent"> | string
    post_id?: StringNullableFilter<"SavedContent"> | string | null
    comment_id?: StringNullableFilter<"SavedContent"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    post?: XOR<PostNullableScalarRelationFilter, PostWhereInput> | null
    comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
  }

  export type SavedContentOrderByWithRelationInput = {
    saved_id?: SortOrder
    saved_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrderInput | SortOrder
    comment_id?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    post?: PostOrderByWithRelationInput
    comment?: CommentOrderByWithRelationInput
  }

  export type SavedContentWhereUniqueInput = Prisma.AtLeast<{
    saved_id?: string
    UserSavedPost?: SavedContentUserSavedPostCompoundUniqueInput
    UserSavedComment?: SavedContentUserSavedCommentCompoundUniqueInput
    AND?: SavedContentWhereInput | SavedContentWhereInput[]
    OR?: SavedContentWhereInput[]
    NOT?: SavedContentWhereInput | SavedContentWhereInput[]
    saved_at?: DateTimeFilter<"SavedContent"> | Date | string
    user_id?: StringFilter<"SavedContent"> | string
    post_id?: StringNullableFilter<"SavedContent"> | string | null
    comment_id?: StringNullableFilter<"SavedContent"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    post?: XOR<PostNullableScalarRelationFilter, PostWhereInput> | null
    comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
  }, "saved_id" | "UserSavedPost" | "UserSavedComment">

  export type SavedContentOrderByWithAggregationInput = {
    saved_id?: SortOrder
    saved_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrderInput | SortOrder
    comment_id?: SortOrderInput | SortOrder
    _count?: SavedContentCountOrderByAggregateInput
    _max?: SavedContentMaxOrderByAggregateInput
    _min?: SavedContentMinOrderByAggregateInput
  }

  export type SavedContentScalarWhereWithAggregatesInput = {
    AND?: SavedContentScalarWhereWithAggregatesInput | SavedContentScalarWhereWithAggregatesInput[]
    OR?: SavedContentScalarWhereWithAggregatesInput[]
    NOT?: SavedContentScalarWhereWithAggregatesInput | SavedContentScalarWhereWithAggregatesInput[]
    saved_id?: StringWithAggregatesFilter<"SavedContent"> | string
    saved_at?: DateTimeWithAggregatesFilter<"SavedContent"> | Date | string
    user_id?: StringWithAggregatesFilter<"SavedContent"> | string
    post_id?: StringNullableWithAggregatesFilter<"SavedContent"> | string | null
    comment_id?: StringNullableWithAggregatesFilter<"SavedContent"> | string | null
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    notification_id?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    content_preview?: StringNullableFilter<"Notification"> | string | null
    is_read?: BoolFilter<"Notification"> | boolean
    created_at?: DateTimeFilter<"Notification"> | Date | string
    recipient_user_id?: StringFilter<"Notification"> | string
    sender_user_id?: StringNullableFilter<"Notification"> | string | null
    related_post_id?: StringNullableFilter<"Notification"> | string | null
    related_comment_id?: StringNullableFilter<"Notification"> | string | null
    related_community_id?: StringNullableFilter<"Notification"> | string | null
    recipient?: XOR<UserScalarRelationFilter, UserWhereInput>
    sender?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    related_post?: XOR<PostNullableScalarRelationFilter, PostWhereInput> | null
    related_comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
    related_community?: XOR<CommunityNullableScalarRelationFilter, CommunityWhereInput> | null
  }

  export type NotificationOrderByWithRelationInput = {
    notification_id?: SortOrder
    type?: SortOrder
    content_preview?: SortOrderInput | SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    recipient_user_id?: SortOrder
    sender_user_id?: SortOrderInput | SortOrder
    related_post_id?: SortOrderInput | SortOrder
    related_comment_id?: SortOrderInput | SortOrder
    related_community_id?: SortOrderInput | SortOrder
    recipient?: UserOrderByWithRelationInput
    sender?: UserOrderByWithRelationInput
    related_post?: PostOrderByWithRelationInput
    related_comment?: CommentOrderByWithRelationInput
    related_community?: CommunityOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    notification_id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    content_preview?: StringNullableFilter<"Notification"> | string | null
    is_read?: BoolFilter<"Notification"> | boolean
    created_at?: DateTimeFilter<"Notification"> | Date | string
    recipient_user_id?: StringFilter<"Notification"> | string
    sender_user_id?: StringNullableFilter<"Notification"> | string | null
    related_post_id?: StringNullableFilter<"Notification"> | string | null
    related_comment_id?: StringNullableFilter<"Notification"> | string | null
    related_community_id?: StringNullableFilter<"Notification"> | string | null
    recipient?: XOR<UserScalarRelationFilter, UserWhereInput>
    sender?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    related_post?: XOR<PostNullableScalarRelationFilter, PostWhereInput> | null
    related_comment?: XOR<CommentNullableScalarRelationFilter, CommentWhereInput> | null
    related_community?: XOR<CommunityNullableScalarRelationFilter, CommunityWhereInput> | null
  }, "notification_id">

  export type NotificationOrderByWithAggregationInput = {
    notification_id?: SortOrder
    type?: SortOrder
    content_preview?: SortOrderInput | SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    recipient_user_id?: SortOrder
    sender_user_id?: SortOrderInput | SortOrder
    related_post_id?: SortOrderInput | SortOrder
    related_comment_id?: SortOrderInput | SortOrder
    related_community_id?: SortOrderInput | SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    notification_id?: StringWithAggregatesFilter<"Notification"> | string
    type?: EnumNotificationTypeWithAggregatesFilter<"Notification"> | $Enums.NotificationType
    content_preview?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    is_read?: BoolWithAggregatesFilter<"Notification"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
    recipient_user_id?: StringWithAggregatesFilter<"Notification"> | string
    sender_user_id?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    related_post_id?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    related_comment_id?: StringNullableWithAggregatesFilter<"Notification"> | string | null
    related_community_id?: StringNullableWithAggregatesFilter<"Notification"> | string | null
  }

  export type UserCreateInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type UserCreateManyInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
  }

  export type UserUpdateManyMutationInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CampusCreateInput = {
    campus_id?: string
    campus_name: string
    location_details?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserCreateNestedManyWithoutCampusInput
    communities?: CommunityCreateNestedManyWithoutRelated_campusInput
  }

  export type CampusUncheckedCreateInput = {
    campus_id?: string
    campus_name: string
    location_details?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCampusInput
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_campusInput
  }

  export type CampusUpdateInput = {
    campus_id?: StringFieldUpdateOperationsInput | string
    campus_name?: StringFieldUpdateOperationsInput | string
    location_details?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCampusNestedInput
    communities?: CommunityUpdateManyWithoutRelated_campusNestedInput
  }

  export type CampusUncheckedUpdateInput = {
    campus_id?: StringFieldUpdateOperationsInput | string
    campus_name?: StringFieldUpdateOperationsInput | string
    location_details?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCampusNestedInput
    communities?: CommunityUncheckedUpdateManyWithoutRelated_campusNestedInput
  }

  export type CampusCreateManyInput = {
    campus_id?: string
    campus_name: string
    location_details?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CampusUpdateManyMutationInput = {
    campus_id?: StringFieldUpdateOperationsInput | string
    campus_name?: StringFieldUpdateOperationsInput | string
    location_details?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampusUncheckedUpdateManyInput = {
    campus_id?: StringFieldUpdateOperationsInput | string
    campus_name?: StringFieldUpdateOperationsInput | string
    location_details?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FacultyCreateInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserCreateNestedManyWithoutFacultyInput
    courses?: CourseCreateNestedManyWithoutFacultyInput
    units?: UnitCreateNestedManyWithoutFacultyInput
    communities?: CommunityCreateNestedManyWithoutRelated_facultyInput
  }

  export type FacultyUncheckedCreateInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutFacultyInput
    courses?: CourseUncheckedCreateNestedManyWithoutFacultyInput
    units?: UnitUncheckedCreateNestedManyWithoutFacultyInput
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_facultyInput
  }

  export type FacultyUpdateInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutFacultyNestedInput
    courses?: CourseUpdateManyWithoutFacultyNestedInput
    units?: UnitUpdateManyWithoutFacultyNestedInput
    communities?: CommunityUpdateManyWithoutRelated_facultyNestedInput
  }

  export type FacultyUncheckedUpdateInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutFacultyNestedInput
    courses?: CourseUncheckedUpdateManyWithoutFacultyNestedInput
    units?: UnitUncheckedUpdateManyWithoutFacultyNestedInput
    communities?: CommunityUncheckedUpdateManyWithoutRelated_facultyNestedInput
  }

  export type FacultyCreateManyInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type FacultyUpdateManyMutationInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FacultyUncheckedUpdateManyInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CourseCreateInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty: FacultyCreateNestedOneWithoutCoursesInput
    users?: UserCreateNestedManyWithoutCourseInput
    communities?: CommunityCreateNestedManyWithoutRelated_courseInput
  }

  export type CourseUncheckedCreateInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id: string
    users?: UserUncheckedCreateNestedManyWithoutCourseInput
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_courseInput
  }

  export type CourseUpdateInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty?: FacultyUpdateOneRequiredWithoutCoursesNestedInput
    users?: UserUpdateManyWithoutCourseNestedInput
    communities?: CommunityUpdateManyWithoutRelated_courseNestedInput
  }

  export type CourseUncheckedUpdateInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: StringFieldUpdateOperationsInput | string
    users?: UserUncheckedUpdateManyWithoutCourseNestedInput
    communities?: CommunityUncheckedUpdateManyWithoutRelated_courseNestedInput
  }

  export type CourseCreateManyInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id: string
  }

  export type CourseUpdateManyMutationInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CourseUncheckedUpdateManyInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: StringFieldUpdateOperationsInput | string
  }

  export type UnitCreateInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty?: FacultyCreateNestedOneWithoutUnitsInput
    communities?: CommunityCreateNestedManyWithoutRelated_unitInput
    user_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUnitInput
  }

  export type UnitUncheckedCreateInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id?: string | null
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_unitInput
    user_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUnitInput
  }

  export type UnitUpdateInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty?: FacultyUpdateOneWithoutUnitsNestedInput
    communities?: CommunityUpdateManyWithoutRelated_unitNestedInput
    user_enrollments?: UserUnitEnrollmentUpdateManyWithoutUnitNestedInput
  }

  export type UnitUncheckedUpdateInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    communities?: CommunityUncheckedUpdateManyWithoutRelated_unitNestedInput
    user_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type UnitCreateManyInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id?: string | null
  }

  export type UnitUpdateManyMutationInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnitUncheckedUpdateManyInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunityCreateInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator: UserCreateNestedOneWithoutCreated_communitiesInput
    related_campus?: CampusCreateNestedOneWithoutCommunitiesInput
    related_faculty?: FacultyCreateNestedOneWithoutCommunitiesInput
    related_course?: CourseCreateNestedOneWithoutCommunitiesInput
    related_unit?: UnitCreateNestedOneWithoutCommunitiesInput
    posts?: PostCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorCreateNestedManyWithoutCommunityInput
    notifications?: NotificationCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUncheckedCreateInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorUncheckedCreateNestedManyWithoutCommunityInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUpdateInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreated_communitiesNestedInput
    related_campus?: CampusUpdateOneWithoutCommunitiesNestedInput
    related_faculty?: FacultyUpdateOneWithoutCommunitiesNestedInput
    related_course?: CourseUpdateOneWithoutCommunitiesNestedInput
    related_unit?: UnitUpdateOneWithoutCommunitiesNestedInput
    posts?: PostUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUncheckedUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityCreateManyInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
  }

  export type CommunityUpdateManyMutationInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunityUncheckedUpdateManyInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PostCreateInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    author: UserCreateNestedOneWithoutPostsInput
    community: CommunityCreateNestedOneWithoutPostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    votes?: VoteCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentCreateNestedManyWithoutPostInput
    notifications?: NotificationCreateNestedManyWithoutRelated_postInput
  }

  export type PostUncheckedCreateInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    community_id: string
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    votes?: VoteUncheckedCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutPostInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_postInput
  }

  export type PostUpdateInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    community?: CommunityUpdateOneRequiredWithoutPostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    votes?: VoteUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutPostNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_postNestedInput
  }

  export type PostUncheckedUpdateInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    votes?: VoteUncheckedUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutPostNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_postNestedInput
  }

  export type PostCreateManyInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    community_id: string
  }

  export type PostUpdateManyMutationInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostUncheckedUpdateManyInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type CommentCreateInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post: PostCreateNestedOneWithoutCommentsInput
    author: UserCreateNestedOneWithoutCommentsInput
    parent_comment?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParent_commentInput
    votes?: VoteCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentCreateNestedManyWithoutCommentInput
    notifications?: NotificationCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentUncheckedCreateInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    user_id: string
    parent_comment_id?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParent_commentInput
    votes?: VoteUncheckedCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutCommentInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentUpdateInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    author?: UserUpdateOneRequiredWithoutCommentsNestedInput
    parent_comment?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUncheckedUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentCreateManyInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    user_id: string
    parent_comment_id?: string | null
  }

  export type CommentUpdateManyMutationInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommentUncheckedUpdateManyInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VoteCreateInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    user: UserCreateNestedOneWithoutVotesInput
    post?: PostCreateNestedOneWithoutVotesInput
    comment?: CommentCreateNestedOneWithoutVotesInput
  }

  export type VoteUncheckedCreateInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    user_id: string
    post_id?: string | null
    comment_id?: string | null
  }

  export type VoteUpdateInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutVotesNestedInput
    post?: PostUpdateOneWithoutVotesNestedInput
    comment?: CommentUpdateOneWithoutVotesNestedInput
  }

  export type VoteUncheckedUpdateInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VoteCreateManyInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    user_id: string
    post_id?: string | null
    comment_id?: string | null
  }

  export type VoteUpdateManyMutationInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VoteUncheckedUpdateManyInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunityMembershipCreateInput = {
    membership_id?: string
    role?: $Enums.MembershipRole
    joined_at?: Date | string
    user: UserCreateNestedOneWithoutMembershipsInput
    community: CommunityCreateNestedOneWithoutMembersInput
  }

  export type CommunityMembershipUncheckedCreateInput = {
    membership_id?: string
    role?: $Enums.MembershipRole
    joined_at?: Date | string
    user_id: string
    community_id: string
  }

  export type CommunityMembershipUpdateInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutMembershipsNestedInput
    community?: CommunityUpdateOneRequiredWithoutMembersNestedInput
  }

  export type CommunityMembershipUncheckedUpdateInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type CommunityMembershipCreateManyInput = {
    membership_id?: string
    role?: $Enums.MembershipRole
    joined_at?: Date | string
    user_id: string
    community_id: string
  }

  export type CommunityMembershipUpdateManyMutationInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunityMembershipUncheckedUpdateManyInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type ModeratorCreateInput = {
    moderator_id?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: Date | string
    user: UserCreateNestedOneWithoutModerated_communitiesInput
    community: CommunityCreateNestedOneWithoutModeratorsInput
  }

  export type ModeratorUncheckedCreateInput = {
    moderator_id?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: Date | string
    user_id: string
    community_id: string
  }

  export type ModeratorUpdateInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutModerated_communitiesNestedInput
    community?: CommunityUpdateOneRequiredWithoutModeratorsNestedInput
  }

  export type ModeratorUncheckedUpdateInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type ModeratorCreateManyInput = {
    moderator_id?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: Date | string
    user_id: string
    community_id: string
  }

  export type ModeratorUpdateManyMutationInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModeratorUncheckedUpdateManyInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserUnitEnrollmentCreateInput = {
    enrollment_id?: string
    enrollment_year: number
    enrollment_semester: string
    status?: $Enums.EnrollmentStatus
    user: UserCreateNestedOneWithoutUnit_enrollmentsInput
    unit: UnitCreateNestedOneWithoutUser_enrollmentsInput
  }

  export type UserUnitEnrollmentUncheckedCreateInput = {
    enrollment_id?: string
    enrollment_year: number
    enrollment_semester: string
    status?: $Enums.EnrollmentStatus
    user_id: string
    unit_id: string
  }

  export type UserUnitEnrollmentUpdateInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    user?: UserUpdateOneRequiredWithoutUnit_enrollmentsNestedInput
    unit?: UnitUpdateOneRequiredWithoutUser_enrollmentsNestedInput
  }

  export type UserUnitEnrollmentUncheckedUpdateInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    user_id?: StringFieldUpdateOperationsInput | string
    unit_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserUnitEnrollmentCreateManyInput = {
    enrollment_id?: string
    enrollment_year: number
    enrollment_semester: string
    status?: $Enums.EnrollmentStatus
    user_id: string
    unit_id: string
  }

  export type UserUnitEnrollmentUpdateManyMutationInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
  }

  export type UserUnitEnrollmentUncheckedUpdateManyInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    user_id?: StringFieldUpdateOperationsInput | string
    unit_id?: StringFieldUpdateOperationsInput | string
  }

  export type SavedContentCreateInput = {
    saved_id?: string
    saved_at?: Date | string
    user: UserCreateNestedOneWithoutSaved_contentInput
    post?: PostCreateNestedOneWithoutSaved_by_usersInput
    comment?: CommentCreateNestedOneWithoutSaved_by_usersInput
  }

  export type SavedContentUncheckedCreateInput = {
    saved_id?: string
    saved_at?: Date | string
    user_id: string
    post_id?: string | null
    comment_id?: string | null
  }

  export type SavedContentUpdateInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSaved_contentNestedInput
    post?: PostUpdateOneWithoutSaved_by_usersNestedInput
    comment?: CommentUpdateOneWithoutSaved_by_usersNestedInput
  }

  export type SavedContentUncheckedUpdateInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SavedContentCreateManyInput = {
    saved_id?: string
    saved_at?: Date | string
    user_id: string
    post_id?: string | null
    comment_id?: string | null
  }

  export type SavedContentUpdateManyMutationInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SavedContentUncheckedUpdateManyInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationCreateInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient: UserCreateNestedOneWithoutNotifications_receivedInput
    sender?: UserCreateNestedOneWithoutNotifications_sentInput
    related_post?: PostCreateNestedOneWithoutNotificationsInput
    related_comment?: CommentCreateNestedOneWithoutNotificationsInput
    related_community?: CommunityCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    sender_user_id?: string | null
    related_post_id?: string | null
    related_comment_id?: string | null
    related_community_id?: string | null
  }

  export type NotificationUpdateInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient?: UserUpdateOneRequiredWithoutNotifications_receivedNestedInput
    sender?: UserUpdateOneWithoutNotifications_sentNestedInput
    related_post?: PostUpdateOneWithoutNotificationsNestedInput
    related_comment?: CommentUpdateOneWithoutNotificationsNestedInput
    related_community?: CommunityUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationCreateManyInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    sender_user_id?: string | null
    related_post_id?: string | null
    related_comment_id?: string | null
    related_community_id?: string | null
  }

  export type NotificationUpdateManyMutationInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type CampusNullableScalarRelationFilter = {
    is?: CampusWhereInput | null
    isNot?: CampusWhereInput | null
  }

  export type FacultyNullableScalarRelationFilter = {
    is?: FacultyWhereInput | null
    isNot?: FacultyWhereInput | null
  }

  export type CourseNullableScalarRelationFilter = {
    is?: CourseWhereInput | null
    isNot?: CourseWhereInput | null
  }

  export type CommunityListRelationFilter = {
    every?: CommunityWhereInput
    some?: CommunityWhereInput
    none?: CommunityWhereInput
  }

  export type PostListRelationFilter = {
    every?: PostWhereInput
    some?: PostWhereInput
    none?: PostWhereInput
  }

  export type CommentListRelationFilter = {
    every?: CommentWhereInput
    some?: CommentWhereInput
    none?: CommentWhereInput
  }

  export type VoteListRelationFilter = {
    every?: VoteWhereInput
    some?: VoteWhereInput
    none?: VoteWhereInput
  }

  export type CommunityMembershipListRelationFilter = {
    every?: CommunityMembershipWhereInput
    some?: CommunityMembershipWhereInput
    none?: CommunityMembershipWhereInput
  }

  export type ModeratorListRelationFilter = {
    every?: ModeratorWhereInput
    some?: ModeratorWhereInput
    none?: ModeratorWhereInput
  }

  export type UserUnitEnrollmentListRelationFilter = {
    every?: UserUnitEnrollmentWhereInput
    some?: UserUnitEnrollmentWhereInput
    none?: UserUnitEnrollmentWhereInput
  }

  export type SavedContentListRelationFilter = {
    every?: SavedContentWhereInput
    some?: SavedContentWhereInput
    none?: SavedContentWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CommunityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PostOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VoteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommunityMembershipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ModeratorOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserUnitEnrollmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SavedContentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    user_id?: SortOrder
    monash_email?: SortOrder
    username?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    profile_picture_url?: SortOrder
    bio?: SortOrder
    karma_points?: SortOrder
    year_of_study?: SortOrder
    is_verified_student?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    campus_id?: SortOrder
    faculty_id?: SortOrder
    course_id?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    karma_points?: SortOrder
    year_of_study?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    user_id?: SortOrder
    monash_email?: SortOrder
    username?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    profile_picture_url?: SortOrder
    bio?: SortOrder
    karma_points?: SortOrder
    year_of_study?: SortOrder
    is_verified_student?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    campus_id?: SortOrder
    faculty_id?: SortOrder
    course_id?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    user_id?: SortOrder
    monash_email?: SortOrder
    username?: SortOrder
    password_hash?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    profile_picture_url?: SortOrder
    bio?: SortOrder
    karma_points?: SortOrder
    year_of_study?: SortOrder
    is_verified_student?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    campus_id?: SortOrder
    faculty_id?: SortOrder
    course_id?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    karma_points?: SortOrder
    year_of_study?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CampusCountOrderByAggregateInput = {
    campus_id?: SortOrder
    campus_name?: SortOrder
    location_details?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CampusMaxOrderByAggregateInput = {
    campus_id?: SortOrder
    campus_name?: SortOrder
    location_details?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CampusMinOrderByAggregateInput = {
    campus_id?: SortOrder
    campus_name?: SortOrder
    location_details?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type CourseListRelationFilter = {
    every?: CourseWhereInput
    some?: CourseWhereInput
    none?: CourseWhereInput
  }

  export type UnitListRelationFilter = {
    every?: UnitWhereInput
    some?: UnitWhereInput
    none?: UnitWhereInput
  }

  export type CourseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UnitOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FacultyCountOrderByAggregateInput = {
    faculty_id?: SortOrder
    faculty_name?: SortOrder
    faculty_abbreviation?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type FacultyMaxOrderByAggregateInput = {
    faculty_id?: SortOrder
    faculty_name?: SortOrder
    faculty_abbreviation?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type FacultyMinOrderByAggregateInput = {
    faculty_id?: SortOrder
    faculty_name?: SortOrder
    faculty_abbreviation?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type FacultyScalarRelationFilter = {
    is?: FacultyWhereInput
    isNot?: FacultyWhereInput
  }

  export type CourseCountOrderByAggregateInput = {
    course_id?: SortOrder
    course_code?: SortOrder
    course_name?: SortOrder
    course_description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrder
  }

  export type CourseMaxOrderByAggregateInput = {
    course_id?: SortOrder
    course_code?: SortOrder
    course_name?: SortOrder
    course_description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrder
  }

  export type CourseMinOrderByAggregateInput = {
    course_id?: SortOrder
    course_code?: SortOrder
    course_name?: SortOrder
    course_description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrder
  }

  export type UnitCountOrderByAggregateInput = {
    unit_id?: SortOrder
    unit_code?: SortOrder
    unit_name?: SortOrder
    unit_description?: SortOrder
    semester_offered?: SortOrder
    year_level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrder
  }

  export type UnitAvgOrderByAggregateInput = {
    year_level?: SortOrder
  }

  export type UnitMaxOrderByAggregateInput = {
    unit_id?: SortOrder
    unit_code?: SortOrder
    unit_name?: SortOrder
    unit_description?: SortOrder
    semester_offered?: SortOrder
    year_level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrder
  }

  export type UnitMinOrderByAggregateInput = {
    unit_id?: SortOrder
    unit_code?: SortOrder
    unit_name?: SortOrder
    unit_description?: SortOrder
    semester_offered?: SortOrder
    year_level?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    faculty_id?: SortOrder
  }

  export type UnitSumOrderByAggregateInput = {
    year_level?: SortOrder
  }

  export type EnumCommunityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CommunityType | EnumCommunityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommunityType[] | ListEnumCommunityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CommunityType[] | ListEnumCommunityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCommunityTypeFilter<$PrismaModel> | $Enums.CommunityType
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UnitNullableScalarRelationFilter = {
    is?: UnitWhereInput | null
    isNot?: UnitWhereInput | null
  }

  export type CommunityCountOrderByAggregateInput = {
    community_id?: SortOrder
    name?: SortOrder
    display_name?: SortOrder
    description?: SortOrder
    community_type?: SortOrder
    profile_image_url?: SortOrder
    banner_image_url?: SortOrder
    is_private?: SortOrder
    rules?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    creator_id?: SortOrder
    related_campus_id?: SortOrder
    related_faculty_id?: SortOrder
    related_course_id?: SortOrder
    related_unit_id?: SortOrder
  }

  export type CommunityMaxOrderByAggregateInput = {
    community_id?: SortOrder
    name?: SortOrder
    display_name?: SortOrder
    description?: SortOrder
    community_type?: SortOrder
    profile_image_url?: SortOrder
    banner_image_url?: SortOrder
    is_private?: SortOrder
    rules?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    creator_id?: SortOrder
    related_campus_id?: SortOrder
    related_faculty_id?: SortOrder
    related_course_id?: SortOrder
    related_unit_id?: SortOrder
  }

  export type CommunityMinOrderByAggregateInput = {
    community_id?: SortOrder
    name?: SortOrder
    display_name?: SortOrder
    description?: SortOrder
    community_type?: SortOrder
    profile_image_url?: SortOrder
    banner_image_url?: SortOrder
    is_private?: SortOrder
    rules?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    creator_id?: SortOrder
    related_campus_id?: SortOrder
    related_faculty_id?: SortOrder
    related_course_id?: SortOrder
    related_unit_id?: SortOrder
  }

  export type EnumCommunityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CommunityType | EnumCommunityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommunityType[] | ListEnumCommunityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CommunityType[] | ListEnumCommunityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCommunityTypeWithAggregatesFilter<$PrismaModel> | $Enums.CommunityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCommunityTypeFilter<$PrismaModel>
    _max?: NestedEnumCommunityTypeFilter<$PrismaModel>
  }

  export type EnumPostContentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PostContentType | EnumPostContentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PostContentType[] | ListEnumPostContentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PostContentType[] | ListEnumPostContentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPostContentTypeFilter<$PrismaModel> | $Enums.PostContentType
  }

  export type CommunityScalarRelationFilter = {
    is?: CommunityWhereInput
    isNot?: CommunityWhereInput
  }

  export type PostCountOrderByAggregateInput = {
    post_id?: SortOrder
    title?: SortOrder
    content_type?: SortOrder
    text_content?: SortOrder
    media_url?: SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    flair_text?: SortOrder
    is_stickied?: SortOrder
    is_locked?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
  }

  export type PostAvgOrderByAggregateInput = {
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
  }

  export type PostMaxOrderByAggregateInput = {
    post_id?: SortOrder
    title?: SortOrder
    content_type?: SortOrder
    text_content?: SortOrder
    media_url?: SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    flair_text?: SortOrder
    is_stickied?: SortOrder
    is_locked?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
  }

  export type PostMinOrderByAggregateInput = {
    post_id?: SortOrder
    title?: SortOrder
    content_type?: SortOrder
    text_content?: SortOrder
    media_url?: SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    flair_text?: SortOrder
    is_stickied?: SortOrder
    is_locked?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
  }

  export type PostSumOrderByAggregateInput = {
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
  }

  export type EnumPostContentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PostContentType | EnumPostContentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PostContentType[] | ListEnumPostContentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PostContentType[] | ListEnumPostContentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPostContentTypeWithAggregatesFilter<$PrismaModel> | $Enums.PostContentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPostContentTypeFilter<$PrismaModel>
    _max?: NestedEnumPostContentTypeFilter<$PrismaModel>
  }

  export type PostScalarRelationFilter = {
    is?: PostWhereInput
    isNot?: PostWhereInput
  }

  export type CommentNullableScalarRelationFilter = {
    is?: CommentWhereInput | null
    isNot?: CommentWhereInput | null
  }

  export type CommentCountOrderByAggregateInput = {
    comment_id?: SortOrder
    content?: SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    parent_comment_id?: SortOrder
  }

  export type CommentAvgOrderByAggregateInput = {
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
  }

  export type CommentMaxOrderByAggregateInput = {
    comment_id?: SortOrder
    content?: SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    parent_comment_id?: SortOrder
  }

  export type CommentMinOrderByAggregateInput = {
    comment_id?: SortOrder
    content?: SortOrder
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
    is_deleted?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    post_id?: SortOrder
    user_id?: SortOrder
    parent_comment_id?: SortOrder
  }

  export type CommentSumOrderByAggregateInput = {
    upvotes?: SortOrder
    downvotes?: SortOrder
    score?: SortOrder
  }

  export type EnumVoteTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VoteType | EnumVoteTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VoteType[] | ListEnumVoteTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VoteType[] | ListEnumVoteTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVoteTypeFilter<$PrismaModel> | $Enums.VoteType
  }

  export type PostNullableScalarRelationFilter = {
    is?: PostWhereInput | null
    isNot?: PostWhereInput | null
  }

  export type VoteUserPostVoteCompoundUniqueInput = {
    user_id: string
    post_id: string
  }

  export type VoteUserCommentVoteCompoundUniqueInput = {
    user_id: string
    comment_id: string
  }

  export type VoteCountOrderByAggregateInput = {
    vote_id?: SortOrder
    vote_type?: SortOrder
    created_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    comment_id?: SortOrder
  }

  export type VoteMaxOrderByAggregateInput = {
    vote_id?: SortOrder
    vote_type?: SortOrder
    created_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    comment_id?: SortOrder
  }

  export type VoteMinOrderByAggregateInput = {
    vote_id?: SortOrder
    vote_type?: SortOrder
    created_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    comment_id?: SortOrder
  }

  export type EnumVoteTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VoteType | EnumVoteTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VoteType[] | ListEnumVoteTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VoteType[] | ListEnumVoteTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVoteTypeWithAggregatesFilter<$PrismaModel> | $Enums.VoteType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVoteTypeFilter<$PrismaModel>
    _max?: NestedEnumVoteTypeFilter<$PrismaModel>
  }

  export type EnumMembershipRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.MembershipRole | EnumMembershipRoleFieldRefInput<$PrismaModel>
    in?: $Enums.MembershipRole[] | ListEnumMembershipRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.MembershipRole[] | ListEnumMembershipRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumMembershipRoleFilter<$PrismaModel> | $Enums.MembershipRole
  }

  export type CommunityMembershipUser_idCommunity_idCompoundUniqueInput = {
    user_id: string
    community_id: string
  }

  export type CommunityMembershipCountOrderByAggregateInput = {
    membership_id?: SortOrder
    role?: SortOrder
    joined_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
  }

  export type CommunityMembershipMaxOrderByAggregateInput = {
    membership_id?: SortOrder
    role?: SortOrder
    joined_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
  }

  export type CommunityMembershipMinOrderByAggregateInput = {
    membership_id?: SortOrder
    role?: SortOrder
    joined_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
  }

  export type EnumMembershipRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MembershipRole | EnumMembershipRoleFieldRefInput<$PrismaModel>
    in?: $Enums.MembershipRole[] | ListEnumMembershipRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.MembershipRole[] | ListEnumMembershipRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumMembershipRoleWithAggregatesFilter<$PrismaModel> | $Enums.MembershipRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMembershipRoleFilter<$PrismaModel>
    _max?: NestedEnumMembershipRoleFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ModeratorUser_idCommunity_idCompoundUniqueInput = {
    user_id: string
    community_id: string
  }

  export type ModeratorCountOrderByAggregateInput = {
    moderator_id?: SortOrder
    permissions?: SortOrder
    appointed_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
  }

  export type ModeratorMaxOrderByAggregateInput = {
    moderator_id?: SortOrder
    appointed_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
  }

  export type ModeratorMinOrderByAggregateInput = {
    moderator_id?: SortOrder
    appointed_at?: SortOrder
    user_id?: SortOrder
    community_id?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumEnrollmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EnrollmentStatus | EnumEnrollmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEnrollmentStatusFilter<$PrismaModel> | $Enums.EnrollmentStatus
  }

  export type UnitScalarRelationFilter = {
    is?: UnitWhereInput
    isNot?: UnitWhereInput
  }

  export type UserUnitEnrollmentUser_idUnit_idEnrollment_yearEnrollment_semesterCompoundUniqueInput = {
    user_id: string
    unit_id: string
    enrollment_year: number
    enrollment_semester: string
  }

  export type UserUnitEnrollmentCountOrderByAggregateInput = {
    enrollment_id?: SortOrder
    enrollment_year?: SortOrder
    enrollment_semester?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    unit_id?: SortOrder
  }

  export type UserUnitEnrollmentAvgOrderByAggregateInput = {
    enrollment_year?: SortOrder
  }

  export type UserUnitEnrollmentMaxOrderByAggregateInput = {
    enrollment_id?: SortOrder
    enrollment_year?: SortOrder
    enrollment_semester?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    unit_id?: SortOrder
  }

  export type UserUnitEnrollmentMinOrderByAggregateInput = {
    enrollment_id?: SortOrder
    enrollment_year?: SortOrder
    enrollment_semester?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    unit_id?: SortOrder
  }

  export type UserUnitEnrollmentSumOrderByAggregateInput = {
    enrollment_year?: SortOrder
  }

  export type EnumEnrollmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EnrollmentStatus | EnumEnrollmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEnrollmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.EnrollmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEnrollmentStatusFilter<$PrismaModel>
    _max?: NestedEnumEnrollmentStatusFilter<$PrismaModel>
  }

  export type SavedContentUserSavedPostCompoundUniqueInput = {
    user_id: string
    post_id: string
  }

  export type SavedContentUserSavedCommentCompoundUniqueInput = {
    user_id: string
    comment_id: string
  }

  export type SavedContentCountOrderByAggregateInput = {
    saved_id?: SortOrder
    saved_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    comment_id?: SortOrder
  }

  export type SavedContentMaxOrderByAggregateInput = {
    saved_id?: SortOrder
    saved_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    comment_id?: SortOrder
  }

  export type SavedContentMinOrderByAggregateInput = {
    saved_id?: SortOrder
    saved_at?: SortOrder
    user_id?: SortOrder
    post_id?: SortOrder
    comment_id?: SortOrder
  }

  export type EnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type CommunityNullableScalarRelationFilter = {
    is?: CommunityWhereInput | null
    isNot?: CommunityWhereInput | null
  }

  export type NotificationCountOrderByAggregateInput = {
    notification_id?: SortOrder
    type?: SortOrder
    content_preview?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    recipient_user_id?: SortOrder
    sender_user_id?: SortOrder
    related_post_id?: SortOrder
    related_comment_id?: SortOrder
    related_community_id?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    notification_id?: SortOrder
    type?: SortOrder
    content_preview?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    recipient_user_id?: SortOrder
    sender_user_id?: SortOrder
    related_post_id?: SortOrder
    related_comment_id?: SortOrder
    related_community_id?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    notification_id?: SortOrder
    type?: SortOrder
    content_preview?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    recipient_user_id?: SortOrder
    sender_user_id?: SortOrder
    related_post_id?: SortOrder
    related_comment_id?: SortOrder
    related_community_id?: SortOrder
  }

  export type EnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type CampusCreateNestedOneWithoutUsersInput = {
    create?: XOR<CampusCreateWithoutUsersInput, CampusUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CampusCreateOrConnectWithoutUsersInput
    connect?: CampusWhereUniqueInput
  }

  export type FacultyCreateNestedOneWithoutUsersInput = {
    create?: XOR<FacultyCreateWithoutUsersInput, FacultyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: FacultyCreateOrConnectWithoutUsersInput
    connect?: FacultyWhereUniqueInput
  }

  export type CourseCreateNestedOneWithoutUsersInput = {
    create?: XOR<CourseCreateWithoutUsersInput, CourseUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CourseCreateOrConnectWithoutUsersInput
    connect?: CourseWhereUniqueInput
  }

  export type CommunityCreateNestedManyWithoutCreatorInput = {
    create?: XOR<CommunityCreateWithoutCreatorInput, CommunityUncheckedCreateWithoutCreatorInput> | CommunityCreateWithoutCreatorInput[] | CommunityUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutCreatorInput | CommunityCreateOrConnectWithoutCreatorInput[]
    createMany?: CommunityCreateManyCreatorInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type PostCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type CommentCreateNestedManyWithoutAuthorInput = {
    create?: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput> | CommentCreateWithoutAuthorInput[] | CommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutAuthorInput | CommentCreateOrConnectWithoutAuthorInput[]
    createMany?: CommentCreateManyAuthorInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type VoteCreateNestedManyWithoutUserInput = {
    create?: XOR<VoteCreateWithoutUserInput, VoteUncheckedCreateWithoutUserInput> | VoteCreateWithoutUserInput[] | VoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutUserInput | VoteCreateOrConnectWithoutUserInput[]
    createMany?: VoteCreateManyUserInputEnvelope
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
  }

  export type CommunityMembershipCreateNestedManyWithoutUserInput = {
    create?: XOR<CommunityMembershipCreateWithoutUserInput, CommunityMembershipUncheckedCreateWithoutUserInput> | CommunityMembershipCreateWithoutUserInput[] | CommunityMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommunityMembershipCreateOrConnectWithoutUserInput | CommunityMembershipCreateOrConnectWithoutUserInput[]
    createMany?: CommunityMembershipCreateManyUserInputEnvelope
    connect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
  }

  export type ModeratorCreateNestedManyWithoutUserInput = {
    create?: XOR<ModeratorCreateWithoutUserInput, ModeratorUncheckedCreateWithoutUserInput> | ModeratorCreateWithoutUserInput[] | ModeratorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ModeratorCreateOrConnectWithoutUserInput | ModeratorCreateOrConnectWithoutUserInput[]
    createMany?: ModeratorCreateManyUserInputEnvelope
    connect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
  }

  export type UserUnitEnrollmentCreateNestedManyWithoutUserInput = {
    create?: XOR<UserUnitEnrollmentCreateWithoutUserInput, UserUnitEnrollmentUncheckedCreateWithoutUserInput> | UserUnitEnrollmentCreateWithoutUserInput[] | UserUnitEnrollmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserUnitEnrollmentCreateOrConnectWithoutUserInput | UserUnitEnrollmentCreateOrConnectWithoutUserInput[]
    createMany?: UserUnitEnrollmentCreateManyUserInputEnvelope
    connect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
  }

  export type SavedContentCreateNestedManyWithoutUserInput = {
    create?: XOR<SavedContentCreateWithoutUserInput, SavedContentUncheckedCreateWithoutUserInput> | SavedContentCreateWithoutUserInput[] | SavedContentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutUserInput | SavedContentCreateOrConnectWithoutUserInput[]
    createMany?: SavedContentCreateManyUserInputEnvelope
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutRecipientInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutSenderInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type CommunityUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<CommunityCreateWithoutCreatorInput, CommunityUncheckedCreateWithoutCreatorInput> | CommunityCreateWithoutCreatorInput[] | CommunityUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutCreatorInput | CommunityCreateOrConnectWithoutCreatorInput[]
    createMany?: CommunityCreateManyCreatorInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type PostUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput> | CommentCreateWithoutAuthorInput[] | CommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutAuthorInput | CommentCreateOrConnectWithoutAuthorInput[]
    createMany?: CommentCreateManyAuthorInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type VoteUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<VoteCreateWithoutUserInput, VoteUncheckedCreateWithoutUserInput> | VoteCreateWithoutUserInput[] | VoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutUserInput | VoteCreateOrConnectWithoutUserInput[]
    createMany?: VoteCreateManyUserInputEnvelope
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
  }

  export type CommunityMembershipUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CommunityMembershipCreateWithoutUserInput, CommunityMembershipUncheckedCreateWithoutUserInput> | CommunityMembershipCreateWithoutUserInput[] | CommunityMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommunityMembershipCreateOrConnectWithoutUserInput | CommunityMembershipCreateOrConnectWithoutUserInput[]
    createMany?: CommunityMembershipCreateManyUserInputEnvelope
    connect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
  }

  export type ModeratorUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ModeratorCreateWithoutUserInput, ModeratorUncheckedCreateWithoutUserInput> | ModeratorCreateWithoutUserInput[] | ModeratorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ModeratorCreateOrConnectWithoutUserInput | ModeratorCreateOrConnectWithoutUserInput[]
    createMany?: ModeratorCreateManyUserInputEnvelope
    connect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
  }

  export type UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserUnitEnrollmentCreateWithoutUserInput, UserUnitEnrollmentUncheckedCreateWithoutUserInput> | UserUnitEnrollmentCreateWithoutUserInput[] | UserUnitEnrollmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserUnitEnrollmentCreateOrConnectWithoutUserInput | UserUnitEnrollmentCreateOrConnectWithoutUserInput[]
    createMany?: UserUnitEnrollmentCreateManyUserInputEnvelope
    connect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
  }

  export type SavedContentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SavedContentCreateWithoutUserInput, SavedContentUncheckedCreateWithoutUserInput> | SavedContentCreateWithoutUserInput[] | SavedContentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutUserInput | SavedContentCreateOrConnectWithoutUserInput[]
    createMany?: SavedContentCreateManyUserInputEnvelope
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutRecipientInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type CampusUpdateOneWithoutUsersNestedInput = {
    create?: XOR<CampusCreateWithoutUsersInput, CampusUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CampusCreateOrConnectWithoutUsersInput
    upsert?: CampusUpsertWithoutUsersInput
    disconnect?: CampusWhereInput | boolean
    delete?: CampusWhereInput | boolean
    connect?: CampusWhereUniqueInput
    update?: XOR<XOR<CampusUpdateToOneWithWhereWithoutUsersInput, CampusUpdateWithoutUsersInput>, CampusUncheckedUpdateWithoutUsersInput>
  }

  export type FacultyUpdateOneWithoutUsersNestedInput = {
    create?: XOR<FacultyCreateWithoutUsersInput, FacultyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: FacultyCreateOrConnectWithoutUsersInput
    upsert?: FacultyUpsertWithoutUsersInput
    disconnect?: FacultyWhereInput | boolean
    delete?: FacultyWhereInput | boolean
    connect?: FacultyWhereUniqueInput
    update?: XOR<XOR<FacultyUpdateToOneWithWhereWithoutUsersInput, FacultyUpdateWithoutUsersInput>, FacultyUncheckedUpdateWithoutUsersInput>
  }

  export type CourseUpdateOneWithoutUsersNestedInput = {
    create?: XOR<CourseCreateWithoutUsersInput, CourseUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CourseCreateOrConnectWithoutUsersInput
    upsert?: CourseUpsertWithoutUsersInput
    disconnect?: CourseWhereInput | boolean
    delete?: CourseWhereInput | boolean
    connect?: CourseWhereUniqueInput
    update?: XOR<XOR<CourseUpdateToOneWithWhereWithoutUsersInput, CourseUpdateWithoutUsersInput>, CourseUncheckedUpdateWithoutUsersInput>
  }

  export type CommunityUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<CommunityCreateWithoutCreatorInput, CommunityUncheckedCreateWithoutCreatorInput> | CommunityCreateWithoutCreatorInput[] | CommunityUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutCreatorInput | CommunityCreateOrConnectWithoutCreatorInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutCreatorInput | CommunityUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: CommunityCreateManyCreatorInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutCreatorInput | CommunityUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutCreatorInput | CommunityUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type PostUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutAuthorInput | PostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutAuthorInput | PostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutAuthorInput | PostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type CommentUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput> | CommentCreateWithoutAuthorInput[] | CommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutAuthorInput | CommentCreateOrConnectWithoutAuthorInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutAuthorInput | CommentUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: CommentCreateManyAuthorInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutAuthorInput | CommentUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutAuthorInput | CommentUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type VoteUpdateManyWithoutUserNestedInput = {
    create?: XOR<VoteCreateWithoutUserInput, VoteUncheckedCreateWithoutUserInput> | VoteCreateWithoutUserInput[] | VoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutUserInput | VoteCreateOrConnectWithoutUserInput[]
    upsert?: VoteUpsertWithWhereUniqueWithoutUserInput | VoteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: VoteCreateManyUserInputEnvelope
    set?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    disconnect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    delete?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    update?: VoteUpdateWithWhereUniqueWithoutUserInput | VoteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: VoteUpdateManyWithWhereWithoutUserInput | VoteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: VoteScalarWhereInput | VoteScalarWhereInput[]
  }

  export type CommunityMembershipUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommunityMembershipCreateWithoutUserInput, CommunityMembershipUncheckedCreateWithoutUserInput> | CommunityMembershipCreateWithoutUserInput[] | CommunityMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommunityMembershipCreateOrConnectWithoutUserInput | CommunityMembershipCreateOrConnectWithoutUserInput[]
    upsert?: CommunityMembershipUpsertWithWhereUniqueWithoutUserInput | CommunityMembershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommunityMembershipCreateManyUserInputEnvelope
    set?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    disconnect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    delete?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    connect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    update?: CommunityMembershipUpdateWithWhereUniqueWithoutUserInput | CommunityMembershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommunityMembershipUpdateManyWithWhereWithoutUserInput | CommunityMembershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommunityMembershipScalarWhereInput | CommunityMembershipScalarWhereInput[]
  }

  export type ModeratorUpdateManyWithoutUserNestedInput = {
    create?: XOR<ModeratorCreateWithoutUserInput, ModeratorUncheckedCreateWithoutUserInput> | ModeratorCreateWithoutUserInput[] | ModeratorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ModeratorCreateOrConnectWithoutUserInput | ModeratorCreateOrConnectWithoutUserInput[]
    upsert?: ModeratorUpsertWithWhereUniqueWithoutUserInput | ModeratorUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ModeratorCreateManyUserInputEnvelope
    set?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    disconnect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    delete?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    connect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    update?: ModeratorUpdateWithWhereUniqueWithoutUserInput | ModeratorUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ModeratorUpdateManyWithWhereWithoutUserInput | ModeratorUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ModeratorScalarWhereInput | ModeratorScalarWhereInput[]
  }

  export type UserUnitEnrollmentUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserUnitEnrollmentCreateWithoutUserInput, UserUnitEnrollmentUncheckedCreateWithoutUserInput> | UserUnitEnrollmentCreateWithoutUserInput[] | UserUnitEnrollmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserUnitEnrollmentCreateOrConnectWithoutUserInput | UserUnitEnrollmentCreateOrConnectWithoutUserInput[]
    upsert?: UserUnitEnrollmentUpsertWithWhereUniqueWithoutUserInput | UserUnitEnrollmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserUnitEnrollmentCreateManyUserInputEnvelope
    set?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    disconnect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    delete?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    connect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    update?: UserUnitEnrollmentUpdateWithWhereUniqueWithoutUserInput | UserUnitEnrollmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserUnitEnrollmentUpdateManyWithWhereWithoutUserInput | UserUnitEnrollmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserUnitEnrollmentScalarWhereInput | UserUnitEnrollmentScalarWhereInput[]
  }

  export type SavedContentUpdateManyWithoutUserNestedInput = {
    create?: XOR<SavedContentCreateWithoutUserInput, SavedContentUncheckedCreateWithoutUserInput> | SavedContentCreateWithoutUserInput[] | SavedContentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutUserInput | SavedContentCreateOrConnectWithoutUserInput[]
    upsert?: SavedContentUpsertWithWhereUniqueWithoutUserInput | SavedContentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SavedContentCreateManyUserInputEnvelope
    set?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    disconnect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    delete?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    update?: SavedContentUpdateWithWhereUniqueWithoutUserInput | SavedContentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SavedContentUpdateManyWithWhereWithoutUserInput | SavedContentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SavedContentScalarWhereInput | SavedContentScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRecipientInput | NotificationUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRecipientInput | NotificationUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRecipientInput | NotificationUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutSenderNestedInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSenderInput | NotificationUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSenderInput | NotificationUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSenderInput | NotificationUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type CommunityUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<CommunityCreateWithoutCreatorInput, CommunityUncheckedCreateWithoutCreatorInput> | CommunityCreateWithoutCreatorInput[] | CommunityUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutCreatorInput | CommunityCreateOrConnectWithoutCreatorInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutCreatorInput | CommunityUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: CommunityCreateManyCreatorInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutCreatorInput | CommunityUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutCreatorInput | CommunityUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type PostUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutAuthorInput | PostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutAuthorInput | PostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutAuthorInput | PostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput> | CommentCreateWithoutAuthorInput[] | CommentUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutAuthorInput | CommentCreateOrConnectWithoutAuthorInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutAuthorInput | CommentUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: CommentCreateManyAuthorInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutAuthorInput | CommentUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutAuthorInput | CommentUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type VoteUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<VoteCreateWithoutUserInput, VoteUncheckedCreateWithoutUserInput> | VoteCreateWithoutUserInput[] | VoteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutUserInput | VoteCreateOrConnectWithoutUserInput[]
    upsert?: VoteUpsertWithWhereUniqueWithoutUserInput | VoteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: VoteCreateManyUserInputEnvelope
    set?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    disconnect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    delete?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    update?: VoteUpdateWithWhereUniqueWithoutUserInput | VoteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: VoteUpdateManyWithWhereWithoutUserInput | VoteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: VoteScalarWhereInput | VoteScalarWhereInput[]
  }

  export type CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CommunityMembershipCreateWithoutUserInput, CommunityMembershipUncheckedCreateWithoutUserInput> | CommunityMembershipCreateWithoutUserInput[] | CommunityMembershipUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CommunityMembershipCreateOrConnectWithoutUserInput | CommunityMembershipCreateOrConnectWithoutUserInput[]
    upsert?: CommunityMembershipUpsertWithWhereUniqueWithoutUserInput | CommunityMembershipUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CommunityMembershipCreateManyUserInputEnvelope
    set?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    disconnect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    delete?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    connect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    update?: CommunityMembershipUpdateWithWhereUniqueWithoutUserInput | CommunityMembershipUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CommunityMembershipUpdateManyWithWhereWithoutUserInput | CommunityMembershipUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CommunityMembershipScalarWhereInput | CommunityMembershipScalarWhereInput[]
  }

  export type ModeratorUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ModeratorCreateWithoutUserInput, ModeratorUncheckedCreateWithoutUserInput> | ModeratorCreateWithoutUserInput[] | ModeratorUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ModeratorCreateOrConnectWithoutUserInput | ModeratorCreateOrConnectWithoutUserInput[]
    upsert?: ModeratorUpsertWithWhereUniqueWithoutUserInput | ModeratorUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ModeratorCreateManyUserInputEnvelope
    set?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    disconnect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    delete?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    connect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    update?: ModeratorUpdateWithWhereUniqueWithoutUserInput | ModeratorUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ModeratorUpdateManyWithWhereWithoutUserInput | ModeratorUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ModeratorScalarWhereInput | ModeratorScalarWhereInput[]
  }

  export type UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserUnitEnrollmentCreateWithoutUserInput, UserUnitEnrollmentUncheckedCreateWithoutUserInput> | UserUnitEnrollmentCreateWithoutUserInput[] | UserUnitEnrollmentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserUnitEnrollmentCreateOrConnectWithoutUserInput | UserUnitEnrollmentCreateOrConnectWithoutUserInput[]
    upsert?: UserUnitEnrollmentUpsertWithWhereUniqueWithoutUserInput | UserUnitEnrollmentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserUnitEnrollmentCreateManyUserInputEnvelope
    set?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    disconnect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    delete?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    connect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    update?: UserUnitEnrollmentUpdateWithWhereUniqueWithoutUserInput | UserUnitEnrollmentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserUnitEnrollmentUpdateManyWithWhereWithoutUserInput | UserUnitEnrollmentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserUnitEnrollmentScalarWhereInput | UserUnitEnrollmentScalarWhereInput[]
  }

  export type SavedContentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SavedContentCreateWithoutUserInput, SavedContentUncheckedCreateWithoutUserInput> | SavedContentCreateWithoutUserInput[] | SavedContentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutUserInput | SavedContentCreateOrConnectWithoutUserInput[]
    upsert?: SavedContentUpsertWithWhereUniqueWithoutUserInput | SavedContentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SavedContentCreateManyUserInputEnvelope
    set?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    disconnect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    delete?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    update?: SavedContentUpdateWithWhereUniqueWithoutUserInput | SavedContentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SavedContentUpdateManyWithWhereWithoutUserInput | SavedContentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SavedContentScalarWhereInput | SavedContentScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput> | NotificationCreateWithoutRecipientInput[] | NotificationUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRecipientInput | NotificationCreateOrConnectWithoutRecipientInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRecipientInput | NotificationUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: NotificationCreateManyRecipientInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRecipientInput | NotificationUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRecipientInput | NotificationUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput> | NotificationCreateWithoutSenderInput[] | NotificationUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutSenderInput | NotificationCreateOrConnectWithoutSenderInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutSenderInput | NotificationUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: NotificationCreateManySenderInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutSenderInput | NotificationUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutSenderInput | NotificationUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutCampusInput = {
    create?: XOR<UserCreateWithoutCampusInput, UserUncheckedCreateWithoutCampusInput> | UserCreateWithoutCampusInput[] | UserUncheckedCreateWithoutCampusInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCampusInput | UserCreateOrConnectWithoutCampusInput[]
    createMany?: UserCreateManyCampusInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CommunityCreateNestedManyWithoutRelated_campusInput = {
    create?: XOR<CommunityCreateWithoutRelated_campusInput, CommunityUncheckedCreateWithoutRelated_campusInput> | CommunityCreateWithoutRelated_campusInput[] | CommunityUncheckedCreateWithoutRelated_campusInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_campusInput | CommunityCreateOrConnectWithoutRelated_campusInput[]
    createMany?: CommunityCreateManyRelated_campusInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCampusInput = {
    create?: XOR<UserCreateWithoutCampusInput, UserUncheckedCreateWithoutCampusInput> | UserCreateWithoutCampusInput[] | UserUncheckedCreateWithoutCampusInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCampusInput | UserCreateOrConnectWithoutCampusInput[]
    createMany?: UserCreateManyCampusInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CommunityUncheckedCreateNestedManyWithoutRelated_campusInput = {
    create?: XOR<CommunityCreateWithoutRelated_campusInput, CommunityUncheckedCreateWithoutRelated_campusInput> | CommunityCreateWithoutRelated_campusInput[] | CommunityUncheckedCreateWithoutRelated_campusInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_campusInput | CommunityCreateOrConnectWithoutRelated_campusInput[]
    createMany?: CommunityCreateManyRelated_campusInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutCampusNestedInput = {
    create?: XOR<UserCreateWithoutCampusInput, UserUncheckedCreateWithoutCampusInput> | UserCreateWithoutCampusInput[] | UserUncheckedCreateWithoutCampusInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCampusInput | UserCreateOrConnectWithoutCampusInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCampusInput | UserUpsertWithWhereUniqueWithoutCampusInput[]
    createMany?: UserCreateManyCampusInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCampusInput | UserUpdateWithWhereUniqueWithoutCampusInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCampusInput | UserUpdateManyWithWhereWithoutCampusInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CommunityUpdateManyWithoutRelated_campusNestedInput = {
    create?: XOR<CommunityCreateWithoutRelated_campusInput, CommunityUncheckedCreateWithoutRelated_campusInput> | CommunityCreateWithoutRelated_campusInput[] | CommunityUncheckedCreateWithoutRelated_campusInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_campusInput | CommunityCreateOrConnectWithoutRelated_campusInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutRelated_campusInput | CommunityUpsertWithWhereUniqueWithoutRelated_campusInput[]
    createMany?: CommunityCreateManyRelated_campusInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutRelated_campusInput | CommunityUpdateWithWhereUniqueWithoutRelated_campusInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutRelated_campusInput | CommunityUpdateManyWithWhereWithoutRelated_campusInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCampusNestedInput = {
    create?: XOR<UserCreateWithoutCampusInput, UserUncheckedCreateWithoutCampusInput> | UserCreateWithoutCampusInput[] | UserUncheckedCreateWithoutCampusInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCampusInput | UserCreateOrConnectWithoutCampusInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCampusInput | UserUpsertWithWhereUniqueWithoutCampusInput[]
    createMany?: UserCreateManyCampusInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCampusInput | UserUpdateWithWhereUniqueWithoutCampusInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCampusInput | UserUpdateManyWithWhereWithoutCampusInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CommunityUncheckedUpdateManyWithoutRelated_campusNestedInput = {
    create?: XOR<CommunityCreateWithoutRelated_campusInput, CommunityUncheckedCreateWithoutRelated_campusInput> | CommunityCreateWithoutRelated_campusInput[] | CommunityUncheckedCreateWithoutRelated_campusInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_campusInput | CommunityCreateOrConnectWithoutRelated_campusInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutRelated_campusInput | CommunityUpsertWithWhereUniqueWithoutRelated_campusInput[]
    createMany?: CommunityCreateManyRelated_campusInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutRelated_campusInput | CommunityUpdateWithWhereUniqueWithoutRelated_campusInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutRelated_campusInput | CommunityUpdateManyWithWhereWithoutRelated_campusInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type UserCreateNestedManyWithoutFacultyInput = {
    create?: XOR<UserCreateWithoutFacultyInput, UserUncheckedCreateWithoutFacultyInput> | UserCreateWithoutFacultyInput[] | UserUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutFacultyInput | UserCreateOrConnectWithoutFacultyInput[]
    createMany?: UserCreateManyFacultyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CourseCreateNestedManyWithoutFacultyInput = {
    create?: XOR<CourseCreateWithoutFacultyInput, CourseUncheckedCreateWithoutFacultyInput> | CourseCreateWithoutFacultyInput[] | CourseUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: CourseCreateOrConnectWithoutFacultyInput | CourseCreateOrConnectWithoutFacultyInput[]
    createMany?: CourseCreateManyFacultyInputEnvelope
    connect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
  }

  export type UnitCreateNestedManyWithoutFacultyInput = {
    create?: XOR<UnitCreateWithoutFacultyInput, UnitUncheckedCreateWithoutFacultyInput> | UnitCreateWithoutFacultyInput[] | UnitUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: UnitCreateOrConnectWithoutFacultyInput | UnitCreateOrConnectWithoutFacultyInput[]
    createMany?: UnitCreateManyFacultyInputEnvelope
    connect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
  }

  export type CommunityCreateNestedManyWithoutRelated_facultyInput = {
    create?: XOR<CommunityCreateWithoutRelated_facultyInput, CommunityUncheckedCreateWithoutRelated_facultyInput> | CommunityCreateWithoutRelated_facultyInput[] | CommunityUncheckedCreateWithoutRelated_facultyInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_facultyInput | CommunityCreateOrConnectWithoutRelated_facultyInput[]
    createMany?: CommunityCreateManyRelated_facultyInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutFacultyInput = {
    create?: XOR<UserCreateWithoutFacultyInput, UserUncheckedCreateWithoutFacultyInput> | UserCreateWithoutFacultyInput[] | UserUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutFacultyInput | UserCreateOrConnectWithoutFacultyInput[]
    createMany?: UserCreateManyFacultyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CourseUncheckedCreateNestedManyWithoutFacultyInput = {
    create?: XOR<CourseCreateWithoutFacultyInput, CourseUncheckedCreateWithoutFacultyInput> | CourseCreateWithoutFacultyInput[] | CourseUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: CourseCreateOrConnectWithoutFacultyInput | CourseCreateOrConnectWithoutFacultyInput[]
    createMany?: CourseCreateManyFacultyInputEnvelope
    connect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
  }

  export type UnitUncheckedCreateNestedManyWithoutFacultyInput = {
    create?: XOR<UnitCreateWithoutFacultyInput, UnitUncheckedCreateWithoutFacultyInput> | UnitCreateWithoutFacultyInput[] | UnitUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: UnitCreateOrConnectWithoutFacultyInput | UnitCreateOrConnectWithoutFacultyInput[]
    createMany?: UnitCreateManyFacultyInputEnvelope
    connect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
  }

  export type CommunityUncheckedCreateNestedManyWithoutRelated_facultyInput = {
    create?: XOR<CommunityCreateWithoutRelated_facultyInput, CommunityUncheckedCreateWithoutRelated_facultyInput> | CommunityCreateWithoutRelated_facultyInput[] | CommunityUncheckedCreateWithoutRelated_facultyInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_facultyInput | CommunityCreateOrConnectWithoutRelated_facultyInput[]
    createMany?: CommunityCreateManyRelated_facultyInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type UserUpdateManyWithoutFacultyNestedInput = {
    create?: XOR<UserCreateWithoutFacultyInput, UserUncheckedCreateWithoutFacultyInput> | UserCreateWithoutFacultyInput[] | UserUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutFacultyInput | UserCreateOrConnectWithoutFacultyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutFacultyInput | UserUpsertWithWhereUniqueWithoutFacultyInput[]
    createMany?: UserCreateManyFacultyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutFacultyInput | UserUpdateWithWhereUniqueWithoutFacultyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutFacultyInput | UserUpdateManyWithWhereWithoutFacultyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CourseUpdateManyWithoutFacultyNestedInput = {
    create?: XOR<CourseCreateWithoutFacultyInput, CourseUncheckedCreateWithoutFacultyInput> | CourseCreateWithoutFacultyInput[] | CourseUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: CourseCreateOrConnectWithoutFacultyInput | CourseCreateOrConnectWithoutFacultyInput[]
    upsert?: CourseUpsertWithWhereUniqueWithoutFacultyInput | CourseUpsertWithWhereUniqueWithoutFacultyInput[]
    createMany?: CourseCreateManyFacultyInputEnvelope
    set?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    disconnect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    delete?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    connect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    update?: CourseUpdateWithWhereUniqueWithoutFacultyInput | CourseUpdateWithWhereUniqueWithoutFacultyInput[]
    updateMany?: CourseUpdateManyWithWhereWithoutFacultyInput | CourseUpdateManyWithWhereWithoutFacultyInput[]
    deleteMany?: CourseScalarWhereInput | CourseScalarWhereInput[]
  }

  export type UnitUpdateManyWithoutFacultyNestedInput = {
    create?: XOR<UnitCreateWithoutFacultyInput, UnitUncheckedCreateWithoutFacultyInput> | UnitCreateWithoutFacultyInput[] | UnitUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: UnitCreateOrConnectWithoutFacultyInput | UnitCreateOrConnectWithoutFacultyInput[]
    upsert?: UnitUpsertWithWhereUniqueWithoutFacultyInput | UnitUpsertWithWhereUniqueWithoutFacultyInput[]
    createMany?: UnitCreateManyFacultyInputEnvelope
    set?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    disconnect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    delete?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    connect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    update?: UnitUpdateWithWhereUniqueWithoutFacultyInput | UnitUpdateWithWhereUniqueWithoutFacultyInput[]
    updateMany?: UnitUpdateManyWithWhereWithoutFacultyInput | UnitUpdateManyWithWhereWithoutFacultyInput[]
    deleteMany?: UnitScalarWhereInput | UnitScalarWhereInput[]
  }

  export type CommunityUpdateManyWithoutRelated_facultyNestedInput = {
    create?: XOR<CommunityCreateWithoutRelated_facultyInput, CommunityUncheckedCreateWithoutRelated_facultyInput> | CommunityCreateWithoutRelated_facultyInput[] | CommunityUncheckedCreateWithoutRelated_facultyInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_facultyInput | CommunityCreateOrConnectWithoutRelated_facultyInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutRelated_facultyInput | CommunityUpsertWithWhereUniqueWithoutRelated_facultyInput[]
    createMany?: CommunityCreateManyRelated_facultyInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutRelated_facultyInput | CommunityUpdateWithWhereUniqueWithoutRelated_facultyInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutRelated_facultyInput | CommunityUpdateManyWithWhereWithoutRelated_facultyInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutFacultyNestedInput = {
    create?: XOR<UserCreateWithoutFacultyInput, UserUncheckedCreateWithoutFacultyInput> | UserCreateWithoutFacultyInput[] | UserUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutFacultyInput | UserCreateOrConnectWithoutFacultyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutFacultyInput | UserUpsertWithWhereUniqueWithoutFacultyInput[]
    createMany?: UserCreateManyFacultyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutFacultyInput | UserUpdateWithWhereUniqueWithoutFacultyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutFacultyInput | UserUpdateManyWithWhereWithoutFacultyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CourseUncheckedUpdateManyWithoutFacultyNestedInput = {
    create?: XOR<CourseCreateWithoutFacultyInput, CourseUncheckedCreateWithoutFacultyInput> | CourseCreateWithoutFacultyInput[] | CourseUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: CourseCreateOrConnectWithoutFacultyInput | CourseCreateOrConnectWithoutFacultyInput[]
    upsert?: CourseUpsertWithWhereUniqueWithoutFacultyInput | CourseUpsertWithWhereUniqueWithoutFacultyInput[]
    createMany?: CourseCreateManyFacultyInputEnvelope
    set?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    disconnect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    delete?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    connect?: CourseWhereUniqueInput | CourseWhereUniqueInput[]
    update?: CourseUpdateWithWhereUniqueWithoutFacultyInput | CourseUpdateWithWhereUniqueWithoutFacultyInput[]
    updateMany?: CourseUpdateManyWithWhereWithoutFacultyInput | CourseUpdateManyWithWhereWithoutFacultyInput[]
    deleteMany?: CourseScalarWhereInput | CourseScalarWhereInput[]
  }

  export type UnitUncheckedUpdateManyWithoutFacultyNestedInput = {
    create?: XOR<UnitCreateWithoutFacultyInput, UnitUncheckedCreateWithoutFacultyInput> | UnitCreateWithoutFacultyInput[] | UnitUncheckedCreateWithoutFacultyInput[]
    connectOrCreate?: UnitCreateOrConnectWithoutFacultyInput | UnitCreateOrConnectWithoutFacultyInput[]
    upsert?: UnitUpsertWithWhereUniqueWithoutFacultyInput | UnitUpsertWithWhereUniqueWithoutFacultyInput[]
    createMany?: UnitCreateManyFacultyInputEnvelope
    set?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    disconnect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    delete?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    connect?: UnitWhereUniqueInput | UnitWhereUniqueInput[]
    update?: UnitUpdateWithWhereUniqueWithoutFacultyInput | UnitUpdateWithWhereUniqueWithoutFacultyInput[]
    updateMany?: UnitUpdateManyWithWhereWithoutFacultyInput | UnitUpdateManyWithWhereWithoutFacultyInput[]
    deleteMany?: UnitScalarWhereInput | UnitScalarWhereInput[]
  }

  export type CommunityUncheckedUpdateManyWithoutRelated_facultyNestedInput = {
    create?: XOR<CommunityCreateWithoutRelated_facultyInput, CommunityUncheckedCreateWithoutRelated_facultyInput> | CommunityCreateWithoutRelated_facultyInput[] | CommunityUncheckedCreateWithoutRelated_facultyInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_facultyInput | CommunityCreateOrConnectWithoutRelated_facultyInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutRelated_facultyInput | CommunityUpsertWithWhereUniqueWithoutRelated_facultyInput[]
    createMany?: CommunityCreateManyRelated_facultyInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutRelated_facultyInput | CommunityUpdateWithWhereUniqueWithoutRelated_facultyInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutRelated_facultyInput | CommunityUpdateManyWithWhereWithoutRelated_facultyInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type FacultyCreateNestedOneWithoutCoursesInput = {
    create?: XOR<FacultyCreateWithoutCoursesInput, FacultyUncheckedCreateWithoutCoursesInput>
    connectOrCreate?: FacultyCreateOrConnectWithoutCoursesInput
    connect?: FacultyWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutCourseInput = {
    create?: XOR<UserCreateWithoutCourseInput, UserUncheckedCreateWithoutCourseInput> | UserCreateWithoutCourseInput[] | UserUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCourseInput | UserCreateOrConnectWithoutCourseInput[]
    createMany?: UserCreateManyCourseInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CommunityCreateNestedManyWithoutRelated_courseInput = {
    create?: XOR<CommunityCreateWithoutRelated_courseInput, CommunityUncheckedCreateWithoutRelated_courseInput> | CommunityCreateWithoutRelated_courseInput[] | CommunityUncheckedCreateWithoutRelated_courseInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_courseInput | CommunityCreateOrConnectWithoutRelated_courseInput[]
    createMany?: CommunityCreateManyRelated_courseInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCourseInput = {
    create?: XOR<UserCreateWithoutCourseInput, UserUncheckedCreateWithoutCourseInput> | UserCreateWithoutCourseInput[] | UserUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCourseInput | UserCreateOrConnectWithoutCourseInput[]
    createMany?: UserCreateManyCourseInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type CommunityUncheckedCreateNestedManyWithoutRelated_courseInput = {
    create?: XOR<CommunityCreateWithoutRelated_courseInput, CommunityUncheckedCreateWithoutRelated_courseInput> | CommunityCreateWithoutRelated_courseInput[] | CommunityUncheckedCreateWithoutRelated_courseInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_courseInput | CommunityCreateOrConnectWithoutRelated_courseInput[]
    createMany?: CommunityCreateManyRelated_courseInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type FacultyUpdateOneRequiredWithoutCoursesNestedInput = {
    create?: XOR<FacultyCreateWithoutCoursesInput, FacultyUncheckedCreateWithoutCoursesInput>
    connectOrCreate?: FacultyCreateOrConnectWithoutCoursesInput
    upsert?: FacultyUpsertWithoutCoursesInput
    connect?: FacultyWhereUniqueInput
    update?: XOR<XOR<FacultyUpdateToOneWithWhereWithoutCoursesInput, FacultyUpdateWithoutCoursesInput>, FacultyUncheckedUpdateWithoutCoursesInput>
  }

  export type UserUpdateManyWithoutCourseNestedInput = {
    create?: XOR<UserCreateWithoutCourseInput, UserUncheckedCreateWithoutCourseInput> | UserCreateWithoutCourseInput[] | UserUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCourseInput | UserCreateOrConnectWithoutCourseInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCourseInput | UserUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: UserCreateManyCourseInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCourseInput | UserUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCourseInput | UserUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CommunityUpdateManyWithoutRelated_courseNestedInput = {
    create?: XOR<CommunityCreateWithoutRelated_courseInput, CommunityUncheckedCreateWithoutRelated_courseInput> | CommunityCreateWithoutRelated_courseInput[] | CommunityUncheckedCreateWithoutRelated_courseInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_courseInput | CommunityCreateOrConnectWithoutRelated_courseInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutRelated_courseInput | CommunityUpsertWithWhereUniqueWithoutRelated_courseInput[]
    createMany?: CommunityCreateManyRelated_courseInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutRelated_courseInput | CommunityUpdateWithWhereUniqueWithoutRelated_courseInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutRelated_courseInput | CommunityUpdateManyWithWhereWithoutRelated_courseInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCourseNestedInput = {
    create?: XOR<UserCreateWithoutCourseInput, UserUncheckedCreateWithoutCourseInput> | UserCreateWithoutCourseInput[] | UserUncheckedCreateWithoutCourseInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCourseInput | UserCreateOrConnectWithoutCourseInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCourseInput | UserUpsertWithWhereUniqueWithoutCourseInput[]
    createMany?: UserCreateManyCourseInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCourseInput | UserUpdateWithWhereUniqueWithoutCourseInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCourseInput | UserUpdateManyWithWhereWithoutCourseInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CommunityUncheckedUpdateManyWithoutRelated_courseNestedInput = {
    create?: XOR<CommunityCreateWithoutRelated_courseInput, CommunityUncheckedCreateWithoutRelated_courseInput> | CommunityCreateWithoutRelated_courseInput[] | CommunityUncheckedCreateWithoutRelated_courseInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_courseInput | CommunityCreateOrConnectWithoutRelated_courseInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutRelated_courseInput | CommunityUpsertWithWhereUniqueWithoutRelated_courseInput[]
    createMany?: CommunityCreateManyRelated_courseInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutRelated_courseInput | CommunityUpdateWithWhereUniqueWithoutRelated_courseInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutRelated_courseInput | CommunityUpdateManyWithWhereWithoutRelated_courseInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type FacultyCreateNestedOneWithoutUnitsInput = {
    create?: XOR<FacultyCreateWithoutUnitsInput, FacultyUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: FacultyCreateOrConnectWithoutUnitsInput
    connect?: FacultyWhereUniqueInput
  }

  export type CommunityCreateNestedManyWithoutRelated_unitInput = {
    create?: XOR<CommunityCreateWithoutRelated_unitInput, CommunityUncheckedCreateWithoutRelated_unitInput> | CommunityCreateWithoutRelated_unitInput[] | CommunityUncheckedCreateWithoutRelated_unitInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_unitInput | CommunityCreateOrConnectWithoutRelated_unitInput[]
    createMany?: CommunityCreateManyRelated_unitInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type UserUnitEnrollmentCreateNestedManyWithoutUnitInput = {
    create?: XOR<UserUnitEnrollmentCreateWithoutUnitInput, UserUnitEnrollmentUncheckedCreateWithoutUnitInput> | UserUnitEnrollmentCreateWithoutUnitInput[] | UserUnitEnrollmentUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: UserUnitEnrollmentCreateOrConnectWithoutUnitInput | UserUnitEnrollmentCreateOrConnectWithoutUnitInput[]
    createMany?: UserUnitEnrollmentCreateManyUnitInputEnvelope
    connect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
  }

  export type CommunityUncheckedCreateNestedManyWithoutRelated_unitInput = {
    create?: XOR<CommunityCreateWithoutRelated_unitInput, CommunityUncheckedCreateWithoutRelated_unitInput> | CommunityCreateWithoutRelated_unitInput[] | CommunityUncheckedCreateWithoutRelated_unitInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_unitInput | CommunityCreateOrConnectWithoutRelated_unitInput[]
    createMany?: CommunityCreateManyRelated_unitInputEnvelope
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
  }

  export type UserUnitEnrollmentUncheckedCreateNestedManyWithoutUnitInput = {
    create?: XOR<UserUnitEnrollmentCreateWithoutUnitInput, UserUnitEnrollmentUncheckedCreateWithoutUnitInput> | UserUnitEnrollmentCreateWithoutUnitInput[] | UserUnitEnrollmentUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: UserUnitEnrollmentCreateOrConnectWithoutUnitInput | UserUnitEnrollmentCreateOrConnectWithoutUnitInput[]
    createMany?: UserUnitEnrollmentCreateManyUnitInputEnvelope
    connect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
  }

  export type FacultyUpdateOneWithoutUnitsNestedInput = {
    create?: XOR<FacultyCreateWithoutUnitsInput, FacultyUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: FacultyCreateOrConnectWithoutUnitsInput
    upsert?: FacultyUpsertWithoutUnitsInput
    disconnect?: FacultyWhereInput | boolean
    delete?: FacultyWhereInput | boolean
    connect?: FacultyWhereUniqueInput
    update?: XOR<XOR<FacultyUpdateToOneWithWhereWithoutUnitsInput, FacultyUpdateWithoutUnitsInput>, FacultyUncheckedUpdateWithoutUnitsInput>
  }

  export type CommunityUpdateManyWithoutRelated_unitNestedInput = {
    create?: XOR<CommunityCreateWithoutRelated_unitInput, CommunityUncheckedCreateWithoutRelated_unitInput> | CommunityCreateWithoutRelated_unitInput[] | CommunityUncheckedCreateWithoutRelated_unitInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_unitInput | CommunityCreateOrConnectWithoutRelated_unitInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutRelated_unitInput | CommunityUpsertWithWhereUniqueWithoutRelated_unitInput[]
    createMany?: CommunityCreateManyRelated_unitInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutRelated_unitInput | CommunityUpdateWithWhereUniqueWithoutRelated_unitInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutRelated_unitInput | CommunityUpdateManyWithWhereWithoutRelated_unitInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type UserUnitEnrollmentUpdateManyWithoutUnitNestedInput = {
    create?: XOR<UserUnitEnrollmentCreateWithoutUnitInput, UserUnitEnrollmentUncheckedCreateWithoutUnitInput> | UserUnitEnrollmentCreateWithoutUnitInput[] | UserUnitEnrollmentUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: UserUnitEnrollmentCreateOrConnectWithoutUnitInput | UserUnitEnrollmentCreateOrConnectWithoutUnitInput[]
    upsert?: UserUnitEnrollmentUpsertWithWhereUniqueWithoutUnitInput | UserUnitEnrollmentUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: UserUnitEnrollmentCreateManyUnitInputEnvelope
    set?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    disconnect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    delete?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    connect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    update?: UserUnitEnrollmentUpdateWithWhereUniqueWithoutUnitInput | UserUnitEnrollmentUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: UserUnitEnrollmentUpdateManyWithWhereWithoutUnitInput | UserUnitEnrollmentUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: UserUnitEnrollmentScalarWhereInput | UserUnitEnrollmentScalarWhereInput[]
  }

  export type CommunityUncheckedUpdateManyWithoutRelated_unitNestedInput = {
    create?: XOR<CommunityCreateWithoutRelated_unitInput, CommunityUncheckedCreateWithoutRelated_unitInput> | CommunityCreateWithoutRelated_unitInput[] | CommunityUncheckedCreateWithoutRelated_unitInput[]
    connectOrCreate?: CommunityCreateOrConnectWithoutRelated_unitInput | CommunityCreateOrConnectWithoutRelated_unitInput[]
    upsert?: CommunityUpsertWithWhereUniqueWithoutRelated_unitInput | CommunityUpsertWithWhereUniqueWithoutRelated_unitInput[]
    createMany?: CommunityCreateManyRelated_unitInputEnvelope
    set?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    disconnect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    delete?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    connect?: CommunityWhereUniqueInput | CommunityWhereUniqueInput[]
    update?: CommunityUpdateWithWhereUniqueWithoutRelated_unitInput | CommunityUpdateWithWhereUniqueWithoutRelated_unitInput[]
    updateMany?: CommunityUpdateManyWithWhereWithoutRelated_unitInput | CommunityUpdateManyWithWhereWithoutRelated_unitInput[]
    deleteMany?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
  }

  export type UserUnitEnrollmentUncheckedUpdateManyWithoutUnitNestedInput = {
    create?: XOR<UserUnitEnrollmentCreateWithoutUnitInput, UserUnitEnrollmentUncheckedCreateWithoutUnitInput> | UserUnitEnrollmentCreateWithoutUnitInput[] | UserUnitEnrollmentUncheckedCreateWithoutUnitInput[]
    connectOrCreate?: UserUnitEnrollmentCreateOrConnectWithoutUnitInput | UserUnitEnrollmentCreateOrConnectWithoutUnitInput[]
    upsert?: UserUnitEnrollmentUpsertWithWhereUniqueWithoutUnitInput | UserUnitEnrollmentUpsertWithWhereUniqueWithoutUnitInput[]
    createMany?: UserUnitEnrollmentCreateManyUnitInputEnvelope
    set?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    disconnect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    delete?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    connect?: UserUnitEnrollmentWhereUniqueInput | UserUnitEnrollmentWhereUniqueInput[]
    update?: UserUnitEnrollmentUpdateWithWhereUniqueWithoutUnitInput | UserUnitEnrollmentUpdateWithWhereUniqueWithoutUnitInput[]
    updateMany?: UserUnitEnrollmentUpdateManyWithWhereWithoutUnitInput | UserUnitEnrollmentUpdateManyWithWhereWithoutUnitInput[]
    deleteMany?: UserUnitEnrollmentScalarWhereInput | UserUnitEnrollmentScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCreated_communitiesInput = {
    create?: XOR<UserCreateWithoutCreated_communitiesInput, UserUncheckedCreateWithoutCreated_communitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreated_communitiesInput
    connect?: UserWhereUniqueInput
  }

  export type CampusCreateNestedOneWithoutCommunitiesInput = {
    create?: XOR<CampusCreateWithoutCommunitiesInput, CampusUncheckedCreateWithoutCommunitiesInput>
    connectOrCreate?: CampusCreateOrConnectWithoutCommunitiesInput
    connect?: CampusWhereUniqueInput
  }

  export type FacultyCreateNestedOneWithoutCommunitiesInput = {
    create?: XOR<FacultyCreateWithoutCommunitiesInput, FacultyUncheckedCreateWithoutCommunitiesInput>
    connectOrCreate?: FacultyCreateOrConnectWithoutCommunitiesInput
    connect?: FacultyWhereUniqueInput
  }

  export type CourseCreateNestedOneWithoutCommunitiesInput = {
    create?: XOR<CourseCreateWithoutCommunitiesInput, CourseUncheckedCreateWithoutCommunitiesInput>
    connectOrCreate?: CourseCreateOrConnectWithoutCommunitiesInput
    connect?: CourseWhereUniqueInput
  }

  export type UnitCreateNestedOneWithoutCommunitiesInput = {
    create?: XOR<UnitCreateWithoutCommunitiesInput, UnitUncheckedCreateWithoutCommunitiesInput>
    connectOrCreate?: UnitCreateOrConnectWithoutCommunitiesInput
    connect?: UnitWhereUniqueInput
  }

  export type PostCreateNestedManyWithoutCommunityInput = {
    create?: XOR<PostCreateWithoutCommunityInput, PostUncheckedCreateWithoutCommunityInput> | PostCreateWithoutCommunityInput[] | PostUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: PostCreateOrConnectWithoutCommunityInput | PostCreateOrConnectWithoutCommunityInput[]
    createMany?: PostCreateManyCommunityInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type CommunityMembershipCreateNestedManyWithoutCommunityInput = {
    create?: XOR<CommunityMembershipCreateWithoutCommunityInput, CommunityMembershipUncheckedCreateWithoutCommunityInput> | CommunityMembershipCreateWithoutCommunityInput[] | CommunityMembershipUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: CommunityMembershipCreateOrConnectWithoutCommunityInput | CommunityMembershipCreateOrConnectWithoutCommunityInput[]
    createMany?: CommunityMembershipCreateManyCommunityInputEnvelope
    connect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
  }

  export type ModeratorCreateNestedManyWithoutCommunityInput = {
    create?: XOR<ModeratorCreateWithoutCommunityInput, ModeratorUncheckedCreateWithoutCommunityInput> | ModeratorCreateWithoutCommunityInput[] | ModeratorUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: ModeratorCreateOrConnectWithoutCommunityInput | ModeratorCreateOrConnectWithoutCommunityInput[]
    createMany?: ModeratorCreateManyCommunityInputEnvelope
    connect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutRelated_communityInput = {
    create?: XOR<NotificationCreateWithoutRelated_communityInput, NotificationUncheckedCreateWithoutRelated_communityInput> | NotificationCreateWithoutRelated_communityInput[] | NotificationUncheckedCreateWithoutRelated_communityInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_communityInput | NotificationCreateOrConnectWithoutRelated_communityInput[]
    createMany?: NotificationCreateManyRelated_communityInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PostUncheckedCreateNestedManyWithoutCommunityInput = {
    create?: XOR<PostCreateWithoutCommunityInput, PostUncheckedCreateWithoutCommunityInput> | PostCreateWithoutCommunityInput[] | PostUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: PostCreateOrConnectWithoutCommunityInput | PostCreateOrConnectWithoutCommunityInput[]
    createMany?: PostCreateManyCommunityInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput = {
    create?: XOR<CommunityMembershipCreateWithoutCommunityInput, CommunityMembershipUncheckedCreateWithoutCommunityInput> | CommunityMembershipCreateWithoutCommunityInput[] | CommunityMembershipUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: CommunityMembershipCreateOrConnectWithoutCommunityInput | CommunityMembershipCreateOrConnectWithoutCommunityInput[]
    createMany?: CommunityMembershipCreateManyCommunityInputEnvelope
    connect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
  }

  export type ModeratorUncheckedCreateNestedManyWithoutCommunityInput = {
    create?: XOR<ModeratorCreateWithoutCommunityInput, ModeratorUncheckedCreateWithoutCommunityInput> | ModeratorCreateWithoutCommunityInput[] | ModeratorUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: ModeratorCreateOrConnectWithoutCommunityInput | ModeratorCreateOrConnectWithoutCommunityInput[]
    createMany?: ModeratorCreateManyCommunityInputEnvelope
    connect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutRelated_communityInput = {
    create?: XOR<NotificationCreateWithoutRelated_communityInput, NotificationUncheckedCreateWithoutRelated_communityInput> | NotificationCreateWithoutRelated_communityInput[] | NotificationUncheckedCreateWithoutRelated_communityInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_communityInput | NotificationCreateOrConnectWithoutRelated_communityInput[]
    createMany?: NotificationCreateManyRelated_communityInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type EnumCommunityTypeFieldUpdateOperationsInput = {
    set?: $Enums.CommunityType
  }

  export type UserUpdateOneRequiredWithoutCreated_communitiesNestedInput = {
    create?: XOR<UserCreateWithoutCreated_communitiesInput, UserUncheckedCreateWithoutCreated_communitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreated_communitiesInput
    upsert?: UserUpsertWithoutCreated_communitiesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreated_communitiesInput, UserUpdateWithoutCreated_communitiesInput>, UserUncheckedUpdateWithoutCreated_communitiesInput>
  }

  export type CampusUpdateOneWithoutCommunitiesNestedInput = {
    create?: XOR<CampusCreateWithoutCommunitiesInput, CampusUncheckedCreateWithoutCommunitiesInput>
    connectOrCreate?: CampusCreateOrConnectWithoutCommunitiesInput
    upsert?: CampusUpsertWithoutCommunitiesInput
    disconnect?: CampusWhereInput | boolean
    delete?: CampusWhereInput | boolean
    connect?: CampusWhereUniqueInput
    update?: XOR<XOR<CampusUpdateToOneWithWhereWithoutCommunitiesInput, CampusUpdateWithoutCommunitiesInput>, CampusUncheckedUpdateWithoutCommunitiesInput>
  }

  export type FacultyUpdateOneWithoutCommunitiesNestedInput = {
    create?: XOR<FacultyCreateWithoutCommunitiesInput, FacultyUncheckedCreateWithoutCommunitiesInput>
    connectOrCreate?: FacultyCreateOrConnectWithoutCommunitiesInput
    upsert?: FacultyUpsertWithoutCommunitiesInput
    disconnect?: FacultyWhereInput | boolean
    delete?: FacultyWhereInput | boolean
    connect?: FacultyWhereUniqueInput
    update?: XOR<XOR<FacultyUpdateToOneWithWhereWithoutCommunitiesInput, FacultyUpdateWithoutCommunitiesInput>, FacultyUncheckedUpdateWithoutCommunitiesInput>
  }

  export type CourseUpdateOneWithoutCommunitiesNestedInput = {
    create?: XOR<CourseCreateWithoutCommunitiesInput, CourseUncheckedCreateWithoutCommunitiesInput>
    connectOrCreate?: CourseCreateOrConnectWithoutCommunitiesInput
    upsert?: CourseUpsertWithoutCommunitiesInput
    disconnect?: CourseWhereInput | boolean
    delete?: CourseWhereInput | boolean
    connect?: CourseWhereUniqueInput
    update?: XOR<XOR<CourseUpdateToOneWithWhereWithoutCommunitiesInput, CourseUpdateWithoutCommunitiesInput>, CourseUncheckedUpdateWithoutCommunitiesInput>
  }

  export type UnitUpdateOneWithoutCommunitiesNestedInput = {
    create?: XOR<UnitCreateWithoutCommunitiesInput, UnitUncheckedCreateWithoutCommunitiesInput>
    connectOrCreate?: UnitCreateOrConnectWithoutCommunitiesInput
    upsert?: UnitUpsertWithoutCommunitiesInput
    disconnect?: UnitWhereInput | boolean
    delete?: UnitWhereInput | boolean
    connect?: UnitWhereUniqueInput
    update?: XOR<XOR<UnitUpdateToOneWithWhereWithoutCommunitiesInput, UnitUpdateWithoutCommunitiesInput>, UnitUncheckedUpdateWithoutCommunitiesInput>
  }

  export type PostUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<PostCreateWithoutCommunityInput, PostUncheckedCreateWithoutCommunityInput> | PostCreateWithoutCommunityInput[] | PostUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: PostCreateOrConnectWithoutCommunityInput | PostCreateOrConnectWithoutCommunityInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutCommunityInput | PostUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: PostCreateManyCommunityInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutCommunityInput | PostUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: PostUpdateManyWithWhereWithoutCommunityInput | PostUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type CommunityMembershipUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<CommunityMembershipCreateWithoutCommunityInput, CommunityMembershipUncheckedCreateWithoutCommunityInput> | CommunityMembershipCreateWithoutCommunityInput[] | CommunityMembershipUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: CommunityMembershipCreateOrConnectWithoutCommunityInput | CommunityMembershipCreateOrConnectWithoutCommunityInput[]
    upsert?: CommunityMembershipUpsertWithWhereUniqueWithoutCommunityInput | CommunityMembershipUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: CommunityMembershipCreateManyCommunityInputEnvelope
    set?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    disconnect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    delete?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    connect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    update?: CommunityMembershipUpdateWithWhereUniqueWithoutCommunityInput | CommunityMembershipUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: CommunityMembershipUpdateManyWithWhereWithoutCommunityInput | CommunityMembershipUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: CommunityMembershipScalarWhereInput | CommunityMembershipScalarWhereInput[]
  }

  export type ModeratorUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<ModeratorCreateWithoutCommunityInput, ModeratorUncheckedCreateWithoutCommunityInput> | ModeratorCreateWithoutCommunityInput[] | ModeratorUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: ModeratorCreateOrConnectWithoutCommunityInput | ModeratorCreateOrConnectWithoutCommunityInput[]
    upsert?: ModeratorUpsertWithWhereUniqueWithoutCommunityInput | ModeratorUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: ModeratorCreateManyCommunityInputEnvelope
    set?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    disconnect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    delete?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    connect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    update?: ModeratorUpdateWithWhereUniqueWithoutCommunityInput | ModeratorUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: ModeratorUpdateManyWithWhereWithoutCommunityInput | ModeratorUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: ModeratorScalarWhereInput | ModeratorScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutRelated_communityNestedInput = {
    create?: XOR<NotificationCreateWithoutRelated_communityInput, NotificationUncheckedCreateWithoutRelated_communityInput> | NotificationCreateWithoutRelated_communityInput[] | NotificationUncheckedCreateWithoutRelated_communityInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_communityInput | NotificationCreateOrConnectWithoutRelated_communityInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRelated_communityInput | NotificationUpsertWithWhereUniqueWithoutRelated_communityInput[]
    createMany?: NotificationCreateManyRelated_communityInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRelated_communityInput | NotificationUpdateWithWhereUniqueWithoutRelated_communityInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRelated_communityInput | NotificationUpdateManyWithWhereWithoutRelated_communityInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PostUncheckedUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<PostCreateWithoutCommunityInput, PostUncheckedCreateWithoutCommunityInput> | PostCreateWithoutCommunityInput[] | PostUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: PostCreateOrConnectWithoutCommunityInput | PostCreateOrConnectWithoutCommunityInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutCommunityInput | PostUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: PostCreateManyCommunityInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutCommunityInput | PostUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: PostUpdateManyWithWhereWithoutCommunityInput | PostUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<CommunityMembershipCreateWithoutCommunityInput, CommunityMembershipUncheckedCreateWithoutCommunityInput> | CommunityMembershipCreateWithoutCommunityInput[] | CommunityMembershipUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: CommunityMembershipCreateOrConnectWithoutCommunityInput | CommunityMembershipCreateOrConnectWithoutCommunityInput[]
    upsert?: CommunityMembershipUpsertWithWhereUniqueWithoutCommunityInput | CommunityMembershipUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: CommunityMembershipCreateManyCommunityInputEnvelope
    set?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    disconnect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    delete?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    connect?: CommunityMembershipWhereUniqueInput | CommunityMembershipWhereUniqueInput[]
    update?: CommunityMembershipUpdateWithWhereUniqueWithoutCommunityInput | CommunityMembershipUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: CommunityMembershipUpdateManyWithWhereWithoutCommunityInput | CommunityMembershipUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: CommunityMembershipScalarWhereInput | CommunityMembershipScalarWhereInput[]
  }

  export type ModeratorUncheckedUpdateManyWithoutCommunityNestedInput = {
    create?: XOR<ModeratorCreateWithoutCommunityInput, ModeratorUncheckedCreateWithoutCommunityInput> | ModeratorCreateWithoutCommunityInput[] | ModeratorUncheckedCreateWithoutCommunityInput[]
    connectOrCreate?: ModeratorCreateOrConnectWithoutCommunityInput | ModeratorCreateOrConnectWithoutCommunityInput[]
    upsert?: ModeratorUpsertWithWhereUniqueWithoutCommunityInput | ModeratorUpsertWithWhereUniqueWithoutCommunityInput[]
    createMany?: ModeratorCreateManyCommunityInputEnvelope
    set?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    disconnect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    delete?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    connect?: ModeratorWhereUniqueInput | ModeratorWhereUniqueInput[]
    update?: ModeratorUpdateWithWhereUniqueWithoutCommunityInput | ModeratorUpdateWithWhereUniqueWithoutCommunityInput[]
    updateMany?: ModeratorUpdateManyWithWhereWithoutCommunityInput | ModeratorUpdateManyWithWhereWithoutCommunityInput[]
    deleteMany?: ModeratorScalarWhereInput | ModeratorScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput = {
    create?: XOR<NotificationCreateWithoutRelated_communityInput, NotificationUncheckedCreateWithoutRelated_communityInput> | NotificationCreateWithoutRelated_communityInput[] | NotificationUncheckedCreateWithoutRelated_communityInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_communityInput | NotificationCreateOrConnectWithoutRelated_communityInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRelated_communityInput | NotificationUpsertWithWhereUniqueWithoutRelated_communityInput[]
    createMany?: NotificationCreateManyRelated_communityInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRelated_communityInput | NotificationUpdateWithWhereUniqueWithoutRelated_communityInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRelated_communityInput | NotificationUpdateManyWithWhereWithoutRelated_communityInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutPostsInput = {
    create?: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPostsInput
    connect?: UserWhereUniqueInput
  }

  export type CommunityCreateNestedOneWithoutPostsInput = {
    create?: XOR<CommunityCreateWithoutPostsInput, CommunityUncheckedCreateWithoutPostsInput>
    connectOrCreate?: CommunityCreateOrConnectWithoutPostsInput
    connect?: CommunityWhereUniqueInput
  }

  export type CommentCreateNestedManyWithoutPostInput = {
    create?: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput> | CommentCreateWithoutPostInput[] | CommentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPostInput | CommentCreateOrConnectWithoutPostInput[]
    createMany?: CommentCreateManyPostInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type VoteCreateNestedManyWithoutPostInput = {
    create?: XOR<VoteCreateWithoutPostInput, VoteUncheckedCreateWithoutPostInput> | VoteCreateWithoutPostInput[] | VoteUncheckedCreateWithoutPostInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutPostInput | VoteCreateOrConnectWithoutPostInput[]
    createMany?: VoteCreateManyPostInputEnvelope
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
  }

  export type SavedContentCreateNestedManyWithoutPostInput = {
    create?: XOR<SavedContentCreateWithoutPostInput, SavedContentUncheckedCreateWithoutPostInput> | SavedContentCreateWithoutPostInput[] | SavedContentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutPostInput | SavedContentCreateOrConnectWithoutPostInput[]
    createMany?: SavedContentCreateManyPostInputEnvelope
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutRelated_postInput = {
    create?: XOR<NotificationCreateWithoutRelated_postInput, NotificationUncheckedCreateWithoutRelated_postInput> | NotificationCreateWithoutRelated_postInput[] | NotificationUncheckedCreateWithoutRelated_postInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_postInput | NotificationCreateOrConnectWithoutRelated_postInput[]
    createMany?: NotificationCreateManyRelated_postInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput> | CommentCreateWithoutPostInput[] | CommentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPostInput | CommentCreateOrConnectWithoutPostInput[]
    createMany?: CommentCreateManyPostInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type VoteUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<VoteCreateWithoutPostInput, VoteUncheckedCreateWithoutPostInput> | VoteCreateWithoutPostInput[] | VoteUncheckedCreateWithoutPostInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutPostInput | VoteCreateOrConnectWithoutPostInput[]
    createMany?: VoteCreateManyPostInputEnvelope
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
  }

  export type SavedContentUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<SavedContentCreateWithoutPostInput, SavedContentUncheckedCreateWithoutPostInput> | SavedContentCreateWithoutPostInput[] | SavedContentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutPostInput | SavedContentCreateOrConnectWithoutPostInput[]
    createMany?: SavedContentCreateManyPostInputEnvelope
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutRelated_postInput = {
    create?: XOR<NotificationCreateWithoutRelated_postInput, NotificationUncheckedCreateWithoutRelated_postInput> | NotificationCreateWithoutRelated_postInput[] | NotificationUncheckedCreateWithoutRelated_postInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_postInput | NotificationCreateOrConnectWithoutRelated_postInput[]
    createMany?: NotificationCreateManyRelated_postInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type EnumPostContentTypeFieldUpdateOperationsInput = {
    set?: $Enums.PostContentType
  }

  export type UserUpdateOneRequiredWithoutPostsNestedInput = {
    create?: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutPostsInput
    upsert?: UserUpsertWithoutPostsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPostsInput, UserUpdateWithoutPostsInput>, UserUncheckedUpdateWithoutPostsInput>
  }

  export type CommunityUpdateOneRequiredWithoutPostsNestedInput = {
    create?: XOR<CommunityCreateWithoutPostsInput, CommunityUncheckedCreateWithoutPostsInput>
    connectOrCreate?: CommunityCreateOrConnectWithoutPostsInput
    upsert?: CommunityUpsertWithoutPostsInput
    connect?: CommunityWhereUniqueInput
    update?: XOR<XOR<CommunityUpdateToOneWithWhereWithoutPostsInput, CommunityUpdateWithoutPostsInput>, CommunityUncheckedUpdateWithoutPostsInput>
  }

  export type CommentUpdateManyWithoutPostNestedInput = {
    create?: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput> | CommentCreateWithoutPostInput[] | CommentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPostInput | CommentCreateOrConnectWithoutPostInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutPostInput | CommentUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: CommentCreateManyPostInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutPostInput | CommentUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutPostInput | CommentUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type VoteUpdateManyWithoutPostNestedInput = {
    create?: XOR<VoteCreateWithoutPostInput, VoteUncheckedCreateWithoutPostInput> | VoteCreateWithoutPostInput[] | VoteUncheckedCreateWithoutPostInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutPostInput | VoteCreateOrConnectWithoutPostInput[]
    upsert?: VoteUpsertWithWhereUniqueWithoutPostInput | VoteUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: VoteCreateManyPostInputEnvelope
    set?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    disconnect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    delete?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    update?: VoteUpdateWithWhereUniqueWithoutPostInput | VoteUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: VoteUpdateManyWithWhereWithoutPostInput | VoteUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: VoteScalarWhereInput | VoteScalarWhereInput[]
  }

  export type SavedContentUpdateManyWithoutPostNestedInput = {
    create?: XOR<SavedContentCreateWithoutPostInput, SavedContentUncheckedCreateWithoutPostInput> | SavedContentCreateWithoutPostInput[] | SavedContentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutPostInput | SavedContentCreateOrConnectWithoutPostInput[]
    upsert?: SavedContentUpsertWithWhereUniqueWithoutPostInput | SavedContentUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: SavedContentCreateManyPostInputEnvelope
    set?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    disconnect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    delete?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    update?: SavedContentUpdateWithWhereUniqueWithoutPostInput | SavedContentUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: SavedContentUpdateManyWithWhereWithoutPostInput | SavedContentUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: SavedContentScalarWhereInput | SavedContentScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutRelated_postNestedInput = {
    create?: XOR<NotificationCreateWithoutRelated_postInput, NotificationUncheckedCreateWithoutRelated_postInput> | NotificationCreateWithoutRelated_postInput[] | NotificationUncheckedCreateWithoutRelated_postInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_postInput | NotificationCreateOrConnectWithoutRelated_postInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRelated_postInput | NotificationUpsertWithWhereUniqueWithoutRelated_postInput[]
    createMany?: NotificationCreateManyRelated_postInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRelated_postInput | NotificationUpdateWithWhereUniqueWithoutRelated_postInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRelated_postInput | NotificationUpdateManyWithWhereWithoutRelated_postInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput> | CommentCreateWithoutPostInput[] | CommentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutPostInput | CommentCreateOrConnectWithoutPostInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutPostInput | CommentUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: CommentCreateManyPostInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutPostInput | CommentUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutPostInput | CommentUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type VoteUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<VoteCreateWithoutPostInput, VoteUncheckedCreateWithoutPostInput> | VoteCreateWithoutPostInput[] | VoteUncheckedCreateWithoutPostInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutPostInput | VoteCreateOrConnectWithoutPostInput[]
    upsert?: VoteUpsertWithWhereUniqueWithoutPostInput | VoteUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: VoteCreateManyPostInputEnvelope
    set?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    disconnect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    delete?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    update?: VoteUpdateWithWhereUniqueWithoutPostInput | VoteUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: VoteUpdateManyWithWhereWithoutPostInput | VoteUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: VoteScalarWhereInput | VoteScalarWhereInput[]
  }

  export type SavedContentUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<SavedContentCreateWithoutPostInput, SavedContentUncheckedCreateWithoutPostInput> | SavedContentCreateWithoutPostInput[] | SavedContentUncheckedCreateWithoutPostInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutPostInput | SavedContentCreateOrConnectWithoutPostInput[]
    upsert?: SavedContentUpsertWithWhereUniqueWithoutPostInput | SavedContentUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: SavedContentCreateManyPostInputEnvelope
    set?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    disconnect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    delete?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    update?: SavedContentUpdateWithWhereUniqueWithoutPostInput | SavedContentUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: SavedContentUpdateManyWithWhereWithoutPostInput | SavedContentUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: SavedContentScalarWhereInput | SavedContentScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutRelated_postNestedInput = {
    create?: XOR<NotificationCreateWithoutRelated_postInput, NotificationUncheckedCreateWithoutRelated_postInput> | NotificationCreateWithoutRelated_postInput[] | NotificationUncheckedCreateWithoutRelated_postInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_postInput | NotificationCreateOrConnectWithoutRelated_postInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRelated_postInput | NotificationUpsertWithWhereUniqueWithoutRelated_postInput[]
    createMany?: NotificationCreateManyRelated_postInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRelated_postInput | NotificationUpdateWithWhereUniqueWithoutRelated_postInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRelated_postInput | NotificationUpdateManyWithWhereWithoutRelated_postInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type PostCreateNestedOneWithoutCommentsInput = {
    create?: XOR<PostCreateWithoutCommentsInput, PostUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: PostCreateOrConnectWithoutCommentsInput
    connect?: PostWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCommentsInput = {
    create?: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentsInput
    connect?: UserWhereUniqueInput
  }

  export type CommentCreateNestedOneWithoutRepliesInput = {
    create?: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutRepliesInput
    connect?: CommentWhereUniqueInput
  }

  export type CommentCreateNestedManyWithoutParent_commentInput = {
    create?: XOR<CommentCreateWithoutParent_commentInput, CommentUncheckedCreateWithoutParent_commentInput> | CommentCreateWithoutParent_commentInput[] | CommentUncheckedCreateWithoutParent_commentInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutParent_commentInput | CommentCreateOrConnectWithoutParent_commentInput[]
    createMany?: CommentCreateManyParent_commentInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type VoteCreateNestedManyWithoutCommentInput = {
    create?: XOR<VoteCreateWithoutCommentInput, VoteUncheckedCreateWithoutCommentInput> | VoteCreateWithoutCommentInput[] | VoteUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutCommentInput | VoteCreateOrConnectWithoutCommentInput[]
    createMany?: VoteCreateManyCommentInputEnvelope
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
  }

  export type SavedContentCreateNestedManyWithoutCommentInput = {
    create?: XOR<SavedContentCreateWithoutCommentInput, SavedContentUncheckedCreateWithoutCommentInput> | SavedContentCreateWithoutCommentInput[] | SavedContentUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutCommentInput | SavedContentCreateOrConnectWithoutCommentInput[]
    createMany?: SavedContentCreateManyCommentInputEnvelope
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutRelated_commentInput = {
    create?: XOR<NotificationCreateWithoutRelated_commentInput, NotificationUncheckedCreateWithoutRelated_commentInput> | NotificationCreateWithoutRelated_commentInput[] | NotificationUncheckedCreateWithoutRelated_commentInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_commentInput | NotificationCreateOrConnectWithoutRelated_commentInput[]
    createMany?: NotificationCreateManyRelated_commentInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type CommentUncheckedCreateNestedManyWithoutParent_commentInput = {
    create?: XOR<CommentCreateWithoutParent_commentInput, CommentUncheckedCreateWithoutParent_commentInput> | CommentCreateWithoutParent_commentInput[] | CommentUncheckedCreateWithoutParent_commentInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutParent_commentInput | CommentCreateOrConnectWithoutParent_commentInput[]
    createMany?: CommentCreateManyParent_commentInputEnvelope
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
  }

  export type VoteUncheckedCreateNestedManyWithoutCommentInput = {
    create?: XOR<VoteCreateWithoutCommentInput, VoteUncheckedCreateWithoutCommentInput> | VoteCreateWithoutCommentInput[] | VoteUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutCommentInput | VoteCreateOrConnectWithoutCommentInput[]
    createMany?: VoteCreateManyCommentInputEnvelope
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
  }

  export type SavedContentUncheckedCreateNestedManyWithoutCommentInput = {
    create?: XOR<SavedContentCreateWithoutCommentInput, SavedContentUncheckedCreateWithoutCommentInput> | SavedContentCreateWithoutCommentInput[] | SavedContentUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutCommentInput | SavedContentCreateOrConnectWithoutCommentInput[]
    createMany?: SavedContentCreateManyCommentInputEnvelope
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutRelated_commentInput = {
    create?: XOR<NotificationCreateWithoutRelated_commentInput, NotificationUncheckedCreateWithoutRelated_commentInput> | NotificationCreateWithoutRelated_commentInput[] | NotificationUncheckedCreateWithoutRelated_commentInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_commentInput | NotificationCreateOrConnectWithoutRelated_commentInput[]
    createMany?: NotificationCreateManyRelated_commentInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type PostUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<PostCreateWithoutCommentsInput, PostUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: PostCreateOrConnectWithoutCommentsInput
    upsert?: PostUpsertWithoutCommentsInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutCommentsInput, PostUpdateWithoutCommentsInput>, PostUncheckedUpdateWithoutCommentsInput>
  }

  export type UserUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCommentsInput
    upsert?: UserUpsertWithoutCommentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCommentsInput, UserUpdateWithoutCommentsInput>, UserUncheckedUpdateWithoutCommentsInput>
  }

  export type CommentUpdateOneWithoutRepliesNestedInput = {
    create?: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutRepliesInput
    upsert?: CommentUpsertWithoutRepliesInput
    disconnect?: CommentWhereInput | boolean
    delete?: CommentWhereInput | boolean
    connect?: CommentWhereUniqueInput
    update?: XOR<XOR<CommentUpdateToOneWithWhereWithoutRepliesInput, CommentUpdateWithoutRepliesInput>, CommentUncheckedUpdateWithoutRepliesInput>
  }

  export type CommentUpdateManyWithoutParent_commentNestedInput = {
    create?: XOR<CommentCreateWithoutParent_commentInput, CommentUncheckedCreateWithoutParent_commentInput> | CommentCreateWithoutParent_commentInput[] | CommentUncheckedCreateWithoutParent_commentInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutParent_commentInput | CommentCreateOrConnectWithoutParent_commentInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutParent_commentInput | CommentUpsertWithWhereUniqueWithoutParent_commentInput[]
    createMany?: CommentCreateManyParent_commentInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutParent_commentInput | CommentUpdateWithWhereUniqueWithoutParent_commentInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutParent_commentInput | CommentUpdateManyWithWhereWithoutParent_commentInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type VoteUpdateManyWithoutCommentNestedInput = {
    create?: XOR<VoteCreateWithoutCommentInput, VoteUncheckedCreateWithoutCommentInput> | VoteCreateWithoutCommentInput[] | VoteUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutCommentInput | VoteCreateOrConnectWithoutCommentInput[]
    upsert?: VoteUpsertWithWhereUniqueWithoutCommentInput | VoteUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: VoteCreateManyCommentInputEnvelope
    set?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    disconnect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    delete?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    update?: VoteUpdateWithWhereUniqueWithoutCommentInput | VoteUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: VoteUpdateManyWithWhereWithoutCommentInput | VoteUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: VoteScalarWhereInput | VoteScalarWhereInput[]
  }

  export type SavedContentUpdateManyWithoutCommentNestedInput = {
    create?: XOR<SavedContentCreateWithoutCommentInput, SavedContentUncheckedCreateWithoutCommentInput> | SavedContentCreateWithoutCommentInput[] | SavedContentUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutCommentInput | SavedContentCreateOrConnectWithoutCommentInput[]
    upsert?: SavedContentUpsertWithWhereUniqueWithoutCommentInput | SavedContentUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: SavedContentCreateManyCommentInputEnvelope
    set?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    disconnect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    delete?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    update?: SavedContentUpdateWithWhereUniqueWithoutCommentInput | SavedContentUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: SavedContentUpdateManyWithWhereWithoutCommentInput | SavedContentUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: SavedContentScalarWhereInput | SavedContentScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutRelated_commentNestedInput = {
    create?: XOR<NotificationCreateWithoutRelated_commentInput, NotificationUncheckedCreateWithoutRelated_commentInput> | NotificationCreateWithoutRelated_commentInput[] | NotificationUncheckedCreateWithoutRelated_commentInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_commentInput | NotificationCreateOrConnectWithoutRelated_commentInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRelated_commentInput | NotificationUpsertWithWhereUniqueWithoutRelated_commentInput[]
    createMany?: NotificationCreateManyRelated_commentInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRelated_commentInput | NotificationUpdateWithWhereUniqueWithoutRelated_commentInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRelated_commentInput | NotificationUpdateManyWithWhereWithoutRelated_commentInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type CommentUncheckedUpdateManyWithoutParent_commentNestedInput = {
    create?: XOR<CommentCreateWithoutParent_commentInput, CommentUncheckedCreateWithoutParent_commentInput> | CommentCreateWithoutParent_commentInput[] | CommentUncheckedCreateWithoutParent_commentInput[]
    connectOrCreate?: CommentCreateOrConnectWithoutParent_commentInput | CommentCreateOrConnectWithoutParent_commentInput[]
    upsert?: CommentUpsertWithWhereUniqueWithoutParent_commentInput | CommentUpsertWithWhereUniqueWithoutParent_commentInput[]
    createMany?: CommentCreateManyParent_commentInputEnvelope
    set?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    disconnect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    delete?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    connect?: CommentWhereUniqueInput | CommentWhereUniqueInput[]
    update?: CommentUpdateWithWhereUniqueWithoutParent_commentInput | CommentUpdateWithWhereUniqueWithoutParent_commentInput[]
    updateMany?: CommentUpdateManyWithWhereWithoutParent_commentInput | CommentUpdateManyWithWhereWithoutParent_commentInput[]
    deleteMany?: CommentScalarWhereInput | CommentScalarWhereInput[]
  }

  export type VoteUncheckedUpdateManyWithoutCommentNestedInput = {
    create?: XOR<VoteCreateWithoutCommentInput, VoteUncheckedCreateWithoutCommentInput> | VoteCreateWithoutCommentInput[] | VoteUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: VoteCreateOrConnectWithoutCommentInput | VoteCreateOrConnectWithoutCommentInput[]
    upsert?: VoteUpsertWithWhereUniqueWithoutCommentInput | VoteUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: VoteCreateManyCommentInputEnvelope
    set?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    disconnect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    delete?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    connect?: VoteWhereUniqueInput | VoteWhereUniqueInput[]
    update?: VoteUpdateWithWhereUniqueWithoutCommentInput | VoteUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: VoteUpdateManyWithWhereWithoutCommentInput | VoteUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: VoteScalarWhereInput | VoteScalarWhereInput[]
  }

  export type SavedContentUncheckedUpdateManyWithoutCommentNestedInput = {
    create?: XOR<SavedContentCreateWithoutCommentInput, SavedContentUncheckedCreateWithoutCommentInput> | SavedContentCreateWithoutCommentInput[] | SavedContentUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: SavedContentCreateOrConnectWithoutCommentInput | SavedContentCreateOrConnectWithoutCommentInput[]
    upsert?: SavedContentUpsertWithWhereUniqueWithoutCommentInput | SavedContentUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: SavedContentCreateManyCommentInputEnvelope
    set?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    disconnect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    delete?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    connect?: SavedContentWhereUniqueInput | SavedContentWhereUniqueInput[]
    update?: SavedContentUpdateWithWhereUniqueWithoutCommentInput | SavedContentUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: SavedContentUpdateManyWithWhereWithoutCommentInput | SavedContentUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: SavedContentScalarWhereInput | SavedContentScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutRelated_commentNestedInput = {
    create?: XOR<NotificationCreateWithoutRelated_commentInput, NotificationUncheckedCreateWithoutRelated_commentInput> | NotificationCreateWithoutRelated_commentInput[] | NotificationUncheckedCreateWithoutRelated_commentInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutRelated_commentInput | NotificationCreateOrConnectWithoutRelated_commentInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutRelated_commentInput | NotificationUpsertWithWhereUniqueWithoutRelated_commentInput[]
    createMany?: NotificationCreateManyRelated_commentInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutRelated_commentInput | NotificationUpdateWithWhereUniqueWithoutRelated_commentInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutRelated_commentInput | NotificationUpdateManyWithWhereWithoutRelated_commentInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutVotesInput = {
    create?: XOR<UserCreateWithoutVotesInput, UserUncheckedCreateWithoutVotesInput>
    connectOrCreate?: UserCreateOrConnectWithoutVotesInput
    connect?: UserWhereUniqueInput
  }

  export type PostCreateNestedOneWithoutVotesInput = {
    create?: XOR<PostCreateWithoutVotesInput, PostUncheckedCreateWithoutVotesInput>
    connectOrCreate?: PostCreateOrConnectWithoutVotesInput
    connect?: PostWhereUniqueInput
  }

  export type CommentCreateNestedOneWithoutVotesInput = {
    create?: XOR<CommentCreateWithoutVotesInput, CommentUncheckedCreateWithoutVotesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutVotesInput
    connect?: CommentWhereUniqueInput
  }

  export type EnumVoteTypeFieldUpdateOperationsInput = {
    set?: $Enums.VoteType
  }

  export type UserUpdateOneRequiredWithoutVotesNestedInput = {
    create?: XOR<UserCreateWithoutVotesInput, UserUncheckedCreateWithoutVotesInput>
    connectOrCreate?: UserCreateOrConnectWithoutVotesInput
    upsert?: UserUpsertWithoutVotesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutVotesInput, UserUpdateWithoutVotesInput>, UserUncheckedUpdateWithoutVotesInput>
  }

  export type PostUpdateOneWithoutVotesNestedInput = {
    create?: XOR<PostCreateWithoutVotesInput, PostUncheckedCreateWithoutVotesInput>
    connectOrCreate?: PostCreateOrConnectWithoutVotesInput
    upsert?: PostUpsertWithoutVotesInput
    disconnect?: PostWhereInput | boolean
    delete?: PostWhereInput | boolean
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutVotesInput, PostUpdateWithoutVotesInput>, PostUncheckedUpdateWithoutVotesInput>
  }

  export type CommentUpdateOneWithoutVotesNestedInput = {
    create?: XOR<CommentCreateWithoutVotesInput, CommentUncheckedCreateWithoutVotesInput>
    connectOrCreate?: CommentCreateOrConnectWithoutVotesInput
    upsert?: CommentUpsertWithoutVotesInput
    disconnect?: CommentWhereInput | boolean
    delete?: CommentWhereInput | boolean
    connect?: CommentWhereUniqueInput
    update?: XOR<XOR<CommentUpdateToOneWithWhereWithoutVotesInput, CommentUpdateWithoutVotesInput>, CommentUncheckedUpdateWithoutVotesInput>
  }

  export type UserCreateNestedOneWithoutMembershipsInput = {
    create?: XOR<UserCreateWithoutMembershipsInput, UserUncheckedCreateWithoutMembershipsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMembershipsInput
    connect?: UserWhereUniqueInput
  }

  export type CommunityCreateNestedOneWithoutMembersInput = {
    create?: XOR<CommunityCreateWithoutMembersInput, CommunityUncheckedCreateWithoutMembersInput>
    connectOrCreate?: CommunityCreateOrConnectWithoutMembersInput
    connect?: CommunityWhereUniqueInput
  }

  export type EnumMembershipRoleFieldUpdateOperationsInput = {
    set?: $Enums.MembershipRole
  }

  export type UserUpdateOneRequiredWithoutMembershipsNestedInput = {
    create?: XOR<UserCreateWithoutMembershipsInput, UserUncheckedCreateWithoutMembershipsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMembershipsInput
    upsert?: UserUpsertWithoutMembershipsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMembershipsInput, UserUpdateWithoutMembershipsInput>, UserUncheckedUpdateWithoutMembershipsInput>
  }

  export type CommunityUpdateOneRequiredWithoutMembersNestedInput = {
    create?: XOR<CommunityCreateWithoutMembersInput, CommunityUncheckedCreateWithoutMembersInput>
    connectOrCreate?: CommunityCreateOrConnectWithoutMembersInput
    upsert?: CommunityUpsertWithoutMembersInput
    connect?: CommunityWhereUniqueInput
    update?: XOR<XOR<CommunityUpdateToOneWithWhereWithoutMembersInput, CommunityUpdateWithoutMembersInput>, CommunityUncheckedUpdateWithoutMembersInput>
  }

  export type UserCreateNestedOneWithoutModerated_communitiesInput = {
    create?: XOR<UserCreateWithoutModerated_communitiesInput, UserUncheckedCreateWithoutModerated_communitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutModerated_communitiesInput
    connect?: UserWhereUniqueInput
  }

  export type CommunityCreateNestedOneWithoutModeratorsInput = {
    create?: XOR<CommunityCreateWithoutModeratorsInput, CommunityUncheckedCreateWithoutModeratorsInput>
    connectOrCreate?: CommunityCreateOrConnectWithoutModeratorsInput
    connect?: CommunityWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutModerated_communitiesNestedInput = {
    create?: XOR<UserCreateWithoutModerated_communitiesInput, UserUncheckedCreateWithoutModerated_communitiesInput>
    connectOrCreate?: UserCreateOrConnectWithoutModerated_communitiesInput
    upsert?: UserUpsertWithoutModerated_communitiesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutModerated_communitiesInput, UserUpdateWithoutModerated_communitiesInput>, UserUncheckedUpdateWithoutModerated_communitiesInput>
  }

  export type CommunityUpdateOneRequiredWithoutModeratorsNestedInput = {
    create?: XOR<CommunityCreateWithoutModeratorsInput, CommunityUncheckedCreateWithoutModeratorsInput>
    connectOrCreate?: CommunityCreateOrConnectWithoutModeratorsInput
    upsert?: CommunityUpsertWithoutModeratorsInput
    connect?: CommunityWhereUniqueInput
    update?: XOR<XOR<CommunityUpdateToOneWithWhereWithoutModeratorsInput, CommunityUpdateWithoutModeratorsInput>, CommunityUncheckedUpdateWithoutModeratorsInput>
  }

  export type UserCreateNestedOneWithoutUnit_enrollmentsInput = {
    create?: XOR<UserCreateWithoutUnit_enrollmentsInput, UserUncheckedCreateWithoutUnit_enrollmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUnit_enrollmentsInput
    connect?: UserWhereUniqueInput
  }

  export type UnitCreateNestedOneWithoutUser_enrollmentsInput = {
    create?: XOR<UnitCreateWithoutUser_enrollmentsInput, UnitUncheckedCreateWithoutUser_enrollmentsInput>
    connectOrCreate?: UnitCreateOrConnectWithoutUser_enrollmentsInput
    connect?: UnitWhereUniqueInput
  }

  export type EnumEnrollmentStatusFieldUpdateOperationsInput = {
    set?: $Enums.EnrollmentStatus
  }

  export type UserUpdateOneRequiredWithoutUnit_enrollmentsNestedInput = {
    create?: XOR<UserCreateWithoutUnit_enrollmentsInput, UserUncheckedCreateWithoutUnit_enrollmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUnit_enrollmentsInput
    upsert?: UserUpsertWithoutUnit_enrollmentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUnit_enrollmentsInput, UserUpdateWithoutUnit_enrollmentsInput>, UserUncheckedUpdateWithoutUnit_enrollmentsInput>
  }

  export type UnitUpdateOneRequiredWithoutUser_enrollmentsNestedInput = {
    create?: XOR<UnitCreateWithoutUser_enrollmentsInput, UnitUncheckedCreateWithoutUser_enrollmentsInput>
    connectOrCreate?: UnitCreateOrConnectWithoutUser_enrollmentsInput
    upsert?: UnitUpsertWithoutUser_enrollmentsInput
    connect?: UnitWhereUniqueInput
    update?: XOR<XOR<UnitUpdateToOneWithWhereWithoutUser_enrollmentsInput, UnitUpdateWithoutUser_enrollmentsInput>, UnitUncheckedUpdateWithoutUser_enrollmentsInput>
  }

  export type UserCreateNestedOneWithoutSaved_contentInput = {
    create?: XOR<UserCreateWithoutSaved_contentInput, UserUncheckedCreateWithoutSaved_contentInput>
    connectOrCreate?: UserCreateOrConnectWithoutSaved_contentInput
    connect?: UserWhereUniqueInput
  }

  export type PostCreateNestedOneWithoutSaved_by_usersInput = {
    create?: XOR<PostCreateWithoutSaved_by_usersInput, PostUncheckedCreateWithoutSaved_by_usersInput>
    connectOrCreate?: PostCreateOrConnectWithoutSaved_by_usersInput
    connect?: PostWhereUniqueInput
  }

  export type CommentCreateNestedOneWithoutSaved_by_usersInput = {
    create?: XOR<CommentCreateWithoutSaved_by_usersInput, CommentUncheckedCreateWithoutSaved_by_usersInput>
    connectOrCreate?: CommentCreateOrConnectWithoutSaved_by_usersInput
    connect?: CommentWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSaved_contentNestedInput = {
    create?: XOR<UserCreateWithoutSaved_contentInput, UserUncheckedCreateWithoutSaved_contentInput>
    connectOrCreate?: UserCreateOrConnectWithoutSaved_contentInput
    upsert?: UserUpsertWithoutSaved_contentInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSaved_contentInput, UserUpdateWithoutSaved_contentInput>, UserUncheckedUpdateWithoutSaved_contentInput>
  }

  export type PostUpdateOneWithoutSaved_by_usersNestedInput = {
    create?: XOR<PostCreateWithoutSaved_by_usersInput, PostUncheckedCreateWithoutSaved_by_usersInput>
    connectOrCreate?: PostCreateOrConnectWithoutSaved_by_usersInput
    upsert?: PostUpsertWithoutSaved_by_usersInput
    disconnect?: PostWhereInput | boolean
    delete?: PostWhereInput | boolean
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutSaved_by_usersInput, PostUpdateWithoutSaved_by_usersInput>, PostUncheckedUpdateWithoutSaved_by_usersInput>
  }

  export type CommentUpdateOneWithoutSaved_by_usersNestedInput = {
    create?: XOR<CommentCreateWithoutSaved_by_usersInput, CommentUncheckedCreateWithoutSaved_by_usersInput>
    connectOrCreate?: CommentCreateOrConnectWithoutSaved_by_usersInput
    upsert?: CommentUpsertWithoutSaved_by_usersInput
    disconnect?: CommentWhereInput | boolean
    delete?: CommentWhereInput | boolean
    connect?: CommentWhereUniqueInput
    update?: XOR<XOR<CommentUpdateToOneWithWhereWithoutSaved_by_usersInput, CommentUpdateWithoutSaved_by_usersInput>, CommentUncheckedUpdateWithoutSaved_by_usersInput>
  }

  export type UserCreateNestedOneWithoutNotifications_receivedInput = {
    create?: XOR<UserCreateWithoutNotifications_receivedInput, UserUncheckedCreateWithoutNotifications_receivedInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotifications_receivedInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutNotifications_sentInput = {
    create?: XOR<UserCreateWithoutNotifications_sentInput, UserUncheckedCreateWithoutNotifications_sentInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotifications_sentInput
    connect?: UserWhereUniqueInput
  }

  export type PostCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<PostCreateWithoutNotificationsInput, PostUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: PostCreateOrConnectWithoutNotificationsInput
    connect?: PostWhereUniqueInput
  }

  export type CommentCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<CommentCreateWithoutNotificationsInput, CommentUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: CommentCreateOrConnectWithoutNotificationsInput
    connect?: CommentWhereUniqueInput
  }

  export type CommunityCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<CommunityCreateWithoutNotificationsInput, CommunityUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: CommunityCreateOrConnectWithoutNotificationsInput
    connect?: CommunityWhereUniqueInput
  }

  export type EnumNotificationTypeFieldUpdateOperationsInput = {
    set?: $Enums.NotificationType
  }

  export type UserUpdateOneRequiredWithoutNotifications_receivedNestedInput = {
    create?: XOR<UserCreateWithoutNotifications_receivedInput, UserUncheckedCreateWithoutNotifications_receivedInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotifications_receivedInput
    upsert?: UserUpsertWithoutNotifications_receivedInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotifications_receivedInput, UserUpdateWithoutNotifications_receivedInput>, UserUncheckedUpdateWithoutNotifications_receivedInput>
  }

  export type UserUpdateOneWithoutNotifications_sentNestedInput = {
    create?: XOR<UserCreateWithoutNotifications_sentInput, UserUncheckedCreateWithoutNotifications_sentInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotifications_sentInput
    upsert?: UserUpsertWithoutNotifications_sentInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotifications_sentInput, UserUpdateWithoutNotifications_sentInput>, UserUncheckedUpdateWithoutNotifications_sentInput>
  }

  export type PostUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<PostCreateWithoutNotificationsInput, PostUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: PostCreateOrConnectWithoutNotificationsInput
    upsert?: PostUpsertWithoutNotificationsInput
    disconnect?: PostWhereInput | boolean
    delete?: PostWhereInput | boolean
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutNotificationsInput, PostUpdateWithoutNotificationsInput>, PostUncheckedUpdateWithoutNotificationsInput>
  }

  export type CommentUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<CommentCreateWithoutNotificationsInput, CommentUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: CommentCreateOrConnectWithoutNotificationsInput
    upsert?: CommentUpsertWithoutNotificationsInput
    disconnect?: CommentWhereInput | boolean
    delete?: CommentWhereInput | boolean
    connect?: CommentWhereUniqueInput
    update?: XOR<XOR<CommentUpdateToOneWithWhereWithoutNotificationsInput, CommentUpdateWithoutNotificationsInput>, CommentUncheckedUpdateWithoutNotificationsInput>
  }

  export type CommunityUpdateOneWithoutNotificationsNestedInput = {
    create?: XOR<CommunityCreateWithoutNotificationsInput, CommunityUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: CommunityCreateOrConnectWithoutNotificationsInput
    upsert?: CommunityUpsertWithoutNotificationsInput
    disconnect?: CommunityWhereInput | boolean
    delete?: CommunityWhereInput | boolean
    connect?: CommunityWhereUniqueInput
    update?: XOR<XOR<CommunityUpdateToOneWithWhereWithoutNotificationsInput, CommunityUpdateWithoutNotificationsInput>, CommunityUncheckedUpdateWithoutNotificationsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumCommunityTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CommunityType | EnumCommunityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommunityType[] | ListEnumCommunityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CommunityType[] | ListEnumCommunityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCommunityTypeFilter<$PrismaModel> | $Enums.CommunityType
  }

  export type NestedEnumCommunityTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CommunityType | EnumCommunityTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CommunityType[] | ListEnumCommunityTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CommunityType[] | ListEnumCommunityTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCommunityTypeWithAggregatesFilter<$PrismaModel> | $Enums.CommunityType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCommunityTypeFilter<$PrismaModel>
    _max?: NestedEnumCommunityTypeFilter<$PrismaModel>
  }

  export type NestedEnumPostContentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.PostContentType | EnumPostContentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PostContentType[] | ListEnumPostContentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PostContentType[] | ListEnumPostContentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPostContentTypeFilter<$PrismaModel> | $Enums.PostContentType
  }

  export type NestedEnumPostContentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PostContentType | EnumPostContentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.PostContentType[] | ListEnumPostContentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.PostContentType[] | ListEnumPostContentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumPostContentTypeWithAggregatesFilter<$PrismaModel> | $Enums.PostContentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPostContentTypeFilter<$PrismaModel>
    _max?: NestedEnumPostContentTypeFilter<$PrismaModel>
  }

  export type NestedEnumVoteTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VoteType | EnumVoteTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VoteType[] | ListEnumVoteTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VoteType[] | ListEnumVoteTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVoteTypeFilter<$PrismaModel> | $Enums.VoteType
  }

  export type NestedEnumVoteTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VoteType | EnumVoteTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VoteType[] | ListEnumVoteTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VoteType[] | ListEnumVoteTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVoteTypeWithAggregatesFilter<$PrismaModel> | $Enums.VoteType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVoteTypeFilter<$PrismaModel>
    _max?: NestedEnumVoteTypeFilter<$PrismaModel>
  }

  export type NestedEnumMembershipRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.MembershipRole | EnumMembershipRoleFieldRefInput<$PrismaModel>
    in?: $Enums.MembershipRole[] | ListEnumMembershipRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.MembershipRole[] | ListEnumMembershipRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumMembershipRoleFilter<$PrismaModel> | $Enums.MembershipRole
  }

  export type NestedEnumMembershipRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MembershipRole | EnumMembershipRoleFieldRefInput<$PrismaModel>
    in?: $Enums.MembershipRole[] | ListEnumMembershipRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.MembershipRole[] | ListEnumMembershipRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumMembershipRoleWithAggregatesFilter<$PrismaModel> | $Enums.MembershipRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMembershipRoleFilter<$PrismaModel>
    _max?: NestedEnumMembershipRoleFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumEnrollmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.EnrollmentStatus | EnumEnrollmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEnrollmentStatusFilter<$PrismaModel> | $Enums.EnrollmentStatus
  }

  export type NestedEnumEnrollmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.EnrollmentStatus | EnumEnrollmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.EnrollmentStatus[] | ListEnumEnrollmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumEnrollmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.EnrollmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumEnrollmentStatusFilter<$PrismaModel>
    _max?: NestedEnumEnrollmentStatusFilter<$PrismaModel>
  }

  export type NestedEnumNotificationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeFilter<$PrismaModel> | $Enums.NotificationType
  }

  export type NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.NotificationType | EnumNotificationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.NotificationType[] | ListEnumNotificationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumNotificationTypeWithAggregatesFilter<$PrismaModel> | $Enums.NotificationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumNotificationTypeFilter<$PrismaModel>
    _max?: NestedEnumNotificationTypeFilter<$PrismaModel>
  }

  export type CampusCreateWithoutUsersInput = {
    campus_id?: string
    campus_name: string
    location_details?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    communities?: CommunityCreateNestedManyWithoutRelated_campusInput
  }

  export type CampusUncheckedCreateWithoutUsersInput = {
    campus_id?: string
    campus_name: string
    location_details?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_campusInput
  }

  export type CampusCreateOrConnectWithoutUsersInput = {
    where: CampusWhereUniqueInput
    create: XOR<CampusCreateWithoutUsersInput, CampusUncheckedCreateWithoutUsersInput>
  }

  export type FacultyCreateWithoutUsersInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    courses?: CourseCreateNestedManyWithoutFacultyInput
    units?: UnitCreateNestedManyWithoutFacultyInput
    communities?: CommunityCreateNestedManyWithoutRelated_facultyInput
  }

  export type FacultyUncheckedCreateWithoutUsersInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    courses?: CourseUncheckedCreateNestedManyWithoutFacultyInput
    units?: UnitUncheckedCreateNestedManyWithoutFacultyInput
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_facultyInput
  }

  export type FacultyCreateOrConnectWithoutUsersInput = {
    where: FacultyWhereUniqueInput
    create: XOR<FacultyCreateWithoutUsersInput, FacultyUncheckedCreateWithoutUsersInput>
  }

  export type CourseCreateWithoutUsersInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty: FacultyCreateNestedOneWithoutCoursesInput
    communities?: CommunityCreateNestedManyWithoutRelated_courseInput
  }

  export type CourseUncheckedCreateWithoutUsersInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id: string
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_courseInput
  }

  export type CourseCreateOrConnectWithoutUsersInput = {
    where: CourseWhereUniqueInput
    create: XOR<CourseCreateWithoutUsersInput, CourseUncheckedCreateWithoutUsersInput>
  }

  export type CommunityCreateWithoutCreatorInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    related_campus?: CampusCreateNestedOneWithoutCommunitiesInput
    related_faculty?: FacultyCreateNestedOneWithoutCommunitiesInput
    related_course?: CourseCreateNestedOneWithoutCommunitiesInput
    related_unit?: UnitCreateNestedOneWithoutCommunitiesInput
    posts?: PostCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorCreateNestedManyWithoutCommunityInput
    notifications?: NotificationCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUncheckedCreateWithoutCreatorInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorUncheckedCreateNestedManyWithoutCommunityInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityCreateOrConnectWithoutCreatorInput = {
    where: CommunityWhereUniqueInput
    create: XOR<CommunityCreateWithoutCreatorInput, CommunityUncheckedCreateWithoutCreatorInput>
  }

  export type CommunityCreateManyCreatorInputEnvelope = {
    data: CommunityCreateManyCreatorInput | CommunityCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type PostCreateWithoutAuthorInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    community: CommunityCreateNestedOneWithoutPostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    votes?: VoteCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentCreateNestedManyWithoutPostInput
    notifications?: NotificationCreateNestedManyWithoutRelated_postInput
  }

  export type PostUncheckedCreateWithoutAuthorInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    community_id: string
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    votes?: VoteUncheckedCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutPostInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_postInput
  }

  export type PostCreateOrConnectWithoutAuthorInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type PostCreateManyAuthorInputEnvelope = {
    data: PostCreateManyAuthorInput | PostCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type CommentCreateWithoutAuthorInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post: PostCreateNestedOneWithoutCommentsInput
    parent_comment?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParent_commentInput
    votes?: VoteCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentCreateNestedManyWithoutCommentInput
    notifications?: NotificationCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentUncheckedCreateWithoutAuthorInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    parent_comment_id?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParent_commentInput
    votes?: VoteUncheckedCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutCommentInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentCreateOrConnectWithoutAuthorInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput>
  }

  export type CommentCreateManyAuthorInputEnvelope = {
    data: CommentCreateManyAuthorInput | CommentCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type VoteCreateWithoutUserInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    post?: PostCreateNestedOneWithoutVotesInput
    comment?: CommentCreateNestedOneWithoutVotesInput
  }

  export type VoteUncheckedCreateWithoutUserInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    post_id?: string | null
    comment_id?: string | null
  }

  export type VoteCreateOrConnectWithoutUserInput = {
    where: VoteWhereUniqueInput
    create: XOR<VoteCreateWithoutUserInput, VoteUncheckedCreateWithoutUserInput>
  }

  export type VoteCreateManyUserInputEnvelope = {
    data: VoteCreateManyUserInput | VoteCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CommunityMembershipCreateWithoutUserInput = {
    membership_id?: string
    role?: $Enums.MembershipRole
    joined_at?: Date | string
    community: CommunityCreateNestedOneWithoutMembersInput
  }

  export type CommunityMembershipUncheckedCreateWithoutUserInput = {
    membership_id?: string
    role?: $Enums.MembershipRole
    joined_at?: Date | string
    community_id: string
  }

  export type CommunityMembershipCreateOrConnectWithoutUserInput = {
    where: CommunityMembershipWhereUniqueInput
    create: XOR<CommunityMembershipCreateWithoutUserInput, CommunityMembershipUncheckedCreateWithoutUserInput>
  }

  export type CommunityMembershipCreateManyUserInputEnvelope = {
    data: CommunityMembershipCreateManyUserInput | CommunityMembershipCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ModeratorCreateWithoutUserInput = {
    moderator_id?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: Date | string
    community: CommunityCreateNestedOneWithoutModeratorsInput
  }

  export type ModeratorUncheckedCreateWithoutUserInput = {
    moderator_id?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: Date | string
    community_id: string
  }

  export type ModeratorCreateOrConnectWithoutUserInput = {
    where: ModeratorWhereUniqueInput
    create: XOR<ModeratorCreateWithoutUserInput, ModeratorUncheckedCreateWithoutUserInput>
  }

  export type ModeratorCreateManyUserInputEnvelope = {
    data: ModeratorCreateManyUserInput | ModeratorCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserUnitEnrollmentCreateWithoutUserInput = {
    enrollment_id?: string
    enrollment_year: number
    enrollment_semester: string
    status?: $Enums.EnrollmentStatus
    unit: UnitCreateNestedOneWithoutUser_enrollmentsInput
  }

  export type UserUnitEnrollmentUncheckedCreateWithoutUserInput = {
    enrollment_id?: string
    enrollment_year: number
    enrollment_semester: string
    status?: $Enums.EnrollmentStatus
    unit_id: string
  }

  export type UserUnitEnrollmentCreateOrConnectWithoutUserInput = {
    where: UserUnitEnrollmentWhereUniqueInput
    create: XOR<UserUnitEnrollmentCreateWithoutUserInput, UserUnitEnrollmentUncheckedCreateWithoutUserInput>
  }

  export type UserUnitEnrollmentCreateManyUserInputEnvelope = {
    data: UserUnitEnrollmentCreateManyUserInput | UserUnitEnrollmentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SavedContentCreateWithoutUserInput = {
    saved_id?: string
    saved_at?: Date | string
    post?: PostCreateNestedOneWithoutSaved_by_usersInput
    comment?: CommentCreateNestedOneWithoutSaved_by_usersInput
  }

  export type SavedContentUncheckedCreateWithoutUserInput = {
    saved_id?: string
    saved_at?: Date | string
    post_id?: string | null
    comment_id?: string | null
  }

  export type SavedContentCreateOrConnectWithoutUserInput = {
    where: SavedContentWhereUniqueInput
    create: XOR<SavedContentCreateWithoutUserInput, SavedContentUncheckedCreateWithoutUserInput>
  }

  export type SavedContentCreateManyUserInputEnvelope = {
    data: SavedContentCreateManyUserInput | SavedContentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutRecipientInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    sender?: UserCreateNestedOneWithoutNotifications_sentInput
    related_post?: PostCreateNestedOneWithoutNotificationsInput
    related_comment?: CommentCreateNestedOneWithoutNotificationsInput
    related_community?: CommunityCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutRecipientInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    sender_user_id?: string | null
    related_post_id?: string | null
    related_comment_id?: string | null
    related_community_id?: string | null
  }

  export type NotificationCreateOrConnectWithoutRecipientInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput>
  }

  export type NotificationCreateManyRecipientInputEnvelope = {
    data: NotificationCreateManyRecipientInput | NotificationCreateManyRecipientInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutSenderInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient: UserCreateNestedOneWithoutNotifications_receivedInput
    related_post?: PostCreateNestedOneWithoutNotificationsInput
    related_comment?: CommentCreateNestedOneWithoutNotificationsInput
    related_community?: CommunityCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutSenderInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    related_post_id?: string | null
    related_comment_id?: string | null
    related_community_id?: string | null
  }

  export type NotificationCreateOrConnectWithoutSenderInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput>
  }

  export type NotificationCreateManySenderInputEnvelope = {
    data: NotificationCreateManySenderInput | NotificationCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type CampusUpsertWithoutUsersInput = {
    update: XOR<CampusUpdateWithoutUsersInput, CampusUncheckedUpdateWithoutUsersInput>
    create: XOR<CampusCreateWithoutUsersInput, CampusUncheckedCreateWithoutUsersInput>
    where?: CampusWhereInput
  }

  export type CampusUpdateToOneWithWhereWithoutUsersInput = {
    where?: CampusWhereInput
    data: XOR<CampusUpdateWithoutUsersInput, CampusUncheckedUpdateWithoutUsersInput>
  }

  export type CampusUpdateWithoutUsersInput = {
    campus_id?: StringFieldUpdateOperationsInput | string
    campus_name?: StringFieldUpdateOperationsInput | string
    location_details?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    communities?: CommunityUpdateManyWithoutRelated_campusNestedInput
  }

  export type CampusUncheckedUpdateWithoutUsersInput = {
    campus_id?: StringFieldUpdateOperationsInput | string
    campus_name?: StringFieldUpdateOperationsInput | string
    location_details?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    communities?: CommunityUncheckedUpdateManyWithoutRelated_campusNestedInput
  }

  export type FacultyUpsertWithoutUsersInput = {
    update: XOR<FacultyUpdateWithoutUsersInput, FacultyUncheckedUpdateWithoutUsersInput>
    create: XOR<FacultyCreateWithoutUsersInput, FacultyUncheckedCreateWithoutUsersInput>
    where?: FacultyWhereInput
  }

  export type FacultyUpdateToOneWithWhereWithoutUsersInput = {
    where?: FacultyWhereInput
    data: XOR<FacultyUpdateWithoutUsersInput, FacultyUncheckedUpdateWithoutUsersInput>
  }

  export type FacultyUpdateWithoutUsersInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    courses?: CourseUpdateManyWithoutFacultyNestedInput
    units?: UnitUpdateManyWithoutFacultyNestedInput
    communities?: CommunityUpdateManyWithoutRelated_facultyNestedInput
  }

  export type FacultyUncheckedUpdateWithoutUsersInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    courses?: CourseUncheckedUpdateManyWithoutFacultyNestedInput
    units?: UnitUncheckedUpdateManyWithoutFacultyNestedInput
    communities?: CommunityUncheckedUpdateManyWithoutRelated_facultyNestedInput
  }

  export type CourseUpsertWithoutUsersInput = {
    update: XOR<CourseUpdateWithoutUsersInput, CourseUncheckedUpdateWithoutUsersInput>
    create: XOR<CourseCreateWithoutUsersInput, CourseUncheckedCreateWithoutUsersInput>
    where?: CourseWhereInput
  }

  export type CourseUpdateToOneWithWhereWithoutUsersInput = {
    where?: CourseWhereInput
    data: XOR<CourseUpdateWithoutUsersInput, CourseUncheckedUpdateWithoutUsersInput>
  }

  export type CourseUpdateWithoutUsersInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty?: FacultyUpdateOneRequiredWithoutCoursesNestedInput
    communities?: CommunityUpdateManyWithoutRelated_courseNestedInput
  }

  export type CourseUncheckedUpdateWithoutUsersInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: StringFieldUpdateOperationsInput | string
    communities?: CommunityUncheckedUpdateManyWithoutRelated_courseNestedInput
  }

  export type CommunityUpsertWithWhereUniqueWithoutCreatorInput = {
    where: CommunityWhereUniqueInput
    update: XOR<CommunityUpdateWithoutCreatorInput, CommunityUncheckedUpdateWithoutCreatorInput>
    create: XOR<CommunityCreateWithoutCreatorInput, CommunityUncheckedCreateWithoutCreatorInput>
  }

  export type CommunityUpdateWithWhereUniqueWithoutCreatorInput = {
    where: CommunityWhereUniqueInput
    data: XOR<CommunityUpdateWithoutCreatorInput, CommunityUncheckedUpdateWithoutCreatorInput>
  }

  export type CommunityUpdateManyWithWhereWithoutCreatorInput = {
    where: CommunityScalarWhereInput
    data: XOR<CommunityUpdateManyMutationInput, CommunityUncheckedUpdateManyWithoutCreatorInput>
  }

  export type CommunityScalarWhereInput = {
    AND?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
    OR?: CommunityScalarWhereInput[]
    NOT?: CommunityScalarWhereInput | CommunityScalarWhereInput[]
    community_id?: StringFilter<"Community"> | string
    name?: StringFilter<"Community"> | string
    display_name?: StringFilter<"Community"> | string
    description?: StringNullableFilter<"Community"> | string | null
    community_type?: EnumCommunityTypeFilter<"Community"> | $Enums.CommunityType
    profile_image_url?: StringNullableFilter<"Community"> | string | null
    banner_image_url?: StringNullableFilter<"Community"> | string | null
    is_private?: BoolFilter<"Community"> | boolean
    rules?: StringNullableFilter<"Community"> | string | null
    created_at?: DateTimeFilter<"Community"> | Date | string
    updated_at?: DateTimeFilter<"Community"> | Date | string
    creator_id?: StringFilter<"Community"> | string
    related_campus_id?: StringNullableFilter<"Community"> | string | null
    related_faculty_id?: StringNullableFilter<"Community"> | string | null
    related_course_id?: StringNullableFilter<"Community"> | string | null
    related_unit_id?: StringNullableFilter<"Community"> | string | null
  }

  export type PostUpsertWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type PostUpdateWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
  }

  export type PostUpdateManyWithWhereWithoutAuthorInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutAuthorInput>
  }

  export type PostScalarWhereInput = {
    AND?: PostScalarWhereInput | PostScalarWhereInput[]
    OR?: PostScalarWhereInput[]
    NOT?: PostScalarWhereInput | PostScalarWhereInput[]
    post_id?: StringFilter<"Post"> | string
    title?: StringFilter<"Post"> | string
    content_type?: EnumPostContentTypeFilter<"Post"> | $Enums.PostContentType
    text_content?: StringNullableFilter<"Post"> | string | null
    media_url?: StringNullableFilter<"Post"> | string | null
    upvotes?: IntFilter<"Post"> | number
    downvotes?: IntFilter<"Post"> | number
    score?: IntFilter<"Post"> | number
    flair_text?: StringNullableFilter<"Post"> | string | null
    is_stickied?: BoolFilter<"Post"> | boolean
    is_locked?: BoolFilter<"Post"> | boolean
    is_deleted?: BoolFilter<"Post"> | boolean
    created_at?: DateTimeFilter<"Post"> | Date | string
    updated_at?: DateTimeFilter<"Post"> | Date | string
    user_id?: StringFilter<"Post"> | string
    community_id?: StringFilter<"Post"> | string
  }

  export type CommentUpsertWithWhereUniqueWithoutAuthorInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutAuthorInput, CommentUncheckedUpdateWithoutAuthorInput>
    create: XOR<CommentCreateWithoutAuthorInput, CommentUncheckedCreateWithoutAuthorInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutAuthorInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutAuthorInput, CommentUncheckedUpdateWithoutAuthorInput>
  }

  export type CommentUpdateManyWithWhereWithoutAuthorInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutAuthorInput>
  }

  export type CommentScalarWhereInput = {
    AND?: CommentScalarWhereInput | CommentScalarWhereInput[]
    OR?: CommentScalarWhereInput[]
    NOT?: CommentScalarWhereInput | CommentScalarWhereInput[]
    comment_id?: StringFilter<"Comment"> | string
    content?: StringFilter<"Comment"> | string
    upvotes?: IntFilter<"Comment"> | number
    downvotes?: IntFilter<"Comment"> | number
    score?: IntFilter<"Comment"> | number
    is_deleted?: BoolFilter<"Comment"> | boolean
    created_at?: DateTimeFilter<"Comment"> | Date | string
    updated_at?: DateTimeFilter<"Comment"> | Date | string
    post_id?: StringFilter<"Comment"> | string
    user_id?: StringFilter<"Comment"> | string
    parent_comment_id?: StringNullableFilter<"Comment"> | string | null
  }

  export type VoteUpsertWithWhereUniqueWithoutUserInput = {
    where: VoteWhereUniqueInput
    update: XOR<VoteUpdateWithoutUserInput, VoteUncheckedUpdateWithoutUserInput>
    create: XOR<VoteCreateWithoutUserInput, VoteUncheckedCreateWithoutUserInput>
  }

  export type VoteUpdateWithWhereUniqueWithoutUserInput = {
    where: VoteWhereUniqueInput
    data: XOR<VoteUpdateWithoutUserInput, VoteUncheckedUpdateWithoutUserInput>
  }

  export type VoteUpdateManyWithWhereWithoutUserInput = {
    where: VoteScalarWhereInput
    data: XOR<VoteUpdateManyMutationInput, VoteUncheckedUpdateManyWithoutUserInput>
  }

  export type VoteScalarWhereInput = {
    AND?: VoteScalarWhereInput | VoteScalarWhereInput[]
    OR?: VoteScalarWhereInput[]
    NOT?: VoteScalarWhereInput | VoteScalarWhereInput[]
    vote_id?: StringFilter<"Vote"> | string
    vote_type?: EnumVoteTypeFilter<"Vote"> | $Enums.VoteType
    created_at?: DateTimeFilter<"Vote"> | Date | string
    user_id?: StringFilter<"Vote"> | string
    post_id?: StringNullableFilter<"Vote"> | string | null
    comment_id?: StringNullableFilter<"Vote"> | string | null
  }

  export type CommunityMembershipUpsertWithWhereUniqueWithoutUserInput = {
    where: CommunityMembershipWhereUniqueInput
    update: XOR<CommunityMembershipUpdateWithoutUserInput, CommunityMembershipUncheckedUpdateWithoutUserInput>
    create: XOR<CommunityMembershipCreateWithoutUserInput, CommunityMembershipUncheckedCreateWithoutUserInput>
  }

  export type CommunityMembershipUpdateWithWhereUniqueWithoutUserInput = {
    where: CommunityMembershipWhereUniqueInput
    data: XOR<CommunityMembershipUpdateWithoutUserInput, CommunityMembershipUncheckedUpdateWithoutUserInput>
  }

  export type CommunityMembershipUpdateManyWithWhereWithoutUserInput = {
    where: CommunityMembershipScalarWhereInput
    data: XOR<CommunityMembershipUpdateManyMutationInput, CommunityMembershipUncheckedUpdateManyWithoutUserInput>
  }

  export type CommunityMembershipScalarWhereInput = {
    AND?: CommunityMembershipScalarWhereInput | CommunityMembershipScalarWhereInput[]
    OR?: CommunityMembershipScalarWhereInput[]
    NOT?: CommunityMembershipScalarWhereInput | CommunityMembershipScalarWhereInput[]
    membership_id?: StringFilter<"CommunityMembership"> | string
    role?: EnumMembershipRoleFilter<"CommunityMembership"> | $Enums.MembershipRole
    joined_at?: DateTimeFilter<"CommunityMembership"> | Date | string
    user_id?: StringFilter<"CommunityMembership"> | string
    community_id?: StringFilter<"CommunityMembership"> | string
  }

  export type ModeratorUpsertWithWhereUniqueWithoutUserInput = {
    where: ModeratorWhereUniqueInput
    update: XOR<ModeratorUpdateWithoutUserInput, ModeratorUncheckedUpdateWithoutUserInput>
    create: XOR<ModeratorCreateWithoutUserInput, ModeratorUncheckedCreateWithoutUserInput>
  }

  export type ModeratorUpdateWithWhereUniqueWithoutUserInput = {
    where: ModeratorWhereUniqueInput
    data: XOR<ModeratorUpdateWithoutUserInput, ModeratorUncheckedUpdateWithoutUserInput>
  }

  export type ModeratorUpdateManyWithWhereWithoutUserInput = {
    where: ModeratorScalarWhereInput
    data: XOR<ModeratorUpdateManyMutationInput, ModeratorUncheckedUpdateManyWithoutUserInput>
  }

  export type ModeratorScalarWhereInput = {
    AND?: ModeratorScalarWhereInput | ModeratorScalarWhereInput[]
    OR?: ModeratorScalarWhereInput[]
    NOT?: ModeratorScalarWhereInput | ModeratorScalarWhereInput[]
    moderator_id?: StringFilter<"Moderator"> | string
    permissions?: JsonNullableFilter<"Moderator">
    appointed_at?: DateTimeFilter<"Moderator"> | Date | string
    user_id?: StringFilter<"Moderator"> | string
    community_id?: StringFilter<"Moderator"> | string
  }

  export type UserUnitEnrollmentUpsertWithWhereUniqueWithoutUserInput = {
    where: UserUnitEnrollmentWhereUniqueInput
    update: XOR<UserUnitEnrollmentUpdateWithoutUserInput, UserUnitEnrollmentUncheckedUpdateWithoutUserInput>
    create: XOR<UserUnitEnrollmentCreateWithoutUserInput, UserUnitEnrollmentUncheckedCreateWithoutUserInput>
  }

  export type UserUnitEnrollmentUpdateWithWhereUniqueWithoutUserInput = {
    where: UserUnitEnrollmentWhereUniqueInput
    data: XOR<UserUnitEnrollmentUpdateWithoutUserInput, UserUnitEnrollmentUncheckedUpdateWithoutUserInput>
  }

  export type UserUnitEnrollmentUpdateManyWithWhereWithoutUserInput = {
    where: UserUnitEnrollmentScalarWhereInput
    data: XOR<UserUnitEnrollmentUpdateManyMutationInput, UserUnitEnrollmentUncheckedUpdateManyWithoutUserInput>
  }

  export type UserUnitEnrollmentScalarWhereInput = {
    AND?: UserUnitEnrollmentScalarWhereInput | UserUnitEnrollmentScalarWhereInput[]
    OR?: UserUnitEnrollmentScalarWhereInput[]
    NOT?: UserUnitEnrollmentScalarWhereInput | UserUnitEnrollmentScalarWhereInput[]
    enrollment_id?: StringFilter<"UserUnitEnrollment"> | string
    enrollment_year?: IntFilter<"UserUnitEnrollment"> | number
    enrollment_semester?: StringFilter<"UserUnitEnrollment"> | string
    status?: EnumEnrollmentStatusFilter<"UserUnitEnrollment"> | $Enums.EnrollmentStatus
    user_id?: StringFilter<"UserUnitEnrollment"> | string
    unit_id?: StringFilter<"UserUnitEnrollment"> | string
  }

  export type SavedContentUpsertWithWhereUniqueWithoutUserInput = {
    where: SavedContentWhereUniqueInput
    update: XOR<SavedContentUpdateWithoutUserInput, SavedContentUncheckedUpdateWithoutUserInput>
    create: XOR<SavedContentCreateWithoutUserInput, SavedContentUncheckedCreateWithoutUserInput>
  }

  export type SavedContentUpdateWithWhereUniqueWithoutUserInput = {
    where: SavedContentWhereUniqueInput
    data: XOR<SavedContentUpdateWithoutUserInput, SavedContentUncheckedUpdateWithoutUserInput>
  }

  export type SavedContentUpdateManyWithWhereWithoutUserInput = {
    where: SavedContentScalarWhereInput
    data: XOR<SavedContentUpdateManyMutationInput, SavedContentUncheckedUpdateManyWithoutUserInput>
  }

  export type SavedContentScalarWhereInput = {
    AND?: SavedContentScalarWhereInput | SavedContentScalarWhereInput[]
    OR?: SavedContentScalarWhereInput[]
    NOT?: SavedContentScalarWhereInput | SavedContentScalarWhereInput[]
    saved_id?: StringFilter<"SavedContent"> | string
    saved_at?: DateTimeFilter<"SavedContent"> | Date | string
    user_id?: StringFilter<"SavedContent"> | string
    post_id?: StringNullableFilter<"SavedContent"> | string | null
    comment_id?: StringNullableFilter<"SavedContent"> | string | null
  }

  export type NotificationUpsertWithWhereUniqueWithoutRecipientInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutRecipientInput, NotificationUncheckedUpdateWithoutRecipientInput>
    create: XOR<NotificationCreateWithoutRecipientInput, NotificationUncheckedCreateWithoutRecipientInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutRecipientInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutRecipientInput, NotificationUncheckedUpdateWithoutRecipientInput>
  }

  export type NotificationUpdateManyWithWhereWithoutRecipientInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutRecipientInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    notification_id?: StringFilter<"Notification"> | string
    type?: EnumNotificationTypeFilter<"Notification"> | $Enums.NotificationType
    content_preview?: StringNullableFilter<"Notification"> | string | null
    is_read?: BoolFilter<"Notification"> | boolean
    created_at?: DateTimeFilter<"Notification"> | Date | string
    recipient_user_id?: StringFilter<"Notification"> | string
    sender_user_id?: StringNullableFilter<"Notification"> | string | null
    related_post_id?: StringNullableFilter<"Notification"> | string | null
    related_comment_id?: StringNullableFilter<"Notification"> | string | null
    related_community_id?: StringNullableFilter<"Notification"> | string | null
  }

  export type NotificationUpsertWithWhereUniqueWithoutSenderInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutSenderInput, NotificationUncheckedUpdateWithoutSenderInput>
    create: XOR<NotificationCreateWithoutSenderInput, NotificationUncheckedCreateWithoutSenderInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutSenderInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutSenderInput, NotificationUncheckedUpdateWithoutSenderInput>
  }

  export type NotificationUpdateManyWithWhereWithoutSenderInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutSenderInput>
  }

  export type UserCreateWithoutCampusInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutCampusInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutCampusInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCampusInput, UserUncheckedCreateWithoutCampusInput>
  }

  export type UserCreateManyCampusInputEnvelope = {
    data: UserCreateManyCampusInput | UserCreateManyCampusInput[]
    skipDuplicates?: boolean
  }

  export type CommunityCreateWithoutRelated_campusInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator: UserCreateNestedOneWithoutCreated_communitiesInput
    related_faculty?: FacultyCreateNestedOneWithoutCommunitiesInput
    related_course?: CourseCreateNestedOneWithoutCommunitiesInput
    related_unit?: UnitCreateNestedOneWithoutCommunitiesInput
    posts?: PostCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorCreateNestedManyWithoutCommunityInput
    notifications?: NotificationCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUncheckedCreateWithoutRelated_campusInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorUncheckedCreateNestedManyWithoutCommunityInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityCreateOrConnectWithoutRelated_campusInput = {
    where: CommunityWhereUniqueInput
    create: XOR<CommunityCreateWithoutRelated_campusInput, CommunityUncheckedCreateWithoutRelated_campusInput>
  }

  export type CommunityCreateManyRelated_campusInputEnvelope = {
    data: CommunityCreateManyRelated_campusInput | CommunityCreateManyRelated_campusInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutCampusInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCampusInput, UserUncheckedUpdateWithoutCampusInput>
    create: XOR<UserCreateWithoutCampusInput, UserUncheckedCreateWithoutCampusInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCampusInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCampusInput, UserUncheckedUpdateWithoutCampusInput>
  }

  export type UserUpdateManyWithWhereWithoutCampusInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCampusInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    user_id?: StringFilter<"User"> | string
    monash_email?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password_hash?: StringFilter<"User"> | string
    first_name?: StringNullableFilter<"User"> | string | null
    last_name?: StringNullableFilter<"User"> | string | null
    profile_picture_url?: StringNullableFilter<"User"> | string | null
    bio?: StringNullableFilter<"User"> | string | null
    karma_points?: IntFilter<"User"> | number
    year_of_study?: IntNullableFilter<"User"> | number | null
    is_verified_student?: BoolFilter<"User"> | boolean
    created_at?: DateTimeFilter<"User"> | Date | string
    updated_at?: DateTimeFilter<"User"> | Date | string
    campus_id?: StringNullableFilter<"User"> | string | null
    faculty_id?: StringNullableFilter<"User"> | string | null
    course_id?: StringNullableFilter<"User"> | string | null
  }

  export type CommunityUpsertWithWhereUniqueWithoutRelated_campusInput = {
    where: CommunityWhereUniqueInput
    update: XOR<CommunityUpdateWithoutRelated_campusInput, CommunityUncheckedUpdateWithoutRelated_campusInput>
    create: XOR<CommunityCreateWithoutRelated_campusInput, CommunityUncheckedCreateWithoutRelated_campusInput>
  }

  export type CommunityUpdateWithWhereUniqueWithoutRelated_campusInput = {
    where: CommunityWhereUniqueInput
    data: XOR<CommunityUpdateWithoutRelated_campusInput, CommunityUncheckedUpdateWithoutRelated_campusInput>
  }

  export type CommunityUpdateManyWithWhereWithoutRelated_campusInput = {
    where: CommunityScalarWhereInput
    data: XOR<CommunityUpdateManyMutationInput, CommunityUncheckedUpdateManyWithoutRelated_campusInput>
  }

  export type UserCreateWithoutFacultyInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutFacultyInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutFacultyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFacultyInput, UserUncheckedCreateWithoutFacultyInput>
  }

  export type UserCreateManyFacultyInputEnvelope = {
    data: UserCreateManyFacultyInput | UserCreateManyFacultyInput[]
    skipDuplicates?: boolean
  }

  export type CourseCreateWithoutFacultyInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserCreateNestedManyWithoutCourseInput
    communities?: CommunityCreateNestedManyWithoutRelated_courseInput
  }

  export type CourseUncheckedCreateWithoutFacultyInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCourseInput
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_courseInput
  }

  export type CourseCreateOrConnectWithoutFacultyInput = {
    where: CourseWhereUniqueInput
    create: XOR<CourseCreateWithoutFacultyInput, CourseUncheckedCreateWithoutFacultyInput>
  }

  export type CourseCreateManyFacultyInputEnvelope = {
    data: CourseCreateManyFacultyInput | CourseCreateManyFacultyInput[]
    skipDuplicates?: boolean
  }

  export type UnitCreateWithoutFacultyInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    communities?: CommunityCreateNestedManyWithoutRelated_unitInput
    user_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUnitInput
  }

  export type UnitUncheckedCreateWithoutFacultyInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_unitInput
    user_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUnitInput
  }

  export type UnitCreateOrConnectWithoutFacultyInput = {
    where: UnitWhereUniqueInput
    create: XOR<UnitCreateWithoutFacultyInput, UnitUncheckedCreateWithoutFacultyInput>
  }

  export type UnitCreateManyFacultyInputEnvelope = {
    data: UnitCreateManyFacultyInput | UnitCreateManyFacultyInput[]
    skipDuplicates?: boolean
  }

  export type CommunityCreateWithoutRelated_facultyInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator: UserCreateNestedOneWithoutCreated_communitiesInput
    related_campus?: CampusCreateNestedOneWithoutCommunitiesInput
    related_course?: CourseCreateNestedOneWithoutCommunitiesInput
    related_unit?: UnitCreateNestedOneWithoutCommunitiesInput
    posts?: PostCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorCreateNestedManyWithoutCommunityInput
    notifications?: NotificationCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUncheckedCreateWithoutRelated_facultyInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorUncheckedCreateNestedManyWithoutCommunityInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityCreateOrConnectWithoutRelated_facultyInput = {
    where: CommunityWhereUniqueInput
    create: XOR<CommunityCreateWithoutRelated_facultyInput, CommunityUncheckedCreateWithoutRelated_facultyInput>
  }

  export type CommunityCreateManyRelated_facultyInputEnvelope = {
    data: CommunityCreateManyRelated_facultyInput | CommunityCreateManyRelated_facultyInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithWhereUniqueWithoutFacultyInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutFacultyInput, UserUncheckedUpdateWithoutFacultyInput>
    create: XOR<UserCreateWithoutFacultyInput, UserUncheckedCreateWithoutFacultyInput>
  }

  export type UserUpdateWithWhereUniqueWithoutFacultyInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutFacultyInput, UserUncheckedUpdateWithoutFacultyInput>
  }

  export type UserUpdateManyWithWhereWithoutFacultyInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutFacultyInput>
  }

  export type CourseUpsertWithWhereUniqueWithoutFacultyInput = {
    where: CourseWhereUniqueInput
    update: XOR<CourseUpdateWithoutFacultyInput, CourseUncheckedUpdateWithoutFacultyInput>
    create: XOR<CourseCreateWithoutFacultyInput, CourseUncheckedCreateWithoutFacultyInput>
  }

  export type CourseUpdateWithWhereUniqueWithoutFacultyInput = {
    where: CourseWhereUniqueInput
    data: XOR<CourseUpdateWithoutFacultyInput, CourseUncheckedUpdateWithoutFacultyInput>
  }

  export type CourseUpdateManyWithWhereWithoutFacultyInput = {
    where: CourseScalarWhereInput
    data: XOR<CourseUpdateManyMutationInput, CourseUncheckedUpdateManyWithoutFacultyInput>
  }

  export type CourseScalarWhereInput = {
    AND?: CourseScalarWhereInput | CourseScalarWhereInput[]
    OR?: CourseScalarWhereInput[]
    NOT?: CourseScalarWhereInput | CourseScalarWhereInput[]
    course_id?: StringFilter<"Course"> | string
    course_code?: StringFilter<"Course"> | string
    course_name?: StringFilter<"Course"> | string
    course_description?: StringNullableFilter<"Course"> | string | null
    created_at?: DateTimeFilter<"Course"> | Date | string
    updated_at?: DateTimeFilter<"Course"> | Date | string
    faculty_id?: StringFilter<"Course"> | string
  }

  export type UnitUpsertWithWhereUniqueWithoutFacultyInput = {
    where: UnitWhereUniqueInput
    update: XOR<UnitUpdateWithoutFacultyInput, UnitUncheckedUpdateWithoutFacultyInput>
    create: XOR<UnitCreateWithoutFacultyInput, UnitUncheckedCreateWithoutFacultyInput>
  }

  export type UnitUpdateWithWhereUniqueWithoutFacultyInput = {
    where: UnitWhereUniqueInput
    data: XOR<UnitUpdateWithoutFacultyInput, UnitUncheckedUpdateWithoutFacultyInput>
  }

  export type UnitUpdateManyWithWhereWithoutFacultyInput = {
    where: UnitScalarWhereInput
    data: XOR<UnitUpdateManyMutationInput, UnitUncheckedUpdateManyWithoutFacultyInput>
  }

  export type UnitScalarWhereInput = {
    AND?: UnitScalarWhereInput | UnitScalarWhereInput[]
    OR?: UnitScalarWhereInput[]
    NOT?: UnitScalarWhereInput | UnitScalarWhereInput[]
    unit_id?: StringFilter<"Unit"> | string
    unit_code?: StringFilter<"Unit"> | string
    unit_name?: StringFilter<"Unit"> | string
    unit_description?: StringNullableFilter<"Unit"> | string | null
    semester_offered?: StringNullableFilter<"Unit"> | string | null
    year_level?: IntNullableFilter<"Unit"> | number | null
    created_at?: DateTimeFilter<"Unit"> | Date | string
    updated_at?: DateTimeFilter<"Unit"> | Date | string
    faculty_id?: StringNullableFilter<"Unit"> | string | null
  }

  export type CommunityUpsertWithWhereUniqueWithoutRelated_facultyInput = {
    where: CommunityWhereUniqueInput
    update: XOR<CommunityUpdateWithoutRelated_facultyInput, CommunityUncheckedUpdateWithoutRelated_facultyInput>
    create: XOR<CommunityCreateWithoutRelated_facultyInput, CommunityUncheckedCreateWithoutRelated_facultyInput>
  }

  export type CommunityUpdateWithWhereUniqueWithoutRelated_facultyInput = {
    where: CommunityWhereUniqueInput
    data: XOR<CommunityUpdateWithoutRelated_facultyInput, CommunityUncheckedUpdateWithoutRelated_facultyInput>
  }

  export type CommunityUpdateManyWithWhereWithoutRelated_facultyInput = {
    where: CommunityScalarWhereInput
    data: XOR<CommunityUpdateManyMutationInput, CommunityUncheckedUpdateManyWithoutRelated_facultyInput>
  }

  export type FacultyCreateWithoutCoursesInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserCreateNestedManyWithoutFacultyInput
    units?: UnitCreateNestedManyWithoutFacultyInput
    communities?: CommunityCreateNestedManyWithoutRelated_facultyInput
  }

  export type FacultyUncheckedCreateWithoutCoursesInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutFacultyInput
    units?: UnitUncheckedCreateNestedManyWithoutFacultyInput
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_facultyInput
  }

  export type FacultyCreateOrConnectWithoutCoursesInput = {
    where: FacultyWhereUniqueInput
    create: XOR<FacultyCreateWithoutCoursesInput, FacultyUncheckedCreateWithoutCoursesInput>
  }

  export type UserCreateWithoutCourseInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutCourseInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutCourseInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCourseInput, UserUncheckedCreateWithoutCourseInput>
  }

  export type UserCreateManyCourseInputEnvelope = {
    data: UserCreateManyCourseInput | UserCreateManyCourseInput[]
    skipDuplicates?: boolean
  }

  export type CommunityCreateWithoutRelated_courseInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator: UserCreateNestedOneWithoutCreated_communitiesInput
    related_campus?: CampusCreateNestedOneWithoutCommunitiesInput
    related_faculty?: FacultyCreateNestedOneWithoutCommunitiesInput
    related_unit?: UnitCreateNestedOneWithoutCommunitiesInput
    posts?: PostCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorCreateNestedManyWithoutCommunityInput
    notifications?: NotificationCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUncheckedCreateWithoutRelated_courseInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_unit_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorUncheckedCreateNestedManyWithoutCommunityInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityCreateOrConnectWithoutRelated_courseInput = {
    where: CommunityWhereUniqueInput
    create: XOR<CommunityCreateWithoutRelated_courseInput, CommunityUncheckedCreateWithoutRelated_courseInput>
  }

  export type CommunityCreateManyRelated_courseInputEnvelope = {
    data: CommunityCreateManyRelated_courseInput | CommunityCreateManyRelated_courseInput[]
    skipDuplicates?: boolean
  }

  export type FacultyUpsertWithoutCoursesInput = {
    update: XOR<FacultyUpdateWithoutCoursesInput, FacultyUncheckedUpdateWithoutCoursesInput>
    create: XOR<FacultyCreateWithoutCoursesInput, FacultyUncheckedCreateWithoutCoursesInput>
    where?: FacultyWhereInput
  }

  export type FacultyUpdateToOneWithWhereWithoutCoursesInput = {
    where?: FacultyWhereInput
    data: XOR<FacultyUpdateWithoutCoursesInput, FacultyUncheckedUpdateWithoutCoursesInput>
  }

  export type FacultyUpdateWithoutCoursesInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutFacultyNestedInput
    units?: UnitUpdateManyWithoutFacultyNestedInput
    communities?: CommunityUpdateManyWithoutRelated_facultyNestedInput
  }

  export type FacultyUncheckedUpdateWithoutCoursesInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutFacultyNestedInput
    units?: UnitUncheckedUpdateManyWithoutFacultyNestedInput
    communities?: CommunityUncheckedUpdateManyWithoutRelated_facultyNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutCourseInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCourseInput, UserUncheckedUpdateWithoutCourseInput>
    create: XOR<UserCreateWithoutCourseInput, UserUncheckedCreateWithoutCourseInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCourseInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCourseInput, UserUncheckedUpdateWithoutCourseInput>
  }

  export type UserUpdateManyWithWhereWithoutCourseInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCourseInput>
  }

  export type CommunityUpsertWithWhereUniqueWithoutRelated_courseInput = {
    where: CommunityWhereUniqueInput
    update: XOR<CommunityUpdateWithoutRelated_courseInput, CommunityUncheckedUpdateWithoutRelated_courseInput>
    create: XOR<CommunityCreateWithoutRelated_courseInput, CommunityUncheckedCreateWithoutRelated_courseInput>
  }

  export type CommunityUpdateWithWhereUniqueWithoutRelated_courseInput = {
    where: CommunityWhereUniqueInput
    data: XOR<CommunityUpdateWithoutRelated_courseInput, CommunityUncheckedUpdateWithoutRelated_courseInput>
  }

  export type CommunityUpdateManyWithWhereWithoutRelated_courseInput = {
    where: CommunityScalarWhereInput
    data: XOR<CommunityUpdateManyMutationInput, CommunityUncheckedUpdateManyWithoutRelated_courseInput>
  }

  export type FacultyCreateWithoutUnitsInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserCreateNestedManyWithoutFacultyInput
    courses?: CourseCreateNestedManyWithoutFacultyInput
    communities?: CommunityCreateNestedManyWithoutRelated_facultyInput
  }

  export type FacultyUncheckedCreateWithoutUnitsInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutFacultyInput
    courses?: CourseUncheckedCreateNestedManyWithoutFacultyInput
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_facultyInput
  }

  export type FacultyCreateOrConnectWithoutUnitsInput = {
    where: FacultyWhereUniqueInput
    create: XOR<FacultyCreateWithoutUnitsInput, FacultyUncheckedCreateWithoutUnitsInput>
  }

  export type CommunityCreateWithoutRelated_unitInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator: UserCreateNestedOneWithoutCreated_communitiesInput
    related_campus?: CampusCreateNestedOneWithoutCommunitiesInput
    related_faculty?: FacultyCreateNestedOneWithoutCommunitiesInput
    related_course?: CourseCreateNestedOneWithoutCommunitiesInput
    posts?: PostCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorCreateNestedManyWithoutCommunityInput
    notifications?: NotificationCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUncheckedCreateWithoutRelated_unitInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorUncheckedCreateNestedManyWithoutCommunityInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityCreateOrConnectWithoutRelated_unitInput = {
    where: CommunityWhereUniqueInput
    create: XOR<CommunityCreateWithoutRelated_unitInput, CommunityUncheckedCreateWithoutRelated_unitInput>
  }

  export type CommunityCreateManyRelated_unitInputEnvelope = {
    data: CommunityCreateManyRelated_unitInput | CommunityCreateManyRelated_unitInput[]
    skipDuplicates?: boolean
  }

  export type UserUnitEnrollmentCreateWithoutUnitInput = {
    enrollment_id?: string
    enrollment_year: number
    enrollment_semester: string
    status?: $Enums.EnrollmentStatus
    user: UserCreateNestedOneWithoutUnit_enrollmentsInput
  }

  export type UserUnitEnrollmentUncheckedCreateWithoutUnitInput = {
    enrollment_id?: string
    enrollment_year: number
    enrollment_semester: string
    status?: $Enums.EnrollmentStatus
    user_id: string
  }

  export type UserUnitEnrollmentCreateOrConnectWithoutUnitInput = {
    where: UserUnitEnrollmentWhereUniqueInput
    create: XOR<UserUnitEnrollmentCreateWithoutUnitInput, UserUnitEnrollmentUncheckedCreateWithoutUnitInput>
  }

  export type UserUnitEnrollmentCreateManyUnitInputEnvelope = {
    data: UserUnitEnrollmentCreateManyUnitInput | UserUnitEnrollmentCreateManyUnitInput[]
    skipDuplicates?: boolean
  }

  export type FacultyUpsertWithoutUnitsInput = {
    update: XOR<FacultyUpdateWithoutUnitsInput, FacultyUncheckedUpdateWithoutUnitsInput>
    create: XOR<FacultyCreateWithoutUnitsInput, FacultyUncheckedCreateWithoutUnitsInput>
    where?: FacultyWhereInput
  }

  export type FacultyUpdateToOneWithWhereWithoutUnitsInput = {
    where?: FacultyWhereInput
    data: XOR<FacultyUpdateWithoutUnitsInput, FacultyUncheckedUpdateWithoutUnitsInput>
  }

  export type FacultyUpdateWithoutUnitsInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutFacultyNestedInput
    courses?: CourseUpdateManyWithoutFacultyNestedInput
    communities?: CommunityUpdateManyWithoutRelated_facultyNestedInput
  }

  export type FacultyUncheckedUpdateWithoutUnitsInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutFacultyNestedInput
    courses?: CourseUncheckedUpdateManyWithoutFacultyNestedInput
    communities?: CommunityUncheckedUpdateManyWithoutRelated_facultyNestedInput
  }

  export type CommunityUpsertWithWhereUniqueWithoutRelated_unitInput = {
    where: CommunityWhereUniqueInput
    update: XOR<CommunityUpdateWithoutRelated_unitInput, CommunityUncheckedUpdateWithoutRelated_unitInput>
    create: XOR<CommunityCreateWithoutRelated_unitInput, CommunityUncheckedCreateWithoutRelated_unitInput>
  }

  export type CommunityUpdateWithWhereUniqueWithoutRelated_unitInput = {
    where: CommunityWhereUniqueInput
    data: XOR<CommunityUpdateWithoutRelated_unitInput, CommunityUncheckedUpdateWithoutRelated_unitInput>
  }

  export type CommunityUpdateManyWithWhereWithoutRelated_unitInput = {
    where: CommunityScalarWhereInput
    data: XOR<CommunityUpdateManyMutationInput, CommunityUncheckedUpdateManyWithoutRelated_unitInput>
  }

  export type UserUnitEnrollmentUpsertWithWhereUniqueWithoutUnitInput = {
    where: UserUnitEnrollmentWhereUniqueInput
    update: XOR<UserUnitEnrollmentUpdateWithoutUnitInput, UserUnitEnrollmentUncheckedUpdateWithoutUnitInput>
    create: XOR<UserUnitEnrollmentCreateWithoutUnitInput, UserUnitEnrollmentUncheckedCreateWithoutUnitInput>
  }

  export type UserUnitEnrollmentUpdateWithWhereUniqueWithoutUnitInput = {
    where: UserUnitEnrollmentWhereUniqueInput
    data: XOR<UserUnitEnrollmentUpdateWithoutUnitInput, UserUnitEnrollmentUncheckedUpdateWithoutUnitInput>
  }

  export type UserUnitEnrollmentUpdateManyWithWhereWithoutUnitInput = {
    where: UserUnitEnrollmentScalarWhereInput
    data: XOR<UserUnitEnrollmentUpdateManyMutationInput, UserUnitEnrollmentUncheckedUpdateManyWithoutUnitInput>
  }

  export type UserCreateWithoutCreated_communitiesInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutCreated_communitiesInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutCreated_communitiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreated_communitiesInput, UserUncheckedCreateWithoutCreated_communitiesInput>
  }

  export type CampusCreateWithoutCommunitiesInput = {
    campus_id?: string
    campus_name: string
    location_details?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserCreateNestedManyWithoutCampusInput
  }

  export type CampusUncheckedCreateWithoutCommunitiesInput = {
    campus_id?: string
    campus_name: string
    location_details?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutCampusInput
  }

  export type CampusCreateOrConnectWithoutCommunitiesInput = {
    where: CampusWhereUniqueInput
    create: XOR<CampusCreateWithoutCommunitiesInput, CampusUncheckedCreateWithoutCommunitiesInput>
  }

  export type FacultyCreateWithoutCommunitiesInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserCreateNestedManyWithoutFacultyInput
    courses?: CourseCreateNestedManyWithoutFacultyInput
    units?: UnitCreateNestedManyWithoutFacultyInput
  }

  export type FacultyUncheckedCreateWithoutCommunitiesInput = {
    faculty_id?: string
    faculty_name: string
    faculty_abbreviation?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutFacultyInput
    courses?: CourseUncheckedCreateNestedManyWithoutFacultyInput
    units?: UnitUncheckedCreateNestedManyWithoutFacultyInput
  }

  export type FacultyCreateOrConnectWithoutCommunitiesInput = {
    where: FacultyWhereUniqueInput
    create: XOR<FacultyCreateWithoutCommunitiesInput, FacultyUncheckedCreateWithoutCommunitiesInput>
  }

  export type CourseCreateWithoutCommunitiesInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty: FacultyCreateNestedOneWithoutCoursesInput
    users?: UserCreateNestedManyWithoutCourseInput
  }

  export type CourseUncheckedCreateWithoutCommunitiesInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id: string
    users?: UserUncheckedCreateNestedManyWithoutCourseInput
  }

  export type CourseCreateOrConnectWithoutCommunitiesInput = {
    where: CourseWhereUniqueInput
    create: XOR<CourseCreateWithoutCommunitiesInput, CourseUncheckedCreateWithoutCommunitiesInput>
  }

  export type UnitCreateWithoutCommunitiesInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty?: FacultyCreateNestedOneWithoutUnitsInput
    user_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUnitInput
  }

  export type UnitUncheckedCreateWithoutCommunitiesInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id?: string | null
    user_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUnitInput
  }

  export type UnitCreateOrConnectWithoutCommunitiesInput = {
    where: UnitWhereUniqueInput
    create: XOR<UnitCreateWithoutCommunitiesInput, UnitUncheckedCreateWithoutCommunitiesInput>
  }

  export type PostCreateWithoutCommunityInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    author: UserCreateNestedOneWithoutPostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    votes?: VoteCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentCreateNestedManyWithoutPostInput
    notifications?: NotificationCreateNestedManyWithoutRelated_postInput
  }

  export type PostUncheckedCreateWithoutCommunityInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    votes?: VoteUncheckedCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutPostInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_postInput
  }

  export type PostCreateOrConnectWithoutCommunityInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutCommunityInput, PostUncheckedCreateWithoutCommunityInput>
  }

  export type PostCreateManyCommunityInputEnvelope = {
    data: PostCreateManyCommunityInput | PostCreateManyCommunityInput[]
    skipDuplicates?: boolean
  }

  export type CommunityMembershipCreateWithoutCommunityInput = {
    membership_id?: string
    role?: $Enums.MembershipRole
    joined_at?: Date | string
    user: UserCreateNestedOneWithoutMembershipsInput
  }

  export type CommunityMembershipUncheckedCreateWithoutCommunityInput = {
    membership_id?: string
    role?: $Enums.MembershipRole
    joined_at?: Date | string
    user_id: string
  }

  export type CommunityMembershipCreateOrConnectWithoutCommunityInput = {
    where: CommunityMembershipWhereUniqueInput
    create: XOR<CommunityMembershipCreateWithoutCommunityInput, CommunityMembershipUncheckedCreateWithoutCommunityInput>
  }

  export type CommunityMembershipCreateManyCommunityInputEnvelope = {
    data: CommunityMembershipCreateManyCommunityInput | CommunityMembershipCreateManyCommunityInput[]
    skipDuplicates?: boolean
  }

  export type ModeratorCreateWithoutCommunityInput = {
    moderator_id?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: Date | string
    user: UserCreateNestedOneWithoutModerated_communitiesInput
  }

  export type ModeratorUncheckedCreateWithoutCommunityInput = {
    moderator_id?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: Date | string
    user_id: string
  }

  export type ModeratorCreateOrConnectWithoutCommunityInput = {
    where: ModeratorWhereUniqueInput
    create: XOR<ModeratorCreateWithoutCommunityInput, ModeratorUncheckedCreateWithoutCommunityInput>
  }

  export type ModeratorCreateManyCommunityInputEnvelope = {
    data: ModeratorCreateManyCommunityInput | ModeratorCreateManyCommunityInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutRelated_communityInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient: UserCreateNestedOneWithoutNotifications_receivedInput
    sender?: UserCreateNestedOneWithoutNotifications_sentInput
    related_post?: PostCreateNestedOneWithoutNotificationsInput
    related_comment?: CommentCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutRelated_communityInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    sender_user_id?: string | null
    related_post_id?: string | null
    related_comment_id?: string | null
  }

  export type NotificationCreateOrConnectWithoutRelated_communityInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutRelated_communityInput, NotificationUncheckedCreateWithoutRelated_communityInput>
  }

  export type NotificationCreateManyRelated_communityInputEnvelope = {
    data: NotificationCreateManyRelated_communityInput | NotificationCreateManyRelated_communityInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCreated_communitiesInput = {
    update: XOR<UserUpdateWithoutCreated_communitiesInput, UserUncheckedUpdateWithoutCreated_communitiesInput>
    create: XOR<UserCreateWithoutCreated_communitiesInput, UserUncheckedCreateWithoutCreated_communitiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreated_communitiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreated_communitiesInput, UserUncheckedUpdateWithoutCreated_communitiesInput>
  }

  export type UserUpdateWithoutCreated_communitiesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutCreated_communitiesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type CampusUpsertWithoutCommunitiesInput = {
    update: XOR<CampusUpdateWithoutCommunitiesInput, CampusUncheckedUpdateWithoutCommunitiesInput>
    create: XOR<CampusCreateWithoutCommunitiesInput, CampusUncheckedCreateWithoutCommunitiesInput>
    where?: CampusWhereInput
  }

  export type CampusUpdateToOneWithWhereWithoutCommunitiesInput = {
    where?: CampusWhereInput
    data: XOR<CampusUpdateWithoutCommunitiesInput, CampusUncheckedUpdateWithoutCommunitiesInput>
  }

  export type CampusUpdateWithoutCommunitiesInput = {
    campus_id?: StringFieldUpdateOperationsInput | string
    campus_name?: StringFieldUpdateOperationsInput | string
    location_details?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCampusNestedInput
  }

  export type CampusUncheckedUpdateWithoutCommunitiesInput = {
    campus_id?: StringFieldUpdateOperationsInput | string
    campus_name?: StringFieldUpdateOperationsInput | string
    location_details?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCampusNestedInput
  }

  export type FacultyUpsertWithoutCommunitiesInput = {
    update: XOR<FacultyUpdateWithoutCommunitiesInput, FacultyUncheckedUpdateWithoutCommunitiesInput>
    create: XOR<FacultyCreateWithoutCommunitiesInput, FacultyUncheckedCreateWithoutCommunitiesInput>
    where?: FacultyWhereInput
  }

  export type FacultyUpdateToOneWithWhereWithoutCommunitiesInput = {
    where?: FacultyWhereInput
    data: XOR<FacultyUpdateWithoutCommunitiesInput, FacultyUncheckedUpdateWithoutCommunitiesInput>
  }

  export type FacultyUpdateWithoutCommunitiesInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutFacultyNestedInput
    courses?: CourseUpdateManyWithoutFacultyNestedInput
    units?: UnitUpdateManyWithoutFacultyNestedInput
  }

  export type FacultyUncheckedUpdateWithoutCommunitiesInput = {
    faculty_id?: StringFieldUpdateOperationsInput | string
    faculty_name?: StringFieldUpdateOperationsInput | string
    faculty_abbreviation?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutFacultyNestedInput
    courses?: CourseUncheckedUpdateManyWithoutFacultyNestedInput
    units?: UnitUncheckedUpdateManyWithoutFacultyNestedInput
  }

  export type CourseUpsertWithoutCommunitiesInput = {
    update: XOR<CourseUpdateWithoutCommunitiesInput, CourseUncheckedUpdateWithoutCommunitiesInput>
    create: XOR<CourseCreateWithoutCommunitiesInput, CourseUncheckedCreateWithoutCommunitiesInput>
    where?: CourseWhereInput
  }

  export type CourseUpdateToOneWithWhereWithoutCommunitiesInput = {
    where?: CourseWhereInput
    data: XOR<CourseUpdateWithoutCommunitiesInput, CourseUncheckedUpdateWithoutCommunitiesInput>
  }

  export type CourseUpdateWithoutCommunitiesInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty?: FacultyUpdateOneRequiredWithoutCoursesNestedInput
    users?: UserUpdateManyWithoutCourseNestedInput
  }

  export type CourseUncheckedUpdateWithoutCommunitiesInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: StringFieldUpdateOperationsInput | string
    users?: UserUncheckedUpdateManyWithoutCourseNestedInput
  }

  export type UnitUpsertWithoutCommunitiesInput = {
    update: XOR<UnitUpdateWithoutCommunitiesInput, UnitUncheckedUpdateWithoutCommunitiesInput>
    create: XOR<UnitCreateWithoutCommunitiesInput, UnitUncheckedCreateWithoutCommunitiesInput>
    where?: UnitWhereInput
  }

  export type UnitUpdateToOneWithWhereWithoutCommunitiesInput = {
    where?: UnitWhereInput
    data: XOR<UnitUpdateWithoutCommunitiesInput, UnitUncheckedUpdateWithoutCommunitiesInput>
  }

  export type UnitUpdateWithoutCommunitiesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty?: FacultyUpdateOneWithoutUnitsNestedInput
    user_enrollments?: UserUnitEnrollmentUpdateManyWithoutUnitNestedInput
  }

  export type UnitUncheckedUpdateWithoutCommunitiesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type PostUpsertWithWhereUniqueWithoutCommunityInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutCommunityInput, PostUncheckedUpdateWithoutCommunityInput>
    create: XOR<PostCreateWithoutCommunityInput, PostUncheckedCreateWithoutCommunityInput>
  }

  export type PostUpdateWithWhereUniqueWithoutCommunityInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutCommunityInput, PostUncheckedUpdateWithoutCommunityInput>
  }

  export type PostUpdateManyWithWhereWithoutCommunityInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutCommunityInput>
  }

  export type CommunityMembershipUpsertWithWhereUniqueWithoutCommunityInput = {
    where: CommunityMembershipWhereUniqueInput
    update: XOR<CommunityMembershipUpdateWithoutCommunityInput, CommunityMembershipUncheckedUpdateWithoutCommunityInput>
    create: XOR<CommunityMembershipCreateWithoutCommunityInput, CommunityMembershipUncheckedCreateWithoutCommunityInput>
  }

  export type CommunityMembershipUpdateWithWhereUniqueWithoutCommunityInput = {
    where: CommunityMembershipWhereUniqueInput
    data: XOR<CommunityMembershipUpdateWithoutCommunityInput, CommunityMembershipUncheckedUpdateWithoutCommunityInput>
  }

  export type CommunityMembershipUpdateManyWithWhereWithoutCommunityInput = {
    where: CommunityMembershipScalarWhereInput
    data: XOR<CommunityMembershipUpdateManyMutationInput, CommunityMembershipUncheckedUpdateManyWithoutCommunityInput>
  }

  export type ModeratorUpsertWithWhereUniqueWithoutCommunityInput = {
    where: ModeratorWhereUniqueInput
    update: XOR<ModeratorUpdateWithoutCommunityInput, ModeratorUncheckedUpdateWithoutCommunityInput>
    create: XOR<ModeratorCreateWithoutCommunityInput, ModeratorUncheckedCreateWithoutCommunityInput>
  }

  export type ModeratorUpdateWithWhereUniqueWithoutCommunityInput = {
    where: ModeratorWhereUniqueInput
    data: XOR<ModeratorUpdateWithoutCommunityInput, ModeratorUncheckedUpdateWithoutCommunityInput>
  }

  export type ModeratorUpdateManyWithWhereWithoutCommunityInput = {
    where: ModeratorScalarWhereInput
    data: XOR<ModeratorUpdateManyMutationInput, ModeratorUncheckedUpdateManyWithoutCommunityInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutRelated_communityInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutRelated_communityInput, NotificationUncheckedUpdateWithoutRelated_communityInput>
    create: XOR<NotificationCreateWithoutRelated_communityInput, NotificationUncheckedCreateWithoutRelated_communityInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutRelated_communityInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutRelated_communityInput, NotificationUncheckedUpdateWithoutRelated_communityInput>
  }

  export type NotificationUpdateManyWithWhereWithoutRelated_communityInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutRelated_communityInput>
  }

  export type UserCreateWithoutPostsInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutPostsInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutPostsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
  }

  export type CommunityCreateWithoutPostsInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator: UserCreateNestedOneWithoutCreated_communitiesInput
    related_campus?: CampusCreateNestedOneWithoutCommunitiesInput
    related_faculty?: FacultyCreateNestedOneWithoutCommunitiesInput
    related_course?: CourseCreateNestedOneWithoutCommunitiesInput
    related_unit?: UnitCreateNestedOneWithoutCommunitiesInput
    members?: CommunityMembershipCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorCreateNestedManyWithoutCommunityInput
    notifications?: NotificationCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUncheckedCreateWithoutPostsInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
    members?: CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorUncheckedCreateNestedManyWithoutCommunityInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityCreateOrConnectWithoutPostsInput = {
    where: CommunityWhereUniqueInput
    create: XOR<CommunityCreateWithoutPostsInput, CommunityUncheckedCreateWithoutPostsInput>
  }

  export type CommentCreateWithoutPostInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    author: UserCreateNestedOneWithoutCommentsInput
    parent_comment?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParent_commentInput
    votes?: VoteCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentCreateNestedManyWithoutCommentInput
    notifications?: NotificationCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentUncheckedCreateWithoutPostInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    parent_comment_id?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParent_commentInput
    votes?: VoteUncheckedCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutCommentInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentCreateOrConnectWithoutPostInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput>
  }

  export type CommentCreateManyPostInputEnvelope = {
    data: CommentCreateManyPostInput | CommentCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type VoteCreateWithoutPostInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    user: UserCreateNestedOneWithoutVotesInput
    comment?: CommentCreateNestedOneWithoutVotesInput
  }

  export type VoteUncheckedCreateWithoutPostInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    user_id: string
    comment_id?: string | null
  }

  export type VoteCreateOrConnectWithoutPostInput = {
    where: VoteWhereUniqueInput
    create: XOR<VoteCreateWithoutPostInput, VoteUncheckedCreateWithoutPostInput>
  }

  export type VoteCreateManyPostInputEnvelope = {
    data: VoteCreateManyPostInput | VoteCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type SavedContentCreateWithoutPostInput = {
    saved_id?: string
    saved_at?: Date | string
    user: UserCreateNestedOneWithoutSaved_contentInput
    comment?: CommentCreateNestedOneWithoutSaved_by_usersInput
  }

  export type SavedContentUncheckedCreateWithoutPostInput = {
    saved_id?: string
    saved_at?: Date | string
    user_id: string
    comment_id?: string | null
  }

  export type SavedContentCreateOrConnectWithoutPostInput = {
    where: SavedContentWhereUniqueInput
    create: XOR<SavedContentCreateWithoutPostInput, SavedContentUncheckedCreateWithoutPostInput>
  }

  export type SavedContentCreateManyPostInputEnvelope = {
    data: SavedContentCreateManyPostInput | SavedContentCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutRelated_postInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient: UserCreateNestedOneWithoutNotifications_receivedInput
    sender?: UserCreateNestedOneWithoutNotifications_sentInput
    related_comment?: CommentCreateNestedOneWithoutNotificationsInput
    related_community?: CommunityCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutRelated_postInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    sender_user_id?: string | null
    related_comment_id?: string | null
    related_community_id?: string | null
  }

  export type NotificationCreateOrConnectWithoutRelated_postInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutRelated_postInput, NotificationUncheckedCreateWithoutRelated_postInput>
  }

  export type NotificationCreateManyRelated_postInputEnvelope = {
    data: NotificationCreateManyRelated_postInput | NotificationCreateManyRelated_postInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutPostsInput = {
    update: XOR<UserUpdateWithoutPostsInput, UserUncheckedUpdateWithoutPostsInput>
    create: XOR<UserCreateWithoutPostsInput, UserUncheckedCreateWithoutPostsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPostsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPostsInput, UserUncheckedUpdateWithoutPostsInput>
  }

  export type UserUpdateWithoutPostsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutPostsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type CommunityUpsertWithoutPostsInput = {
    update: XOR<CommunityUpdateWithoutPostsInput, CommunityUncheckedUpdateWithoutPostsInput>
    create: XOR<CommunityCreateWithoutPostsInput, CommunityUncheckedCreateWithoutPostsInput>
    where?: CommunityWhereInput
  }

  export type CommunityUpdateToOneWithWhereWithoutPostsInput = {
    where?: CommunityWhereInput
    data: XOR<CommunityUpdateWithoutPostsInput, CommunityUncheckedUpdateWithoutPostsInput>
  }

  export type CommunityUpdateWithoutPostsInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreated_communitiesNestedInput
    related_campus?: CampusUpdateOneWithoutCommunitiesNestedInput
    related_faculty?: FacultyUpdateOneWithoutCommunitiesNestedInput
    related_course?: CourseUpdateOneWithoutCommunitiesNestedInput
    related_unit?: UnitUpdateOneWithoutCommunitiesNestedInput
    members?: CommunityMembershipUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateWithoutPostsInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    members?: CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUncheckedUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommentUpsertWithWhereUniqueWithoutPostInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutPostInput, CommentUncheckedUpdateWithoutPostInput>
    create: XOR<CommentCreateWithoutPostInput, CommentUncheckedCreateWithoutPostInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutPostInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutPostInput, CommentUncheckedUpdateWithoutPostInput>
  }

  export type CommentUpdateManyWithWhereWithoutPostInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutPostInput>
  }

  export type VoteUpsertWithWhereUniqueWithoutPostInput = {
    where: VoteWhereUniqueInput
    update: XOR<VoteUpdateWithoutPostInput, VoteUncheckedUpdateWithoutPostInput>
    create: XOR<VoteCreateWithoutPostInput, VoteUncheckedCreateWithoutPostInput>
  }

  export type VoteUpdateWithWhereUniqueWithoutPostInput = {
    where: VoteWhereUniqueInput
    data: XOR<VoteUpdateWithoutPostInput, VoteUncheckedUpdateWithoutPostInput>
  }

  export type VoteUpdateManyWithWhereWithoutPostInput = {
    where: VoteScalarWhereInput
    data: XOR<VoteUpdateManyMutationInput, VoteUncheckedUpdateManyWithoutPostInput>
  }

  export type SavedContentUpsertWithWhereUniqueWithoutPostInput = {
    where: SavedContentWhereUniqueInput
    update: XOR<SavedContentUpdateWithoutPostInput, SavedContentUncheckedUpdateWithoutPostInput>
    create: XOR<SavedContentCreateWithoutPostInput, SavedContentUncheckedCreateWithoutPostInput>
  }

  export type SavedContentUpdateWithWhereUniqueWithoutPostInput = {
    where: SavedContentWhereUniqueInput
    data: XOR<SavedContentUpdateWithoutPostInput, SavedContentUncheckedUpdateWithoutPostInput>
  }

  export type SavedContentUpdateManyWithWhereWithoutPostInput = {
    where: SavedContentScalarWhereInput
    data: XOR<SavedContentUpdateManyMutationInput, SavedContentUncheckedUpdateManyWithoutPostInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutRelated_postInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutRelated_postInput, NotificationUncheckedUpdateWithoutRelated_postInput>
    create: XOR<NotificationCreateWithoutRelated_postInput, NotificationUncheckedCreateWithoutRelated_postInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutRelated_postInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutRelated_postInput, NotificationUncheckedUpdateWithoutRelated_postInput>
  }

  export type NotificationUpdateManyWithWhereWithoutRelated_postInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutRelated_postInput>
  }

  export type PostCreateWithoutCommentsInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    author: UserCreateNestedOneWithoutPostsInput
    community: CommunityCreateNestedOneWithoutPostsInput
    votes?: VoteCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentCreateNestedManyWithoutPostInput
    notifications?: NotificationCreateNestedManyWithoutRelated_postInput
  }

  export type PostUncheckedCreateWithoutCommentsInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    community_id: string
    votes?: VoteUncheckedCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutPostInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_postInput
  }

  export type PostCreateOrConnectWithoutCommentsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutCommentsInput, PostUncheckedCreateWithoutCommentsInput>
  }

  export type UserCreateWithoutCommentsInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutCommentsInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutCommentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
  }

  export type CommentCreateWithoutRepliesInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post: PostCreateNestedOneWithoutCommentsInput
    author: UserCreateNestedOneWithoutCommentsInput
    parent_comment?: CommentCreateNestedOneWithoutRepliesInput
    votes?: VoteCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentCreateNestedManyWithoutCommentInput
    notifications?: NotificationCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentUncheckedCreateWithoutRepliesInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    user_id: string
    parent_comment_id?: string | null
    votes?: VoteUncheckedCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutCommentInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentCreateOrConnectWithoutRepliesInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
  }

  export type CommentCreateWithoutParent_commentInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post: PostCreateNestedOneWithoutCommentsInput
    author: UserCreateNestedOneWithoutCommentsInput
    replies?: CommentCreateNestedManyWithoutParent_commentInput
    votes?: VoteCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentCreateNestedManyWithoutCommentInput
    notifications?: NotificationCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentUncheckedCreateWithoutParent_commentInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    user_id: string
    replies?: CommentUncheckedCreateNestedManyWithoutParent_commentInput
    votes?: VoteUncheckedCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutCommentInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentCreateOrConnectWithoutParent_commentInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutParent_commentInput, CommentUncheckedCreateWithoutParent_commentInput>
  }

  export type CommentCreateManyParent_commentInputEnvelope = {
    data: CommentCreateManyParent_commentInput | CommentCreateManyParent_commentInput[]
    skipDuplicates?: boolean
  }

  export type VoteCreateWithoutCommentInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    user: UserCreateNestedOneWithoutVotesInput
    post?: PostCreateNestedOneWithoutVotesInput
  }

  export type VoteUncheckedCreateWithoutCommentInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    user_id: string
    post_id?: string | null
  }

  export type VoteCreateOrConnectWithoutCommentInput = {
    where: VoteWhereUniqueInput
    create: XOR<VoteCreateWithoutCommentInput, VoteUncheckedCreateWithoutCommentInput>
  }

  export type VoteCreateManyCommentInputEnvelope = {
    data: VoteCreateManyCommentInput | VoteCreateManyCommentInput[]
    skipDuplicates?: boolean
  }

  export type SavedContentCreateWithoutCommentInput = {
    saved_id?: string
    saved_at?: Date | string
    user: UserCreateNestedOneWithoutSaved_contentInput
    post?: PostCreateNestedOneWithoutSaved_by_usersInput
  }

  export type SavedContentUncheckedCreateWithoutCommentInput = {
    saved_id?: string
    saved_at?: Date | string
    user_id: string
    post_id?: string | null
  }

  export type SavedContentCreateOrConnectWithoutCommentInput = {
    where: SavedContentWhereUniqueInput
    create: XOR<SavedContentCreateWithoutCommentInput, SavedContentUncheckedCreateWithoutCommentInput>
  }

  export type SavedContentCreateManyCommentInputEnvelope = {
    data: SavedContentCreateManyCommentInput | SavedContentCreateManyCommentInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutRelated_commentInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient: UserCreateNestedOneWithoutNotifications_receivedInput
    sender?: UserCreateNestedOneWithoutNotifications_sentInput
    related_post?: PostCreateNestedOneWithoutNotificationsInput
    related_community?: CommunityCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateWithoutRelated_commentInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    sender_user_id?: string | null
    related_post_id?: string | null
    related_community_id?: string | null
  }

  export type NotificationCreateOrConnectWithoutRelated_commentInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutRelated_commentInput, NotificationUncheckedCreateWithoutRelated_commentInput>
  }

  export type NotificationCreateManyRelated_commentInputEnvelope = {
    data: NotificationCreateManyRelated_commentInput | NotificationCreateManyRelated_commentInput[]
    skipDuplicates?: boolean
  }

  export type PostUpsertWithoutCommentsInput = {
    update: XOR<PostUpdateWithoutCommentsInput, PostUncheckedUpdateWithoutCommentsInput>
    create: XOR<PostCreateWithoutCommentsInput, PostUncheckedCreateWithoutCommentsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutCommentsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutCommentsInput, PostUncheckedUpdateWithoutCommentsInput>
  }

  export type PostUpdateWithoutCommentsInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    community?: CommunityUpdateOneRequiredWithoutPostsNestedInput
    votes?: VoteUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutPostNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_postNestedInput
  }

  export type PostUncheckedUpdateWithoutCommentsInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
    votes?: VoteUncheckedUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutPostNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_postNestedInput
  }

  export type UserUpsertWithoutCommentsInput = {
    update: XOR<UserUpdateWithoutCommentsInput, UserUncheckedUpdateWithoutCommentsInput>
    create: XOR<UserCreateWithoutCommentsInput, UserUncheckedCreateWithoutCommentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCommentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCommentsInput, UserUncheckedUpdateWithoutCommentsInput>
  }

  export type UserUpdateWithoutCommentsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutCommentsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type CommentUpsertWithoutRepliesInput = {
    update: XOR<CommentUpdateWithoutRepliesInput, CommentUncheckedUpdateWithoutRepliesInput>
    create: XOR<CommentCreateWithoutRepliesInput, CommentUncheckedCreateWithoutRepliesInput>
    where?: CommentWhereInput
  }

  export type CommentUpdateToOneWithWhereWithoutRepliesInput = {
    where?: CommentWhereInput
    data: XOR<CommentUpdateWithoutRepliesInput, CommentUncheckedUpdateWithoutRepliesInput>
  }

  export type CommentUpdateWithoutRepliesInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    author?: UserUpdateOneRequiredWithoutCommentsNestedInput
    parent_comment?: CommentUpdateOneWithoutRepliesNestedInput
    votes?: VoteUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateWithoutRepliesInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    votes?: VoteUncheckedUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUpsertWithWhereUniqueWithoutParent_commentInput = {
    where: CommentWhereUniqueInput
    update: XOR<CommentUpdateWithoutParent_commentInput, CommentUncheckedUpdateWithoutParent_commentInput>
    create: XOR<CommentCreateWithoutParent_commentInput, CommentUncheckedCreateWithoutParent_commentInput>
  }

  export type CommentUpdateWithWhereUniqueWithoutParent_commentInput = {
    where: CommentWhereUniqueInput
    data: XOR<CommentUpdateWithoutParent_commentInput, CommentUncheckedUpdateWithoutParent_commentInput>
  }

  export type CommentUpdateManyWithWhereWithoutParent_commentInput = {
    where: CommentScalarWhereInput
    data: XOR<CommentUpdateManyMutationInput, CommentUncheckedUpdateManyWithoutParent_commentInput>
  }

  export type VoteUpsertWithWhereUniqueWithoutCommentInput = {
    where: VoteWhereUniqueInput
    update: XOR<VoteUpdateWithoutCommentInput, VoteUncheckedUpdateWithoutCommentInput>
    create: XOR<VoteCreateWithoutCommentInput, VoteUncheckedCreateWithoutCommentInput>
  }

  export type VoteUpdateWithWhereUniqueWithoutCommentInput = {
    where: VoteWhereUniqueInput
    data: XOR<VoteUpdateWithoutCommentInput, VoteUncheckedUpdateWithoutCommentInput>
  }

  export type VoteUpdateManyWithWhereWithoutCommentInput = {
    where: VoteScalarWhereInput
    data: XOR<VoteUpdateManyMutationInput, VoteUncheckedUpdateManyWithoutCommentInput>
  }

  export type SavedContentUpsertWithWhereUniqueWithoutCommentInput = {
    where: SavedContentWhereUniqueInput
    update: XOR<SavedContentUpdateWithoutCommentInput, SavedContentUncheckedUpdateWithoutCommentInput>
    create: XOR<SavedContentCreateWithoutCommentInput, SavedContentUncheckedCreateWithoutCommentInput>
  }

  export type SavedContentUpdateWithWhereUniqueWithoutCommentInput = {
    where: SavedContentWhereUniqueInput
    data: XOR<SavedContentUpdateWithoutCommentInput, SavedContentUncheckedUpdateWithoutCommentInput>
  }

  export type SavedContentUpdateManyWithWhereWithoutCommentInput = {
    where: SavedContentScalarWhereInput
    data: XOR<SavedContentUpdateManyMutationInput, SavedContentUncheckedUpdateManyWithoutCommentInput>
  }

  export type NotificationUpsertWithWhereUniqueWithoutRelated_commentInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutRelated_commentInput, NotificationUncheckedUpdateWithoutRelated_commentInput>
    create: XOR<NotificationCreateWithoutRelated_commentInput, NotificationUncheckedCreateWithoutRelated_commentInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutRelated_commentInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutRelated_commentInput, NotificationUncheckedUpdateWithoutRelated_commentInput>
  }

  export type NotificationUpdateManyWithWhereWithoutRelated_commentInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutRelated_commentInput>
  }

  export type UserCreateWithoutVotesInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutVotesInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutVotesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutVotesInput, UserUncheckedCreateWithoutVotesInput>
  }

  export type PostCreateWithoutVotesInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    author: UserCreateNestedOneWithoutPostsInput
    community: CommunityCreateNestedOneWithoutPostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentCreateNestedManyWithoutPostInput
    notifications?: NotificationCreateNestedManyWithoutRelated_postInput
  }

  export type PostUncheckedCreateWithoutVotesInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    community_id: string
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutPostInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_postInput
  }

  export type PostCreateOrConnectWithoutVotesInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutVotesInput, PostUncheckedCreateWithoutVotesInput>
  }

  export type CommentCreateWithoutVotesInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post: PostCreateNestedOneWithoutCommentsInput
    author: UserCreateNestedOneWithoutCommentsInput
    parent_comment?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParent_commentInput
    saved_by_users?: SavedContentCreateNestedManyWithoutCommentInput
    notifications?: NotificationCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentUncheckedCreateWithoutVotesInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    user_id: string
    parent_comment_id?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParent_commentInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutCommentInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentCreateOrConnectWithoutVotesInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutVotesInput, CommentUncheckedCreateWithoutVotesInput>
  }

  export type UserUpsertWithoutVotesInput = {
    update: XOR<UserUpdateWithoutVotesInput, UserUncheckedUpdateWithoutVotesInput>
    create: XOR<UserCreateWithoutVotesInput, UserUncheckedCreateWithoutVotesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutVotesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutVotesInput, UserUncheckedUpdateWithoutVotesInput>
  }

  export type UserUpdateWithoutVotesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutVotesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type PostUpsertWithoutVotesInput = {
    update: XOR<PostUpdateWithoutVotesInput, PostUncheckedUpdateWithoutVotesInput>
    create: XOR<PostCreateWithoutVotesInput, PostUncheckedCreateWithoutVotesInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutVotesInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutVotesInput, PostUncheckedUpdateWithoutVotesInput>
  }

  export type PostUpdateWithoutVotesInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    community?: CommunityUpdateOneRequiredWithoutPostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutPostNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_postNestedInput
  }

  export type PostUncheckedUpdateWithoutVotesInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutPostNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_postNestedInput
  }

  export type CommentUpsertWithoutVotesInput = {
    update: XOR<CommentUpdateWithoutVotesInput, CommentUncheckedUpdateWithoutVotesInput>
    create: XOR<CommentCreateWithoutVotesInput, CommentUncheckedCreateWithoutVotesInput>
    where?: CommentWhereInput
  }

  export type CommentUpdateToOneWithWhereWithoutVotesInput = {
    where?: CommentWhereInput
    data: XOR<CommentUpdateWithoutVotesInput, CommentUncheckedUpdateWithoutVotesInput>
  }

  export type CommentUpdateWithoutVotesInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    author?: UserUpdateOneRequiredWithoutCommentsNestedInput
    parent_comment?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParent_commentNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateWithoutVotesInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParent_commentNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_commentNestedInput
  }

  export type UserCreateWithoutMembershipsInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutMembershipsInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutMembershipsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMembershipsInput, UserUncheckedCreateWithoutMembershipsInput>
  }

  export type CommunityCreateWithoutMembersInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator: UserCreateNestedOneWithoutCreated_communitiesInput
    related_campus?: CampusCreateNestedOneWithoutCommunitiesInput
    related_faculty?: FacultyCreateNestedOneWithoutCommunitiesInput
    related_course?: CourseCreateNestedOneWithoutCommunitiesInput
    related_unit?: UnitCreateNestedOneWithoutCommunitiesInput
    posts?: PostCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorCreateNestedManyWithoutCommunityInput
    notifications?: NotificationCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUncheckedCreateWithoutMembersInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorUncheckedCreateNestedManyWithoutCommunityInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityCreateOrConnectWithoutMembersInput = {
    where: CommunityWhereUniqueInput
    create: XOR<CommunityCreateWithoutMembersInput, CommunityUncheckedCreateWithoutMembersInput>
  }

  export type UserUpsertWithoutMembershipsInput = {
    update: XOR<UserUpdateWithoutMembershipsInput, UserUncheckedUpdateWithoutMembershipsInput>
    create: XOR<UserCreateWithoutMembershipsInput, UserUncheckedCreateWithoutMembershipsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMembershipsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMembershipsInput, UserUncheckedUpdateWithoutMembershipsInput>
  }

  export type UserUpdateWithoutMembershipsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutMembershipsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type CommunityUpsertWithoutMembersInput = {
    update: XOR<CommunityUpdateWithoutMembersInput, CommunityUncheckedUpdateWithoutMembersInput>
    create: XOR<CommunityCreateWithoutMembersInput, CommunityUncheckedCreateWithoutMembersInput>
    where?: CommunityWhereInput
  }

  export type CommunityUpdateToOneWithWhereWithoutMembersInput = {
    where?: CommunityWhereInput
    data: XOR<CommunityUpdateWithoutMembersInput, CommunityUncheckedUpdateWithoutMembersInput>
  }

  export type CommunityUpdateWithoutMembersInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreated_communitiesNestedInput
    related_campus?: CampusUpdateOneWithoutCommunitiesNestedInput
    related_faculty?: FacultyUpdateOneWithoutCommunitiesNestedInput
    related_course?: CourseUpdateOneWithoutCommunitiesNestedInput
    related_unit?: UnitUpdateOneWithoutCommunitiesNestedInput
    posts?: PostUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateWithoutMembersInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUncheckedUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput
  }

  export type UserCreateWithoutModerated_communitiesInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutModerated_communitiesInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutModerated_communitiesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutModerated_communitiesInput, UserUncheckedCreateWithoutModerated_communitiesInput>
  }

  export type CommunityCreateWithoutModeratorsInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator: UserCreateNestedOneWithoutCreated_communitiesInput
    related_campus?: CampusCreateNestedOneWithoutCommunitiesInput
    related_faculty?: FacultyCreateNestedOneWithoutCommunitiesInput
    related_course?: CourseCreateNestedOneWithoutCommunitiesInput
    related_unit?: UnitCreateNestedOneWithoutCommunitiesInput
    posts?: PostCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipCreateNestedManyWithoutCommunityInput
    notifications?: NotificationCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityUncheckedCreateWithoutModeratorsInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_communityInput
  }

  export type CommunityCreateOrConnectWithoutModeratorsInput = {
    where: CommunityWhereUniqueInput
    create: XOR<CommunityCreateWithoutModeratorsInput, CommunityUncheckedCreateWithoutModeratorsInput>
  }

  export type UserUpsertWithoutModerated_communitiesInput = {
    update: XOR<UserUpdateWithoutModerated_communitiesInput, UserUncheckedUpdateWithoutModerated_communitiesInput>
    create: XOR<UserCreateWithoutModerated_communitiesInput, UserUncheckedCreateWithoutModerated_communitiesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutModerated_communitiesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutModerated_communitiesInput, UserUncheckedUpdateWithoutModerated_communitiesInput>
  }

  export type UserUpdateWithoutModerated_communitiesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutModerated_communitiesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type CommunityUpsertWithoutModeratorsInput = {
    update: XOR<CommunityUpdateWithoutModeratorsInput, CommunityUncheckedUpdateWithoutModeratorsInput>
    create: XOR<CommunityCreateWithoutModeratorsInput, CommunityUncheckedCreateWithoutModeratorsInput>
    where?: CommunityWhereInput
  }

  export type CommunityUpdateToOneWithWhereWithoutModeratorsInput = {
    where?: CommunityWhereInput
    data: XOR<CommunityUpdateWithoutModeratorsInput, CommunityUncheckedUpdateWithoutModeratorsInput>
  }

  export type CommunityUpdateWithoutModeratorsInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreated_communitiesNestedInput
    related_campus?: CampusUpdateOneWithoutCommunitiesNestedInput
    related_faculty?: FacultyUpdateOneWithoutCommunitiesNestedInput
    related_course?: CourseUpdateOneWithoutCommunitiesNestedInput
    related_unit?: UnitUpdateOneWithoutCommunitiesNestedInput
    posts?: PostUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateWithoutModeratorsInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput
  }

  export type UserCreateWithoutUnit_enrollmentsInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutUnit_enrollmentsInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutUnit_enrollmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUnit_enrollmentsInput, UserUncheckedCreateWithoutUnit_enrollmentsInput>
  }

  export type UnitCreateWithoutUser_enrollmentsInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty?: FacultyCreateNestedOneWithoutUnitsInput
    communities?: CommunityCreateNestedManyWithoutRelated_unitInput
  }

  export type UnitUncheckedCreateWithoutUser_enrollmentsInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id?: string | null
    communities?: CommunityUncheckedCreateNestedManyWithoutRelated_unitInput
  }

  export type UnitCreateOrConnectWithoutUser_enrollmentsInput = {
    where: UnitWhereUniqueInput
    create: XOR<UnitCreateWithoutUser_enrollmentsInput, UnitUncheckedCreateWithoutUser_enrollmentsInput>
  }

  export type UserUpsertWithoutUnit_enrollmentsInput = {
    update: XOR<UserUpdateWithoutUnit_enrollmentsInput, UserUncheckedUpdateWithoutUnit_enrollmentsInput>
    create: XOR<UserCreateWithoutUnit_enrollmentsInput, UserUncheckedCreateWithoutUnit_enrollmentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUnit_enrollmentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUnit_enrollmentsInput, UserUncheckedUpdateWithoutUnit_enrollmentsInput>
  }

  export type UserUpdateWithoutUnit_enrollmentsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutUnit_enrollmentsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type UnitUpsertWithoutUser_enrollmentsInput = {
    update: XOR<UnitUpdateWithoutUser_enrollmentsInput, UnitUncheckedUpdateWithoutUser_enrollmentsInput>
    create: XOR<UnitCreateWithoutUser_enrollmentsInput, UnitUncheckedCreateWithoutUser_enrollmentsInput>
    where?: UnitWhereInput
  }

  export type UnitUpdateToOneWithWhereWithoutUser_enrollmentsInput = {
    where?: UnitWhereInput
    data: XOR<UnitUpdateWithoutUser_enrollmentsInput, UnitUncheckedUpdateWithoutUser_enrollmentsInput>
  }

  export type UnitUpdateWithoutUser_enrollmentsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty?: FacultyUpdateOneWithoutUnitsNestedInput
    communities?: CommunityUpdateManyWithoutRelated_unitNestedInput
  }

  export type UnitUncheckedUpdateWithoutUser_enrollmentsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    communities?: CommunityUncheckedUpdateManyWithoutRelated_unitNestedInput
  }

  export type UserCreateWithoutSaved_contentInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutSaved_contentInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutSaved_contentInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSaved_contentInput, UserUncheckedCreateWithoutSaved_contentInput>
  }

  export type PostCreateWithoutSaved_by_usersInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    author: UserCreateNestedOneWithoutPostsInput
    community: CommunityCreateNestedOneWithoutPostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    votes?: VoteCreateNestedManyWithoutPostInput
    notifications?: NotificationCreateNestedManyWithoutRelated_postInput
  }

  export type PostUncheckedCreateWithoutSaved_by_usersInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    community_id: string
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    votes?: VoteUncheckedCreateNestedManyWithoutPostInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_postInput
  }

  export type PostCreateOrConnectWithoutSaved_by_usersInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutSaved_by_usersInput, PostUncheckedCreateWithoutSaved_by_usersInput>
  }

  export type CommentCreateWithoutSaved_by_usersInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post: PostCreateNestedOneWithoutCommentsInput
    author: UserCreateNestedOneWithoutCommentsInput
    parent_comment?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParent_commentInput
    votes?: VoteCreateNestedManyWithoutCommentInput
    notifications?: NotificationCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentUncheckedCreateWithoutSaved_by_usersInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    user_id: string
    parent_comment_id?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParent_commentInput
    votes?: VoteUncheckedCreateNestedManyWithoutCommentInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutRelated_commentInput
  }

  export type CommentCreateOrConnectWithoutSaved_by_usersInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutSaved_by_usersInput, CommentUncheckedCreateWithoutSaved_by_usersInput>
  }

  export type UserUpsertWithoutSaved_contentInput = {
    update: XOR<UserUpdateWithoutSaved_contentInput, UserUncheckedUpdateWithoutSaved_contentInput>
    create: XOR<UserCreateWithoutSaved_contentInput, UserUncheckedCreateWithoutSaved_contentInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSaved_contentInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSaved_contentInput, UserUncheckedUpdateWithoutSaved_contentInput>
  }

  export type UserUpdateWithoutSaved_contentInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutSaved_contentInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type PostUpsertWithoutSaved_by_usersInput = {
    update: XOR<PostUpdateWithoutSaved_by_usersInput, PostUncheckedUpdateWithoutSaved_by_usersInput>
    create: XOR<PostCreateWithoutSaved_by_usersInput, PostUncheckedCreateWithoutSaved_by_usersInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutSaved_by_usersInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutSaved_by_usersInput, PostUncheckedUpdateWithoutSaved_by_usersInput>
  }

  export type PostUpdateWithoutSaved_by_usersInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    community?: CommunityUpdateOneRequiredWithoutPostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    votes?: VoteUpdateManyWithoutPostNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_postNestedInput
  }

  export type PostUncheckedUpdateWithoutSaved_by_usersInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    votes?: VoteUncheckedUpdateManyWithoutPostNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_postNestedInput
  }

  export type CommentUpsertWithoutSaved_by_usersInput = {
    update: XOR<CommentUpdateWithoutSaved_by_usersInput, CommentUncheckedUpdateWithoutSaved_by_usersInput>
    create: XOR<CommentCreateWithoutSaved_by_usersInput, CommentUncheckedCreateWithoutSaved_by_usersInput>
    where?: CommentWhereInput
  }

  export type CommentUpdateToOneWithWhereWithoutSaved_by_usersInput = {
    where?: CommentWhereInput
    data: XOR<CommentUpdateWithoutSaved_by_usersInput, CommentUncheckedUpdateWithoutSaved_by_usersInput>
  }

  export type CommentUpdateWithoutSaved_by_usersInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    author?: UserUpdateOneRequiredWithoutCommentsNestedInput
    parent_comment?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateWithoutSaved_by_usersInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUncheckedUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_commentNestedInput
  }

  export type UserCreateWithoutNotifications_receivedInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_sent?: NotificationCreateNestedManyWithoutSenderInput
  }

  export type UserUncheckedCreateWithoutNotifications_receivedInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_sent?: NotificationUncheckedCreateNestedManyWithoutSenderInput
  }

  export type UserCreateOrConnectWithoutNotifications_receivedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotifications_receivedInput, UserUncheckedCreateWithoutNotifications_receivedInput>
  }

  export type UserCreateWithoutNotifications_sentInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus?: CampusCreateNestedOneWithoutUsersInput
    faculty?: FacultyCreateNestedOneWithoutUsersInput
    course?: CourseCreateNestedOneWithoutUsersInput
    created_communities?: CommunityCreateNestedManyWithoutCreatorInput
    posts?: PostCreateNestedManyWithoutAuthorInput
    comments?: CommentCreateNestedManyWithoutAuthorInput
    votes?: VoteCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentCreateNestedManyWithoutUserInput
    saved_content?: SavedContentCreateNestedManyWithoutUserInput
    notifications_received?: NotificationCreateNestedManyWithoutRecipientInput
  }

  export type UserUncheckedCreateWithoutNotifications_sentInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
    course_id?: string | null
    created_communities?: CommunityUncheckedCreateNestedManyWithoutCreatorInput
    posts?: PostUncheckedCreateNestedManyWithoutAuthorInput
    comments?: CommentUncheckedCreateNestedManyWithoutAuthorInput
    votes?: VoteUncheckedCreateNestedManyWithoutUserInput
    memberships?: CommunityMembershipUncheckedCreateNestedManyWithoutUserInput
    moderated_communities?: ModeratorUncheckedCreateNestedManyWithoutUserInput
    unit_enrollments?: UserUnitEnrollmentUncheckedCreateNestedManyWithoutUserInput
    saved_content?: SavedContentUncheckedCreateNestedManyWithoutUserInput
    notifications_received?: NotificationUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type UserCreateOrConnectWithoutNotifications_sentInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotifications_sentInput, UserUncheckedCreateWithoutNotifications_sentInput>
  }

  export type PostCreateWithoutNotificationsInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    author: UserCreateNestedOneWithoutPostsInput
    community: CommunityCreateNestedOneWithoutPostsInput
    comments?: CommentCreateNestedManyWithoutPostInput
    votes?: VoteCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutNotificationsInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    community_id: string
    comments?: CommentUncheckedCreateNestedManyWithoutPostInput
    votes?: VoteUncheckedCreateNestedManyWithoutPostInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutNotificationsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutNotificationsInput, PostUncheckedCreateWithoutNotificationsInput>
  }

  export type CommentCreateWithoutNotificationsInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post: PostCreateNestedOneWithoutCommentsInput
    author: UserCreateNestedOneWithoutCommentsInput
    parent_comment?: CommentCreateNestedOneWithoutRepliesInput
    replies?: CommentCreateNestedManyWithoutParent_commentInput
    votes?: VoteCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentCreateNestedManyWithoutCommentInput
  }

  export type CommentUncheckedCreateWithoutNotificationsInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    user_id: string
    parent_comment_id?: string | null
    replies?: CommentUncheckedCreateNestedManyWithoutParent_commentInput
    votes?: VoteUncheckedCreateNestedManyWithoutCommentInput
    saved_by_users?: SavedContentUncheckedCreateNestedManyWithoutCommentInput
  }

  export type CommentCreateOrConnectWithoutNotificationsInput = {
    where: CommentWhereUniqueInput
    create: XOR<CommentCreateWithoutNotificationsInput, CommentUncheckedCreateWithoutNotificationsInput>
  }

  export type CommunityCreateWithoutNotificationsInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator: UserCreateNestedOneWithoutCreated_communitiesInput
    related_campus?: CampusCreateNestedOneWithoutCommunitiesInput
    related_faculty?: FacultyCreateNestedOneWithoutCommunitiesInput
    related_course?: CourseCreateNestedOneWithoutCommunitiesInput
    related_unit?: UnitCreateNestedOneWithoutCommunitiesInput
    posts?: PostCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorCreateNestedManyWithoutCommunityInput
  }

  export type CommunityUncheckedCreateWithoutNotificationsInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
    posts?: PostUncheckedCreateNestedManyWithoutCommunityInput
    members?: CommunityMembershipUncheckedCreateNestedManyWithoutCommunityInput
    moderators?: ModeratorUncheckedCreateNestedManyWithoutCommunityInput
  }

  export type CommunityCreateOrConnectWithoutNotificationsInput = {
    where: CommunityWhereUniqueInput
    create: XOR<CommunityCreateWithoutNotificationsInput, CommunityUncheckedCreateWithoutNotificationsInput>
  }

  export type UserUpsertWithoutNotifications_receivedInput = {
    update: XOR<UserUpdateWithoutNotifications_receivedInput, UserUncheckedUpdateWithoutNotifications_receivedInput>
    create: XOR<UserCreateWithoutNotifications_receivedInput, UserUncheckedCreateWithoutNotifications_receivedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotifications_receivedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotifications_receivedInput, UserUncheckedUpdateWithoutNotifications_receivedInput>
  }

  export type UserUpdateWithoutNotifications_receivedInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutNotifications_receivedInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type UserUpsertWithoutNotifications_sentInput = {
    update: XOR<UserUpdateWithoutNotifications_sentInput, UserUncheckedUpdateWithoutNotifications_sentInput>
    create: XOR<UserCreateWithoutNotifications_sentInput, UserUncheckedCreateWithoutNotifications_sentInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotifications_sentInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotifications_sentInput, UserUncheckedUpdateWithoutNotifications_sentInput>
  }

  export type UserUpdateWithoutNotifications_sentInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
  }

  export type UserUncheckedUpdateWithoutNotifications_sentInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type PostUpsertWithoutNotificationsInput = {
    update: XOR<PostUpdateWithoutNotificationsInput, PostUncheckedUpdateWithoutNotificationsInput>
    create: XOR<PostCreateWithoutNotificationsInput, PostUncheckedCreateWithoutNotificationsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutNotificationsInput, PostUncheckedUpdateWithoutNotificationsInput>
  }

  export type PostUpdateWithoutNotificationsInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    community?: CommunityUpdateOneRequiredWithoutPostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    votes?: VoteUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutNotificationsInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    community_id?: StringFieldUpdateOperationsInput | string
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    votes?: VoteUncheckedUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutPostNestedInput
  }

  export type CommentUpsertWithoutNotificationsInput = {
    update: XOR<CommentUpdateWithoutNotificationsInput, CommentUncheckedUpdateWithoutNotificationsInput>
    create: XOR<CommentCreateWithoutNotificationsInput, CommentUncheckedCreateWithoutNotificationsInput>
    where?: CommentWhereInput
  }

  export type CommentUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: CommentWhereInput
    data: XOR<CommentUpdateWithoutNotificationsInput, CommentUncheckedUpdateWithoutNotificationsInput>
  }

  export type CommentUpdateWithoutNotificationsInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    author?: UserUpdateOneRequiredWithoutCommentsNestedInput
    parent_comment?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutCommentNestedInput
  }

  export type CommentUncheckedUpdateWithoutNotificationsInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUncheckedUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type CommunityUpsertWithoutNotificationsInput = {
    update: XOR<CommunityUpdateWithoutNotificationsInput, CommunityUncheckedUpdateWithoutNotificationsInput>
    create: XOR<CommunityCreateWithoutNotificationsInput, CommunityUncheckedCreateWithoutNotificationsInput>
    where?: CommunityWhereInput
  }

  export type CommunityUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: CommunityWhereInput
    data: XOR<CommunityUpdateWithoutNotificationsInput, CommunityUncheckedUpdateWithoutNotificationsInput>
  }

  export type CommunityUpdateWithoutNotificationsInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreated_communitiesNestedInput
    related_campus?: CampusUpdateOneWithoutCommunitiesNestedInput
    related_faculty?: FacultyUpdateOneWithoutCommunitiesNestedInput
    related_course?: CourseUpdateOneWithoutCommunitiesNestedInput
    related_unit?: UnitUpdateOneWithoutCommunitiesNestedInput
    posts?: PostUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUpdateManyWithoutCommunityNestedInput
  }

  export type CommunityUncheckedUpdateWithoutNotificationsInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUncheckedUpdateManyWithoutCommunityNestedInput
  }

  export type CommunityCreateManyCreatorInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
  }

  export type PostCreateManyAuthorInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    community_id: string
  }

  export type CommentCreateManyAuthorInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    parent_comment_id?: string | null
  }

  export type VoteCreateManyUserInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    post_id?: string | null
    comment_id?: string | null
  }

  export type CommunityMembershipCreateManyUserInput = {
    membership_id?: string
    role?: $Enums.MembershipRole
    joined_at?: Date | string
    community_id: string
  }

  export type ModeratorCreateManyUserInput = {
    moderator_id?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: Date | string
    community_id: string
  }

  export type UserUnitEnrollmentCreateManyUserInput = {
    enrollment_id?: string
    enrollment_year: number
    enrollment_semester: string
    status?: $Enums.EnrollmentStatus
    unit_id: string
  }

  export type SavedContentCreateManyUserInput = {
    saved_id?: string
    saved_at?: Date | string
    post_id?: string | null
    comment_id?: string | null
  }

  export type NotificationCreateManyRecipientInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    sender_user_id?: string | null
    related_post_id?: string | null
    related_comment_id?: string | null
    related_community_id?: string | null
  }

  export type NotificationCreateManySenderInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    related_post_id?: string | null
    related_comment_id?: string | null
    related_community_id?: string | null
  }

  export type CommunityUpdateWithoutCreatorInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    related_campus?: CampusUpdateOneWithoutCommunitiesNestedInput
    related_faculty?: FacultyUpdateOneWithoutCommunitiesNestedInput
    related_course?: CourseUpdateOneWithoutCommunitiesNestedInput
    related_unit?: UnitUpdateOneWithoutCommunitiesNestedInput
    posts?: PostUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateWithoutCreatorInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUncheckedUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateManyWithoutCreatorInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PostUpdateWithoutAuthorInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community?: CommunityUpdateOneRequiredWithoutPostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    votes?: VoteUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutPostNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_postNestedInput
  }

  export type PostUncheckedUpdateWithoutAuthorInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_id?: StringFieldUpdateOperationsInput | string
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    votes?: VoteUncheckedUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutPostNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_postNestedInput
  }

  export type PostUncheckedUpdateManyWithoutAuthorInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type CommentUpdateWithoutAuthorInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    parent_comment?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateWithoutAuthorInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUncheckedUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutAuthorInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VoteUpdateWithoutUserInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneWithoutVotesNestedInput
    comment?: CommentUpdateOneWithoutVotesNestedInput
  }

  export type VoteUncheckedUpdateWithoutUserInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VoteUncheckedUpdateManyWithoutUserInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunityMembershipUpdateWithoutUserInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community?: CommunityUpdateOneRequiredWithoutMembersNestedInput
  }

  export type CommunityMembershipUncheckedUpdateWithoutUserInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type CommunityMembershipUncheckedUpdateManyWithoutUserInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type ModeratorUpdateWithoutUserInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community?: CommunityUpdateOneRequiredWithoutModeratorsNestedInput
  }

  export type ModeratorUncheckedUpdateWithoutUserInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type ModeratorUncheckedUpdateManyWithoutUserInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    community_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserUnitEnrollmentUpdateWithoutUserInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    unit?: UnitUpdateOneRequiredWithoutUser_enrollmentsNestedInput
  }

  export type UserUnitEnrollmentUncheckedUpdateWithoutUserInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    unit_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserUnitEnrollmentUncheckedUpdateManyWithoutUserInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    unit_id?: StringFieldUpdateOperationsInput | string
  }

  export type SavedContentUpdateWithoutUserInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneWithoutSaved_by_usersNestedInput
    comment?: CommentUpdateOneWithoutSaved_by_usersNestedInput
  }

  export type SavedContentUncheckedUpdateWithoutUserInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SavedContentUncheckedUpdateManyWithoutUserInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUpdateWithoutRecipientInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: UserUpdateOneWithoutNotifications_sentNestedInput
    related_post?: PostUpdateOneWithoutNotificationsNestedInput
    related_comment?: CommentUpdateOneWithoutNotificationsNestedInput
    related_community?: CommunityUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutRecipientInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutRecipientInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUpdateWithoutSenderInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient?: UserUpdateOneRequiredWithoutNotifications_receivedNestedInput
    related_post?: PostUpdateOneWithoutNotificationsNestedInput
    related_comment?: CommentUpdateOneWithoutNotificationsNestedInput
    related_community?: CommunityUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutSenderInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutSenderInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateManyCampusInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    faculty_id?: string | null
    course_id?: string | null
  }

  export type CommunityCreateManyRelated_campusInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_faculty_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
  }

  export type UserUpdateWithoutCampusInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutCampusInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCampusInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunityUpdateWithoutRelated_campusInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreated_communitiesNestedInput
    related_faculty?: FacultyUpdateOneWithoutCommunitiesNestedInput
    related_course?: CourseUpdateOneWithoutCommunitiesNestedInput
    related_unit?: UnitUpdateOneWithoutCommunitiesNestedInput
    posts?: PostUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateWithoutRelated_campusInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUncheckedUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateManyWithoutRelated_campusInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateManyFacultyInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    course_id?: string | null
  }

  export type CourseCreateManyFacultyInput = {
    course_id?: string
    course_code: string
    course_name: string
    course_description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type UnitCreateManyFacultyInput = {
    unit_id?: string
    unit_code: string
    unit_name: string
    unit_description?: string | null
    semester_offered?: string | null
    year_level?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type CommunityCreateManyRelated_facultyInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_course_id?: string | null
    related_unit_id?: string | null
  }

  export type UserUpdateWithoutFacultyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    course?: CourseUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutFacultyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateManyWithoutFacultyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    course_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CourseUpdateWithoutFacultyInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutCourseNestedInput
    communities?: CommunityUpdateManyWithoutRelated_courseNestedInput
  }

  export type CourseUncheckedUpdateWithoutFacultyInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutCourseNestedInput
    communities?: CommunityUncheckedUpdateManyWithoutRelated_courseNestedInput
  }

  export type CourseUncheckedUpdateManyWithoutFacultyInput = {
    course_id?: StringFieldUpdateOperationsInput | string
    course_code?: StringFieldUpdateOperationsInput | string
    course_name?: StringFieldUpdateOperationsInput | string
    course_description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UnitUpdateWithoutFacultyInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    communities?: CommunityUpdateManyWithoutRelated_unitNestedInput
    user_enrollments?: UserUnitEnrollmentUpdateManyWithoutUnitNestedInput
  }

  export type UnitUncheckedUpdateWithoutFacultyInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    communities?: CommunityUncheckedUpdateManyWithoutRelated_unitNestedInput
    user_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUnitNestedInput
  }

  export type UnitUncheckedUpdateManyWithoutFacultyInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    unit_code?: StringFieldUpdateOperationsInput | string
    unit_name?: StringFieldUpdateOperationsInput | string
    unit_description?: NullableStringFieldUpdateOperationsInput | string | null
    semester_offered?: NullableStringFieldUpdateOperationsInput | string | null
    year_level?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommunityUpdateWithoutRelated_facultyInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreated_communitiesNestedInput
    related_campus?: CampusUpdateOneWithoutCommunitiesNestedInput
    related_course?: CourseUpdateOneWithoutCommunitiesNestedInput
    related_unit?: UnitUpdateOneWithoutCommunitiesNestedInput
    posts?: PostUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateWithoutRelated_facultyInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUncheckedUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateManyWithoutRelated_facultyInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateManyCourseInput = {
    user_id?: string
    monash_email: string
    username: string
    password_hash: string
    first_name?: string | null
    last_name?: string | null
    profile_picture_url?: string | null
    bio?: string | null
    karma_points?: number
    year_of_study?: number | null
    is_verified_student?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    campus_id?: string | null
    faculty_id?: string | null
  }

  export type CommunityCreateManyRelated_courseInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_unit_id?: string | null
  }

  export type UserUpdateWithoutCourseInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus?: CampusUpdateOneWithoutUsersNestedInput
    faculty?: FacultyUpdateOneWithoutUsersNestedInput
    created_communities?: CommunityUpdateManyWithoutCreatorNestedInput
    posts?: PostUpdateManyWithoutAuthorNestedInput
    comments?: CommentUpdateManyWithoutAuthorNestedInput
    votes?: VoteUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateWithoutCourseInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_communities?: CommunityUncheckedUpdateManyWithoutCreatorNestedInput
    posts?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    comments?: CommentUncheckedUpdateManyWithoutAuthorNestedInput
    votes?: VoteUncheckedUpdateManyWithoutUserNestedInput
    memberships?: CommunityMembershipUncheckedUpdateManyWithoutUserNestedInput
    moderated_communities?: ModeratorUncheckedUpdateManyWithoutUserNestedInput
    unit_enrollments?: UserUnitEnrollmentUncheckedUpdateManyWithoutUserNestedInput
    saved_content?: SavedContentUncheckedUpdateManyWithoutUserNestedInput
    notifications_received?: NotificationUncheckedUpdateManyWithoutRecipientNestedInput
    notifications_sent?: NotificationUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCourseInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    monash_email?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture_url?: NullableStringFieldUpdateOperationsInput | string | null
    bio?: NullableStringFieldUpdateOperationsInput | string | null
    karma_points?: IntFieldUpdateOperationsInput | number
    year_of_study?: NullableIntFieldUpdateOperationsInput | number | null
    is_verified_student?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunityUpdateWithoutRelated_courseInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreated_communitiesNestedInput
    related_campus?: CampusUpdateOneWithoutCommunitiesNestedInput
    related_faculty?: FacultyUpdateOneWithoutCommunitiesNestedInput
    related_unit?: UnitUpdateOneWithoutCommunitiesNestedInput
    posts?: PostUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateWithoutRelated_courseInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUncheckedUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateManyWithoutRelated_courseInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_unit_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommunityCreateManyRelated_unitInput = {
    community_id?: string
    name: string
    display_name: string
    description?: string | null
    community_type?: $Enums.CommunityType
    profile_image_url?: string | null
    banner_image_url?: string | null
    is_private?: boolean
    rules?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    creator_id: string
    related_campus_id?: string | null
    related_faculty_id?: string | null
    related_course_id?: string | null
  }

  export type UserUnitEnrollmentCreateManyUnitInput = {
    enrollment_id?: string
    enrollment_year: number
    enrollment_semester: string
    status?: $Enums.EnrollmentStatus
    user_id: string
  }

  export type CommunityUpdateWithoutRelated_unitInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator?: UserUpdateOneRequiredWithoutCreated_communitiesNestedInput
    related_campus?: CampusUpdateOneWithoutCommunitiesNestedInput
    related_faculty?: FacultyUpdateOneWithoutCommunitiesNestedInput
    related_course?: CourseUpdateOneWithoutCommunitiesNestedInput
    posts?: PostUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateWithoutRelated_unitInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
    posts?: PostUncheckedUpdateManyWithoutCommunityNestedInput
    members?: CommunityMembershipUncheckedUpdateManyWithoutCommunityNestedInput
    moderators?: ModeratorUncheckedUpdateManyWithoutCommunityNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_communityNestedInput
  }

  export type CommunityUncheckedUpdateManyWithoutRelated_unitInput = {
    community_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    display_name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    community_type?: EnumCommunityTypeFieldUpdateOperationsInput | $Enums.CommunityType
    profile_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    banner_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_private?: BoolFieldUpdateOperationsInput | boolean
    rules?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    creator_id?: StringFieldUpdateOperationsInput | string
    related_campus_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_faculty_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_course_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUnitEnrollmentUpdateWithoutUnitInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    user?: UserUpdateOneRequiredWithoutUnit_enrollmentsNestedInput
  }

  export type UserUnitEnrollmentUncheckedUpdateWithoutUnitInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserUnitEnrollmentUncheckedUpdateManyWithoutUnitInput = {
    enrollment_id?: StringFieldUpdateOperationsInput | string
    enrollment_year?: IntFieldUpdateOperationsInput | number
    enrollment_semester?: StringFieldUpdateOperationsInput | string
    status?: EnumEnrollmentStatusFieldUpdateOperationsInput | $Enums.EnrollmentStatus
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type PostCreateManyCommunityInput = {
    post_id?: string
    title: string
    content_type: $Enums.PostContentType
    text_content?: string | null
    media_url?: string | null
    upvotes?: number
    downvotes?: number
    score?: number
    flair_text?: string | null
    is_stickied?: boolean
    is_locked?: boolean
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
  }

  export type CommunityMembershipCreateManyCommunityInput = {
    membership_id?: string
    role?: $Enums.MembershipRole
    joined_at?: Date | string
    user_id: string
  }

  export type ModeratorCreateManyCommunityInput = {
    moderator_id?: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: Date | string
    user_id: string
  }

  export type NotificationCreateManyRelated_communityInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    sender_user_id?: string | null
    related_post_id?: string | null
    related_comment_id?: string | null
  }

  export type PostUpdateWithoutCommunityInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: UserUpdateOneRequiredWithoutPostsNestedInput
    comments?: CommentUpdateManyWithoutPostNestedInput
    votes?: VoteUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutPostNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_postNestedInput
  }

  export type PostUncheckedUpdateWithoutCommunityInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    comments?: CommentUncheckedUpdateManyWithoutPostNestedInput
    votes?: VoteUncheckedUpdateManyWithoutPostNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutPostNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_postNestedInput
  }

  export type PostUncheckedUpdateManyWithoutCommunityInput = {
    post_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content_type?: EnumPostContentTypeFieldUpdateOperationsInput | $Enums.PostContentType
    text_content?: NullableStringFieldUpdateOperationsInput | string | null
    media_url?: NullableStringFieldUpdateOperationsInput | string | null
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    flair_text?: NullableStringFieldUpdateOperationsInput | string | null
    is_stickied?: BoolFieldUpdateOperationsInput | boolean
    is_locked?: BoolFieldUpdateOperationsInput | boolean
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type CommunityMembershipUpdateWithoutCommunityInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutMembershipsNestedInput
  }

  export type CommunityMembershipUncheckedUpdateWithoutCommunityInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type CommunityMembershipUncheckedUpdateManyWithoutCommunityInput = {
    membership_id?: StringFieldUpdateOperationsInput | string
    role?: EnumMembershipRoleFieldUpdateOperationsInput | $Enums.MembershipRole
    joined_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type ModeratorUpdateWithoutCommunityInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutModerated_communitiesNestedInput
  }

  export type ModeratorUncheckedUpdateWithoutCommunityInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type ModeratorUncheckedUpdateManyWithoutCommunityInput = {
    moderator_id?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    appointed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type NotificationUpdateWithoutRelated_communityInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient?: UserUpdateOneRequiredWithoutNotifications_receivedNestedInput
    sender?: UserUpdateOneWithoutNotifications_sentNestedInput
    related_post?: PostUpdateOneWithoutNotificationsNestedInput
    related_comment?: CommentUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutRelated_communityInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutRelated_communityInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentCreateManyPostInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    user_id: string
    parent_comment_id?: string | null
  }

  export type VoteCreateManyPostInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    user_id: string
    comment_id?: string | null
  }

  export type SavedContentCreateManyPostInput = {
    saved_id?: string
    saved_at?: Date | string
    user_id: string
    comment_id?: string | null
  }

  export type NotificationCreateManyRelated_postInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    sender_user_id?: string | null
    related_comment_id?: string | null
    related_community_id?: string | null
  }

  export type CommentUpdateWithoutPostInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: UserUpdateOneRequiredWithoutCommentsNestedInput
    parent_comment?: CommentUpdateOneWithoutRepliesNestedInput
    replies?: CommentUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateWithoutPostInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    replies?: CommentUncheckedUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUncheckedUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutPostInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    parent_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VoteUpdateWithoutPostInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutVotesNestedInput
    comment?: CommentUpdateOneWithoutVotesNestedInput
  }

  export type VoteUncheckedUpdateWithoutPostInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VoteUncheckedUpdateManyWithoutPostInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SavedContentUpdateWithoutPostInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSaved_contentNestedInput
    comment?: CommentUpdateOneWithoutSaved_by_usersNestedInput
  }

  export type SavedContentUncheckedUpdateWithoutPostInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SavedContentUncheckedUpdateManyWithoutPostInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    comment_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUpdateWithoutRelated_postInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient?: UserUpdateOneRequiredWithoutNotifications_receivedNestedInput
    sender?: UserUpdateOneWithoutNotifications_sentNestedInput
    related_comment?: CommentUpdateOneWithoutNotificationsNestedInput
    related_community?: CommunityUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutRelated_postInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutRelated_postInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_comment_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CommentCreateManyParent_commentInput = {
    comment_id?: string
    content: string
    upvotes?: number
    downvotes?: number
    score?: number
    is_deleted?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    post_id: string
    user_id: string
  }

  export type VoteCreateManyCommentInput = {
    vote_id?: string
    vote_type: $Enums.VoteType
    created_at?: Date | string
    user_id: string
    post_id?: string | null
  }

  export type SavedContentCreateManyCommentInput = {
    saved_id?: string
    saved_at?: Date | string
    user_id: string
    post_id?: string | null
  }

  export type NotificationCreateManyRelated_commentInput = {
    notification_id?: string
    type: $Enums.NotificationType
    content_preview?: string | null
    is_read?: boolean
    created_at?: Date | string
    recipient_user_id: string
    sender_user_id?: string | null
    related_post_id?: string | null
    related_community_id?: string | null
  }

  export type CommentUpdateWithoutParent_commentInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post?: PostUpdateOneRequiredWithoutCommentsNestedInput
    author?: UserUpdateOneRequiredWithoutCommentsNestedInput
    replies?: CommentUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateWithoutParent_commentInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    replies?: CommentUncheckedUpdateManyWithoutParent_commentNestedInput
    votes?: VoteUncheckedUpdateManyWithoutCommentNestedInput
    saved_by_users?: SavedContentUncheckedUpdateManyWithoutCommentNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutRelated_commentNestedInput
  }

  export type CommentUncheckedUpdateManyWithoutParent_commentInput = {
    comment_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    upvotes?: IntFieldUpdateOperationsInput | number
    downvotes?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    is_deleted?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type VoteUpdateWithoutCommentInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutVotesNestedInput
    post?: PostUpdateOneWithoutVotesNestedInput
  }

  export type VoteUncheckedUpdateWithoutCommentInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VoteUncheckedUpdateManyWithoutCommentInput = {
    vote_id?: StringFieldUpdateOperationsInput | string
    vote_type?: EnumVoteTypeFieldUpdateOperationsInput | $Enums.VoteType
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SavedContentUpdateWithoutCommentInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSaved_contentNestedInput
    post?: PostUpdateOneWithoutSaved_by_usersNestedInput
  }

  export type SavedContentUncheckedUpdateWithoutCommentInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SavedContentUncheckedUpdateManyWithoutCommentInput = {
    saved_id?: StringFieldUpdateOperationsInput | string
    saved_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: StringFieldUpdateOperationsInput | string
    post_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUpdateWithoutRelated_commentInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient?: UserUpdateOneRequiredWithoutNotifications_receivedNestedInput
    sender?: UserUpdateOneWithoutNotifications_sentNestedInput
    related_post?: PostUpdateOneWithoutNotificationsNestedInput
    related_community?: CommunityUpdateOneWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateWithoutRelated_commentInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type NotificationUncheckedUpdateManyWithoutRelated_commentInput = {
    notification_id?: StringFieldUpdateOperationsInput | string
    type?: EnumNotificationTypeFieldUpdateOperationsInput | $Enums.NotificationType
    content_preview?: NullableStringFieldUpdateOperationsInput | string | null
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient_user_id?: StringFieldUpdateOperationsInput | string
    sender_user_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_post_id?: NullableStringFieldUpdateOperationsInput | string | null
    related_community_id?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}